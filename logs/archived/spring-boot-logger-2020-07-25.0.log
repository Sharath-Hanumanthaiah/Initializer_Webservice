2020-07-25 00:03:11,405 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:03:11,412 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 00:03:11,414 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:03:11,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2433906e)
2020-07-25 00:03:11,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cf18f68)
2020-07-25 00:03:11,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d1fd9bd)
2020-07-25 00:03:11,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21757897)
2020-07-25 00:03:11,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:03:11,447 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 00:03:11,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:03:11,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49531f4a)
2020-07-25 00:03:11,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b14a67f)
2020-07-25 00:03:11,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4596c3b4)
2020-07-25 00:03:11,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:11,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65934ca1)
2020-07-25 00:03:17,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:03:17,944 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:03:28,309 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2, status=Active}} for Document{{}} fields.
2020-07-25 00:03:28,311 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:03:28,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Fresh, sellerName=thavare, disclaimer=best for 2 weeks}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614256/mjd3p2ktjdvt8dqkjlfm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614645/b0hkm4kshswif5ds3fro.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614768/iyfpq5uoqnxpti0ktni9.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615174/y71b2aqiy5xbjsedz38d.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:03:28,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Fresh, sellerName=thavare, disclaimer=best for 2 weeks}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614256/mjd3p2ktjdvt8dqkjlfm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614645/b0hkm4kshswif5ds3fro.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614768/iyfpq5uoqnxpti0ktni9.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615174/y71b2aqiy5xbjsedz38d.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@552bdf9c)
2020-07-25 00:03:31,115 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@552bdf9c, Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Fresh, sellerName=thavare, disclaimer=best for 2 weeks}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614256/mjd3p2ktjdvt8dqkjlfm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614645/b0hkm4kshswif5ds3fro.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614768/iyfpq5uoqnxpti0ktni9.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615174/y71b2aqiy5xbjsedz38d.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615610/ie6kjmleqfinrueu0ghr.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:03:31,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 00:03:31,124 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@552bdf9c, Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Fresh, sellerName=thavare, disclaimer=best for 2 weeks}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614256/mjd3p2ktjdvt8dqkjlfm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614645/b0hkm4kshswif5ds3fro.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614768/iyfpq5uoqnxpti0ktni9.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615174/y71b2aqiy5xbjsedz38d.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615610/ie6kjmleqfinrueu0ghr.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:03:46,147 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:03:46,154 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 00:03:46,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:03:46,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41753a6c)
2020-07-25 00:03:46,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a95b713)
2020-07-25 00:03:46,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@239f5944)
2020-07-25 00:03:46,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@621dd2b9)
2020-07-25 00:03:46,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:03:46,194 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 00:03:46,196 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:03:46,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33fdfdbe)
2020-07-25 00:03:46,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12410989)
2020-07-25 00:03:46,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7df959a9)
2020-07-25 00:03:46,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:46,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6eb2da7a)
2020-07-25 00:03:54,000 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:03:54,089 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:03:54,118 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:03:56,113 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:03:56,121 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 00:03:56,123 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:03:56,126 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13c02609)
2020-07-25 00:03:56,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59f46b66)
2020-07-25 00:03:56,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58bede90)
2020-07-25 00:03:56,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b8ba6e6)
2020-07-25 00:03:56,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,134 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9693bf0)
2020-07-25 00:03:56,135 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,136 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73bccee0)
2020-07-25 00:03:56,137 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,138 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dd8d459)
2020-07-25 00:03:56,139 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b22f592)
2020-07-25 00:03:56,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:03:56,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bd4fbbd)
2020-07-25 00:04:00,280 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:04:00,284 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:04:29,388 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-25 00:04:29,389 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:04:29,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:04:29,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4019e248)
2020-07-25 00:04:39,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4019e248, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:04:39,587 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 00:04:39,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4019e248, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:04:41,375 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:04:41,382 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 00:04:41,391 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:04:41,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@592c1422)
2020-07-25 00:04:41,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@efdaaff)
2020-07-25 00:04:41,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@114c90ef)
2020-07-25 00:04:41,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6371ed5d)
2020-07-25 00:04:41,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a457815)
2020-07-25 00:04:41,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@398c8bf0)
2020-07-25 00:04:41,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,405 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c32afc6)
2020-07-25 00:04:41,405 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2045b818)
2020-07-25 00:04:41,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51b1e9d5)
2020-07-25 00:04:41,452 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:04:41,463 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 00:04:41,466 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:04:41,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,472 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@234e405f)
2020-07-25 00:04:41,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49324dd2)
2020-07-25 00:04:41,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57b76515)
2020-07-25 00:04:41,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c7d5ce3)
2020-07-25 00:04:41,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@de0a38b)
2020-07-25 00:04:41,483 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56e73338)
2020-07-25 00:04:41,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a147b3c)
2020-07-25 00:04:41,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c38b2d9)
2020-07-25 00:04:41,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:04:41,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44cb42e)
2020-07-25 00:06:10,297 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:06:10,302 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 00:06:10,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:06:10,307 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6dfea354)
2020-07-25 00:06:10,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54b73500)
2020-07-25 00:06:10,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e41406e)
2020-07-25 00:06:10,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31d19670)
2020-07-25 00:06:10,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@292d671d)
2020-07-25 00:06:10,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@445f580d)
2020-07-25 00:06:10,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@401932d8)
2020-07-25 00:06:10,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d465ebd)
2020-07-25 00:06:10,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f91db87)
2020-07-25 00:06:10,330 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:06:10,335 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 00:06:10,337 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:06:10,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58539bbe)
2020-07-25 00:06:10,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48d1ec01)
2020-07-25 00:06:10,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f64bb82)
2020-07-25 00:06:10,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12478df4)
2020-07-25 00:06:10,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@560d6a69)
2020-07-25 00:06:10,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@117b254d)
2020-07-25 00:06:10,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b29344b)
2020-07-25 00:06:10,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@552f2ef7)
2020-07-25 00:06:10,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:10,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68cc4819)
2020-07-25 00:06:16,326 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:06:16,331 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:06:23,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:06:23,152 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:06:23,170 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:06:25,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:06:25,897 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 00:06:25,898 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:06:25,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fb146e0)
2020-07-25 00:06:25,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2354be82)
2020-07-25 00:06:25,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bf53ee)
2020-07-25 00:06:25,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dfe62fa)
2020-07-25 00:06:25,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68edade3)
2020-07-25 00:06:25,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ecbbed2)
2020-07-25 00:06:25,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1693b0c6)
2020-07-25 00:06:25,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18f4e95c)
2020-07-25 00:06:25,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:25,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1df3cd14)
2020-07-25 00:06:27,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:06:27,359 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:06:32,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:06:32,272 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:06:32,282 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:06:43,459 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:06:43,468 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-07-25 00:06:43,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:06:43,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:43,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7372bbca)
2020-07-25 00:06:43,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:06:43,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56c9a64d)
2020-07-25 00:06:46,558 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:06:46,561 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:07:14,875 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-25 00:07:14,876 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:07:14,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:07:14,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@a5332cc)
2020-07-25 00:07:18,624 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@a5332cc, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:07:18,624 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 00:07:18,626 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@a5332cc, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:08:39,174 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-25 00:08:39,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:08:39,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:08:39,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@604bb506)
2020-07-25 00:08:42,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@604bb506, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615921/qlaczjgsskausjhn1zyf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:08:42,146 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 00:08:42,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@604bb506, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615921/qlaczjgsskausjhn1zyf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:10:41,819 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:10:41,823 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-07-25 00:10:41,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:10:41,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:10:41,827 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52c9b226)
2020-07-25 00:10:41,827 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:10:41,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59dd7ab)
2020-07-25 00:10:41,836 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:10:41,840 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-07-25 00:10:41,841 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:10:41,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:10:41,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71625b2e)
2020-07-25 00:10:41,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:10:41,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@348566a7)
2020-07-25 00:10:46,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:10:46,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:10:54,507 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-25 00:10:54,511 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:10:54,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615921/qlaczjgsskausjhn1zyf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:10:54,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615921/qlaczjgsskausjhn1zyf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@28d4715e)
2020-07-25 00:10:58,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@28d4715e, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615921/qlaczjgsskausjhn1zyf.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616058/is1erbmyimk7dhd78x1a.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:10:58,785 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 00:10:58,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@28d4715e, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615837/yaykz6mfqxril6zjvvm8.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615921/qlaczjgsskausjhn1zyf.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616058/is1erbmyimk7dhd78x1a.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:11:44,591 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:11:44,675 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:11:44,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:13:34,632 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:13:34,761 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:13:34,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:14:07,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:08,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:14:08,079 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:14:12,933 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:13,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:14:13,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:14:14,613 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:14,616 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 00:14:14,617 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:14:14,618 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:14:14,619 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19db654b)
2020-07-25 00:14:14,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:14:14,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@434baeb2)
2020-07-25 00:14:14,621 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:14:14,621 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d7044b5)
2020-07-25 00:14:14,622 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:14:14,623 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a65b40b)
2020-07-25 00:14:17,672 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:17,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:14:17,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:14:20,754 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:20,760 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-25 00:14:20,762 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:14:35,441 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=4, status=Active}} for Document{{}} fields.
2020-07-25 00:14:35,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "4"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:14:35,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:14:35,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7c59f606)
2020-07-25 00:14:47,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7c59f606, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616277/iccrrmm6xffyjeyqxei4.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616282/ofosnv6m46afuitrgbqp.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616287/larmdwnatv5teckrbwql.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:14:47,907 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 00:14:47,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7c59f606, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616277/iccrrmm6xffyjeyqxei4.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616282/ofosnv6m46afuitrgbqp.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616287/larmdwnatv5teckrbwql.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:14:53,091 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:53,098 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-25 00:14:53,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:14:53,119 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:53,136 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-25 00:14:53,137 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:14:56,287 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:14:56,313 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:14:56,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:15:08,910 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:15:08,915 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:15:08,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:15:08,918 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:15:08,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4835eeba)
2020-07-25 00:15:08,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:15:08,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ea2f28f)
2020-07-25 00:15:08,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:15:08,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5110b48f)
2020-07-25 00:15:34,051 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=5, status=Active}} for Document{{}} fields.
2020-07-25 00:15:34,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "5"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:15:34,060 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ImageServiceImpl.addNewImage(ImageServiceImpl.java:32)
	at com.initializers.services.apiservices.controller.AdminController.uploadImage(AdminController.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-25 00:16:30,713 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=5, status=Active}} for Document{{}} fields.
2020-07-25 00:16:30,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "5"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:17:43,149 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 12572 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-25 00:17:43,150 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-25 00:17:43,151 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-25 00:17:44,141 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-25 00:17:44,144 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-25 00:17:44,161 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-25 00:17:44,162 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-25 00:17:44,163 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-25 00:17:44,163 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-25 00:17:44,164 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-25 00:17:44,164 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-25 00:17:44,164 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-25 00:17:44,165 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-25 00:17:44,165 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-25 00:17:44,165 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-25 00:17:44,165 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-25 00:17:44,166 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-25 00:17:44,166 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-25 00:17:44,166 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-25 00:17:44,167 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-25 00:17:44,305 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-25 00:17:44,306 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-25 00:17:44,316 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 171ms. Found 15 MongoDB repository interfaces.
2020-07-25 00:17:44,984 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 00:17:44,985 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 00:17:45,225 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 00:17:45,228 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 00:17:45,234 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-25 00:17:45,242 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-25 00:17:45,243 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-25 00:17:45,244 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-25 00:17:45,245 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-25 00:17:45,246 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-25 00:17:45,247 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-25 00:17:45,248 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-25 00:17:45,250 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-25 00:17:45,251 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-25 00:17:45,251 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-25 00:17:45,252 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-25 00:17:45,253 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-25 00:17:45,257 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-25 00:17:45,257 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-25 00:17:45,258 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-25 00:17:45,259 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-25 00:17:45,260 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-25 00:17:45,260 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-25 00:17:45,260 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-25 00:17:45,261 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-25 00:17:48,089 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-25 00:17:48,100 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-25 00:17:48,108 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-25 00:17:48,117 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-25 00:17:48,127 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-25 00:17:48,138 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-25 00:17:48,144 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-25 00:17:48,155 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-25 00:17:48,198 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-25 00:17:48,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-25 00:17:48,222 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-25 00:17:48,233 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-25 00:17:48,244 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-25 00:17:48,253 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-25 00:17:48,263 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-25 00:17:48,271 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-25 00:17:48,288 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-25 00:17:48,299 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-25 00:17:48,311 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-25 00:17:48,322 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-25 00:17:48,328 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-25 00:17:48,342 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-25 00:17:48,352 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-25 00:17:48,361 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-25 00:17:48,385 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-25 00:17:48,391 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-25 00:17:48,401 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-25 00:17:48,409 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-25 00:17:48,492 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-25 00:17:48,494 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 00:17:48,495 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-25 00:17:48,495 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 00:17:48,572 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-25 00:17:48,620 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-25 00:17:49,005 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-25 00:17:49,015 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-25 00:17:49,018 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-25 00:17:49,124 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 6.053 seconds (JVM running for 1519.298)
2020-07-25 00:18:04,797 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:18:04,852 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-25 00:18:04,911 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:18:04,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:18:04,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:18:04,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71dbe48b)
2020-07-25 00:18:04,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:18:04,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@480bfce7)
2020-07-25 00:18:04,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:18:04,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55152bf2)
2020-07-25 00:18:04,973 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:18:04,986 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:18:04,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:18:04,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:18:04,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@99220ba)
2020-07-25 00:18:04,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:18:04,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@330a2e2a)
2020-07-25 00:18:04,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:18:05,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5609623e)
2020-07-25 00:18:41,512 ERROR org.springframework.web.servlet.HandlerExecutionChain [http-nio-8080-exec-6] HandlerInterceptor.afterCompletion threw exception
java.lang.NullPointerException: null
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.stopLongTaskTimers(LongTaskTimingHandlerInterceptor.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.afterCompletion(LongTaskTimingHandlerInterceptor.java:79)
	at org.springframework.web.servlet.HandlerExecutionChain.triggerAfterCompletion(HandlerExecutionChain.java:179)
	at org.springframework.web.servlet.DispatcherServlet.triggerAfterCompletion(DispatcherServlet.java:1427)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-25 00:18:41,521 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at io.micrometer.core.instrument.ImmutableTag.<init>(ImmutableTag.java:35)
	at io.micrometer.core.instrument.Tag.of(Tag.java:29)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcTags.method(WebMvcTags.java:74)
	at org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider.getTags(DefaultWebMvcTagsProvider.java:46)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.getTimer(WebMvcMetricsFilter.java:185)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.record(WebMvcMetricsFilter.java:145)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-25 00:18:41,526 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Error processing request
java.lang.NullPointerException: null
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:412)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-25 00:18:47,066 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=5}} for Document{{}} fields.
2020-07-25 00:18:47,103 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 00:18:47,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:18:47,789 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6fe1b050)
2020-07-25 00:19:00,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6fe1b050, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:19:00,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 00:19:00,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6fe1b050, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 00:19:03,739 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:19:03,745 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:19:03,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:19:03,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:19:03,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f175c0c)
2020-07-25 00:19:03,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:19:03,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36970b8e)
2020-07-25 00:19:03,757 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:19:03,758 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bf3ecda)
2020-07-25 00:19:03,769 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:19:03,777 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:19:03,778 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:19:03,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:19:03,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f8f4b87)
2020-07-25 00:19:03,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:19:03,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71eeb70e)
2020-07-25 00:19:03,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:19:03,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b1590e5)
2020-07-25 00:19:06,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:19:06,760 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:19:06,773 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-8] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-25 00:19:06,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:19:15,950 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:19:16,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:19:16,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:28:19,927 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:28:19,927 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:28:19,929 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:28:25,516 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:28:25,520 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-25 00:28:25,522 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:28:35,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:28:35,452 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-25 00:28:35,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:28:35,466 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:28:35,471 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-25 00:28:35,474 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:28:44,351 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:28:44,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:28:44,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:28:46,631 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:28:46,634 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:28:46,638 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:28:46,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:28:46,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51882599)
2020-07-25 00:28:46,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:28:46,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42302732)
2020-07-25 00:28:46,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:28:46,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@538c5007)
2020-07-25 00:29:29,808 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:29:29,812 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:29:29,813 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:29:29,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:29,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ce0c0a9)
2020-07-25 00:29:29,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:29,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ade5247)
2020-07-25 00:29:29,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:29,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63629108)
2020-07-25 00:29:29,838 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:29:29,843 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:29:29,844 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:29:29,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:29,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5737a45b)
2020-07-25 00:29:29,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:29,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4046989d)
2020-07-25 00:29:29,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:29,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dd087ba)
2020-07-25 00:29:38,240 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:29:38,311 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:29:38,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:29:40,849 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:29:40,854 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:29:40,855 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:29:40,857 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:40,857 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ad54c24)
2020-07-25 00:29:40,857 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:40,858 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4967d3fa)
2020-07-25 00:29:40,858 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:29:40,858 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63afefd9)
2020-07-25 00:30:55,593 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:30:55,602 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:30:55,603 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:30:55,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:30:55,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38d82a27)
2020-07-25 00:30:55,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:30:55,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e46ad89)
2020-07-25 00:30:55,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:30:55,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b3703f9)
2020-07-25 00:30:55,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:30:55,623 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:30:55,624 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:30:55,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:30:55,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1430b5e5)
2020-07-25 00:30:55,632 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:30:55,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@790e0560)
2020-07-25 00:30:55,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:30:55,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32f30e69)
2020-07-25 00:31:25,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:31:25,473 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:31:25,474 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:31:25,483 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:31:25,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@643ae456)
2020-07-25 00:31:25,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:31:25,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3da1ced)
2020-07-25 00:31:25,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:31:25,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b858412)
2020-07-25 00:31:25,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:31:25,508 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:31:25,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:31:25,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:31:25,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24febe95)
2020-07-25 00:31:25,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:31:25,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ff427cf)
2020-07-25 00:31:25,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:31:25,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32d5bd55)
2020-07-25 00:32:47,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:32:47,376 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:32:47,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:32:47,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:32:47,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27fa4db8)
2020-07-25 00:32:47,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:32:47,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@376b010f)
2020-07-25 00:32:47,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:32:47,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d616e46)
2020-07-25 00:32:47,406 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:32:47,411 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:32:47,412 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:32:47,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:32:47,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@576d438e)
2020-07-25 00:32:47,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:32:47,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7714e5f3)
2020-07-25 00:32:47,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:32:47,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17f2bdfe)
2020-07-25 00:33:08,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:33:08,529 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:33:08,532 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:33:08,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:08,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c505543)
2020-07-25 00:33:08,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:08,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a3d1f5c)
2020-07-25 00:33:08,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:08,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7861f240)
2020-07-25 00:33:08,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:33:08,561 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:33:08,563 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:33:08,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:08,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b9a100c)
2020-07-25 00:33:08,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:08,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7755a92c)
2020-07-25 00:33:08,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:08,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e436590)
2020-07-25 00:33:12,393 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:33:12,399 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:33:12,404 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:33:12,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:12,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ff42943)
2020-07-25 00:33:12,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:12,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c228191)
2020-07-25 00:33:12,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:12,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76839212)
2020-07-25 00:33:12,420 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:33:12,428 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:33:12,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:33:12,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:12,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45f7e6a8)
2020-07-25 00:33:12,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:12,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a88fa9a)
2020-07-25 00:33:12,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:12,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d859cdc)
2020-07-25 00:33:17,630 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:33:17,632 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:33:24,927 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:33:25,003 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:33:25,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:33:28,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:33:28,881 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:33:28,882 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:33:28,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:28,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f63aea7)
2020-07-25 00:33:28,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:28,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3632fc4a)
2020-07-25 00:33:28,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:33:28,885 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2030b4a9)
2020-07-25 00:34:36,153 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:34:36,156 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:34:36,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:34:36,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:34:36,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@194d8bbe)
2020-07-25 00:34:36,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:34:36,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48dfe296)
2020-07-25 00:34:36,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:34:36,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b110087)
2020-07-25 00:34:36,168 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:34:36,171 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:34:36,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:34:36,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:34:36,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@145fb79c)
2020-07-25 00:34:36,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:34:36,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7863e2)
2020-07-25 00:34:36,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:34:36,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50b02315)
2020-07-25 00:35:27,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:35:27,455 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:35:27,456 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:35:27,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:35:27,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ee98d14)
2020-07-25 00:35:27,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:35:27,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e715e54)
2020-07-25 00:35:27,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:35:27,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67cdb26b)
2020-07-25 00:35:27,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:35:27,476 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:35:27,477 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:35:27,480 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:35:27,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62c0f960)
2020-07-25 00:35:27,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:35:27,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66f50131)
2020-07-25 00:35:27,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:35:27,483 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f324f0d)
2020-07-25 00:37:30,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:37:30,664 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:37:30,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:37:30,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:37:30,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58819643)
2020-07-25 00:37:30,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:37:30,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@265ac11e)
2020-07-25 00:37:30,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:37:30,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3881b79b)
2020-07-25 00:37:30,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:37:30,693 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:37:30,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:37:30,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:37:30,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41591fd2)
2020-07-25 00:37:30,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:37:30,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b148194)
2020-07-25 00:37:30,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:37:30,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ed1f6b)
2020-07-25 00:37:52,590 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:37:52,597 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:37:58,134 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:37:58,236 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 00:37:58,240 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 00:38:00,399 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 00:38:00,402 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 00:38:00,403 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 00:38:00,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:38:00,405 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c95cb66)
2020-07-25 00:38:00,405 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:38:00,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a22892b)
2020-07-25 00:38:00,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 00:38:00,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fe12b4e)
2020-07-25 13:52:58,234 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 4576 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-25 13:52:58,317 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-25 13:52:58,318 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-25 13:53:02,456 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-25 13:53:02,494 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-25 13:53:02,585 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-25 13:53:02,586 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-25 13:53:02,586 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-25 13:53:02,587 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-25 13:53:02,588 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-25 13:53:02,588 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-25 13:53:02,589 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-25 13:53:02,589 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-25 13:53:02,590 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-25 13:53:02,590 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-25 13:53:02,591 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-25 13:53:02,592 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-25 13:53:02,592 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-25 13:53:02,593 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-25 13:53:02,594 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-25 13:53:02,806 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-25 13:53:02,808 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-25 13:53:02,821 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 325ms. Found 15 MongoDB repository interfaces.
2020-07-25 13:53:07,741 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 13:53:07,743 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 13:53:08,066 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 13:53:08,067 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 13:53:08,184 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-25 13:53:08,199 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-25 13:53:08,201 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-25 13:53:08,203 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-25 13:53:08,204 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-25 13:53:08,206 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-25 13:53:08,207 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-25 13:53:08,208 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-25 13:53:08,209 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-25 13:53:08,212 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-25 13:53:08,214 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-25 13:53:08,214 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-25 13:53:08,215 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-25 13:53:08,218 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-25 13:53:08,220 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-25 13:53:08,221 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-25 13:53:08,222 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-25 13:53:08,222 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-25 13:53:08,224 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-25 13:53:08,226 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-25 13:53:08,227 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-25 13:53:12,899 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-25 13:53:13,102 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-25 13:53:13,120 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-25 13:53:13,141 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-25 13:53:13,157 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-25 13:53:13,182 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-25 13:53:13,192 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-25 13:53:13,210 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-25 13:53:13,353 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-25 13:53:13,361 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-25 13:53:13,382 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-25 13:53:13,395 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-25 13:53:13,405 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-25 13:53:13,416 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-25 13:53:13,428 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-25 13:53:13,435 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-25 13:53:13,456 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-25 13:53:13,469 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-25 13:53:13,490 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-25 13:53:13,509 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-25 13:53:13,517 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-25 13:53:13,532 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-25 13:53:13,546 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-25 13:53:13,556 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-25 13:53:13,594 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-25 13:53:13,603 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-25 13:53:13,617 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-25 13:53:13,626 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-25 13:53:13,733 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-25 13:53:13,737 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 13:53:13,738 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-25 13:53:13,738 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 13:53:14,021 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-25 13:53:14,027 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-25 13:53:15,808 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-25 13:53:15,837 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-25 13:53:15,842 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-25 13:53:16,312 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 20.076 seconds (JVM running for 22.823)
2020-07-25 13:53:33,190 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 13:53:33,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:53:33,201 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 13:53:33,505 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-25 13:53:33,692 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-25 13:53:38,958 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:53:39,073 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:53:39,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:53:39,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:53:39,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2be0a4d2)
2020-07-25 13:53:39,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:53:39,212 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bcf0be3)
2020-07-25 13:53:39,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:53:39,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15ce7be)
2020-07-25 13:55:23,362 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:55:23,369 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:55:23,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:55:23,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:23,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@606b8609)
2020-07-25 13:55:23,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:23,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@556e45cc)
2020-07-25 13:55:23,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:23,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38908c11)
2020-07-25 13:55:23,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:55:23,408 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:55:23,410 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:55:23,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:23,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a693fac)
2020-07-25 13:55:23,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:23,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5383a023)
2020-07-25 13:55:23,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:23,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dc72f19)
2020-07-25 13:55:42,888 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:55:42,893 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:55:42,895 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:55:42,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:42,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30e7f718)
2020-07-25 13:55:42,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:42,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9a9e511)
2020-07-25 13:55:42,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:42,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c791a36)
2020-07-25 13:55:42,923 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:55:42,929 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:55:42,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:55:42,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:42,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@291e89c7)
2020-07-25 13:55:42,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:42,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@345092cc)
2020-07-25 13:55:42,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:55:42,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6096d7fc)
2020-07-25 13:56:05,720 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=5}} for Document{{}} fields.
2020-07-25 13:56:05,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 13:56:05,731 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:05,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1e2e2a68)
2020-07-25 13:56:07,118 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=5}} for Document{{}} fields.
2020-07-25 13:56:07,119 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 13:56:07,126 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:07,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6c95747c)
2020-07-25 13:56:07,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1e2e2a68, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665567/nsyza3t77bcskq2c05xl.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:07,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 13:56:07,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1e2e2a68, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665567/nsyza3t77bcskq2c05xl.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:08,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6c95747c, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:08,589 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 13:56:08,598 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6c95747c, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:15,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:56:15,407 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:56:15,408 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:56:15,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:56:15,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b7af3eb)
2020-07-25 13:56:15,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:56:15,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e1bb5cc)
2020-07-25 13:56:15,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:56:15,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61229630)
2020-07-25 13:56:15,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:56:15,460 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:56:15,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:56:15,472 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:56:15,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8082f59)
2020-07-25 13:56:15,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:56:15,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cf991dc)
2020-07-25 13:56:15,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:56:15,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fe1b6d4)
2020-07-25 13:56:49,569 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=5}} for Document{{}} fields.
2020-07-25 13:56:49,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 13:56:49,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:49,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@592b4a54)
2020-07-25 13:56:51,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@592b4a54, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:56:51,122 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 13:56:51,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@592b4a54, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 13:58:52,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:58:52,520 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:58:52,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:58:52,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:58:52,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37dcc16a)
2020-07-25 13:58:52,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:58:52,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7109ec85)
2020-07-25 13:58:52,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:58:52,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b86bf29)
2020-07-25 13:58:52,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:58:52,568 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:58:52,570 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:58:52,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:58:52,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6dd1df74)
2020-07-25 13:58:52,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:58:52,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41359bc0)
2020-07-25 13:58:52,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:58:52,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a250777)
2020-07-25 13:59:21,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:59:21,900 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:59:21,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:59:21,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:59:21,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50abc3de)
2020-07-25 13:59:21,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:59:21,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@415848b7)
2020-07-25 13:59:21,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:59:21,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26e17c0b)
2020-07-25 13:59:21,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 13:59:21,929 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 13:59:21,934 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 13:59:21,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:59:21,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@349b473f)
2020-07-25 13:59:21,943 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:59:21,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6167fb1a)
2020-07-25 13:59:21,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 13:59:21,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cdb2136)
2020-07-25 14:00:07,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:00:07,499 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:00:07,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:00:07,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:07,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cda1f48)
2020-07-25 14:00:07,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:07,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76a7a276)
2020-07-25 14:00:07,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:07,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63f732e1)
2020-07-25 14:00:07,522 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:00:07,526 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:00:07,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:00:07,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:07,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@341c5df4)
2020-07-25 14:00:07,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:07,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59f9506a)
2020-07-25 14:00:07,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:07,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1336479c)
2020-07-25 14:00:24,210 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:00:24,216 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:00:24,218 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:00:24,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:24,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e51dd75)
2020-07-25 14:00:24,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:24,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@271fb8f7)
2020-07-25 14:00:24,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:24,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8dcd889)
2020-07-25 14:00:24,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:00:24,254 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:00:24,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:00:24,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:24,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a06210c)
2020-07-25 14:00:24,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:24,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@562e0d68)
2020-07-25 14:00:24,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:00:24,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@486c0c15)
2020-07-25 14:00:37,708 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=5}} for Document{{}} fields.
2020-07-25 14:00:37,709 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:00:37,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:00:37,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@48c8b830)
2020-07-25 14:00:40,886 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@48c8b830, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:00:40,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 14:00:40,889 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@48c8b830, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:02:13,286 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:02:13,296 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:02:13,298 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:02:13,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:02:13,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2440378a)
2020-07-25 14:02:13,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:02:13,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21c1f800)
2020-07-25 14:02:13,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:02:13,305 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76d090ea)
2020-07-25 14:02:13,317 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:02:13,322 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:02:13,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:02:13,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:02:13,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42f1ba93)
2020-07-25 14:02:13,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:02:13,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2342402b)
2020-07-25 14:02:13,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:02:13,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22a731ec)
2020-07-25 14:02:25,545 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=5}} for Document{{}} fields.
2020-07-25 14:02:25,546 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:02:25,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:02:25,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1a13f61b)
2020-07-25 14:02:30,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1a13f61b, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:02:30,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 14:02:30,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1a13f61b, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:06:49,028 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:06:49,033 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:06:49,034 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:06:49,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:49,038 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a1d8975)
2020-07-25 14:06:49,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:49,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5024b6d1)
2020-07-25 14:06:49,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:49,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@181f6e1d)
2020-07-25 14:06:49,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:06:49,058 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:06:49,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:06:49,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:49,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14ad4bc5)
2020-07-25 14:06:49,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:49,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66dfa489)
2020-07-25 14:06:49,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:49,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40d010e8)
2020-07-25 14:06:57,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:06:57,577 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:06:57,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:06:57,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:57,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48573b7a)
2020-07-25 14:06:57,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:57,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58048d0)
2020-07-25 14:06:57,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:57,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3571575d)
2020-07-25 14:06:57,607 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:06:57,613 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:06:57,615 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:06:57,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:57,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75c1399e)
2020-07-25 14:06:57,631 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:57,633 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@552f037f)
2020-07-25 14:06:57,633 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:06:57,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@334251e4)
2020-07-25 14:08:26,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:08:26,933 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:08:26,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:08:26,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:26,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@666ac5d5)
2020-07-25 14:08:26,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:26,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12800a2b)
2020-07-25 14:08:26,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:26,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25722dfa)
2020-07-25 14:08:26,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:08:26,953 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:08:26,954 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:08:26,957 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:26,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b7dc81c)
2020-07-25 14:08:26,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:26,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@423a2d9)
2020-07-25 14:08:26,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:26,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1155b4e)
2020-07-25 14:08:35,270 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:08:35,275 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:08:35,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:08:35,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:35,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@341a61f8)
2020-07-25 14:08:35,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:35,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18f79cef)
2020-07-25 14:08:35,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:35,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37389021)
2020-07-25 14:08:35,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:08:35,308 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:08:35,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:08:35,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:35,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66af9e28)
2020-07-25 14:08:35,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:35,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@211249a5)
2020-07-25 14:08:35,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:08:35,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62a1ffff)
2020-07-25 14:13:11,942 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:13:12,039 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:13:12,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:13:12,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:12,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b4ec94a)
2020-07-25 14:13:12,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:12,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43a3712)
2020-07-25 14:13:12,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:12,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c254d62)
2020-07-25 14:13:12,062 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:13:12,077 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:13:12,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:13:12,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:12,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@583e6ec2)
2020-07-25 14:13:12,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:12,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ff96727)
2020-07-25 14:13:12,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:12,083 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22503185)
2020-07-25 14:13:52,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:13:52,106 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:13:52,108 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:13:52,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:52,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55283d29)
2020-07-25 14:13:52,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:52,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f94b112)
2020-07-25 14:13:52,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:52,113 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@230e9380)
2020-07-25 14:13:52,121 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:13:52,126 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:13:52,127 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:13:52,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:52,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b2e379c)
2020-07-25 14:13:52,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:52,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@213ec468)
2020-07-25 14:13:52,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:13:52,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@280bcadb)
2020-07-25 14:14:09,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:14:09,389 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:14:09,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:14:09,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:09,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42185331)
2020-07-25 14:14:09,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:09,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65ef99de)
2020-07-25 14:14:09,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:09,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d8a4120)
2020-07-25 14:14:09,402 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:14:09,407 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:14:09,408 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:14:09,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:09,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59623ec)
2020-07-25 14:14:09,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:09,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37510d72)
2020-07-25 14:14:09,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:09,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41eaf4da)
2020-07-25 14:14:13,465 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:14:13,469 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:14:13,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:14:13,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:13,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3154cd89)
2020-07-25 14:14:13,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:13,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3197a65c)
2020-07-25 14:14:13,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:13,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@123143fa)
2020-07-25 14:14:13,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:14:13,490 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:14:13,492 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:14:13,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:13,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53bf6b7f)
2020-07-25 14:14:13,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:13,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a98ae50)
2020-07-25 14:14:13,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:14:13,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2871408d)
2020-07-25 14:15:04,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:15:04,988 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:15:04,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:15:04,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:04,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47a1fc91)
2020-07-25 14:15:04,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:04,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a64121c)
2020-07-25 14:15:04,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:04,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f53a370)
2020-07-25 14:15:05,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:15:05,008 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:15:05,009 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:15:05,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:05,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7358e0bd)
2020-07-25 14:15:05,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:05,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c433382)
2020-07-25 14:15:05,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:05,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cf81f90)
2020-07-25 14:15:17,361 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:15:17,365 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:15:17,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:15:17,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:17,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@786cc9ab)
2020-07-25 14:15:17,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:17,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a741938)
2020-07-25 14:15:17,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:17,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d0c45fb)
2020-07-25 14:15:17,382 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:15:17,387 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:15:17,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:15:17,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:17,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cf63011)
2020-07-25 14:15:17,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:17,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77659b57)
2020-07-25 14:15:17,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:17,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57b1b250)
2020-07-25 14:15:42,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:15:42,651 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:15:42,652 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:15:42,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:42,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d95e57f)
2020-07-25 14:15:42,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:42,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@252400d5)
2020-07-25 14:15:42,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:42,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68b170f6)
2020-07-25 14:15:42,729 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:15:42,735 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:15:42,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:15:42,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:42,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d5510fc)
2020-07-25 14:15:42,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:42,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@461461f9)
2020-07-25 14:15:42,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:15:42,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@85145f5)
2020-07-25 14:21:17,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:21:17,083 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:21:17,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:21:17,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:21:17,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d97470e)
2020-07-25 14:21:17,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:21:17,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2532ccb4)
2020-07-25 14:21:17,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:21:17,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@396cde5)
2020-07-25 14:21:17,097 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:21:17,101 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:21:17,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:21:17,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:21:17,105 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@486bddb5)
2020-07-25 14:21:17,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:21:17,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1baa1e0b)
2020-07-25 14:21:17,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:21:17,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a4d7fe5)
2020-07-25 14:22:01,599 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:22:01,604 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:22:01,605 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:22:01,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:01,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@81f7651)
2020-07-25 14:22:01,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:01,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6554a894)
2020-07-25 14:22:01,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:01,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@919b082)
2020-07-25 14:22:01,639 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:22:01,650 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:22:01,652 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:22:01,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:01,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31ef4c0b)
2020-07-25 14:22:01,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:01,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26953fe0)
2020-07-25 14:22:01,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:01,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25cb28ab)
2020-07-25 14:22:10,034 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:22:10,048 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:22:10,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:22:10,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:10,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@165c1e0d)
2020-07-25 14:22:10,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:10,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6db15965)
2020-07-25 14:22:10,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:10,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d9abe92)
2020-07-25 14:22:10,072 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:22:10,077 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-25 14:22:10,079 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:22:10,083 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:10,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40a642b2)
2020-07-25 14:22:10,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:10,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@313936f2)
2020-07-25 14:22:10,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:22:10,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ba955cf)
2020-07-25 14:22:28,264 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=5}} for Document{{}} fields.
2020-07-25 14:22:28,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:22:28,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:22:28,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1c943d3b)
2020-07-25 14:22:40,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1c943d3b, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667160/y3nke3vrp8tpooyoxt8k.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:22:40,932 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 14:22:40,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1c943d3b, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667160/y3nke3vrp8tpooyoxt8k.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:23:06,910 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:23:06,994 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:23:07,001 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:23:10,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:23:10,328 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-25 14:23:10,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:23:10,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:10,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44f6bfa3)
2020-07-25 14:23:10,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:10,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@165a547b)
2020-07-25 14:23:10,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:10,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@698a0355)
2020-07-25 14:23:17,606 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:23:17,613 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-25 14:23:17,615 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:23:17,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:17,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ad73e79)
2020-07-25 14:23:17,618 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:17,619 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54c205ae)
2020-07-25 14:23:17,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:17,621 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61a37789)
2020-07-25 14:23:17,632 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:23:17,636 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-25 14:23:17,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:23:17,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:17,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f353229)
2020-07-25 14:23:17,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:17,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c25b31d)
2020-07-25 14:23:17,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:17,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dce3cc1)
2020-07-25 14:23:41,807 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=6}} for Document{{}} fields.
2020-07-25 14:23:41,808 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:23:41,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:23:41,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5ceb0c40)
2020-07-25 14:23:43,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5ceb0c40, Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667222/vwrym4iakapdvgedfwze.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:23:43,339 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 14:23:43,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@5ceb0c40, Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667222/vwrym4iakapdvgedfwze.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:23:49,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:23:49,966 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-25 14:23:49,967 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:23:49,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:49,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@696f2222)
2020-07-25 14:23:49,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:49,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f7f5288)
2020-07-25 14:23:49,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:49,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7221f071)
2020-07-25 14:23:49,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:23:49,986 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-25 14:23:49,989 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:23:49,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:49,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ef58f2e)
2020-07-25 14:23:49,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:49,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72642a5e)
2020-07-25 14:23:49,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:23:49,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57c3753)
2020-07-25 14:24:00,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:24:00,361 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:24:00,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:24:04,663 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:24:04,667 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-07-25 14:24:04,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:24:36,682 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=10}} for Document{{}} fields.
2020-07-25 14:24:36,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:24:36,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:24:36,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@b877322)
2020-07-25 14:24:44,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@b877322, Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667279/yvb4q5udkyvxwsixisfc.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667281/iupfcmjpletss1lp8cac.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667283/mohundduwuycrimfufbf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:24:44,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, subCategoryId, name, imageLinks, status, _class]
2020-07-25 14:24:44,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@b877322, Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667279/yvb4q5udkyvxwsixisfc.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667281/iupfcmjpletss1lp8cac.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667283/mohundduwuycrimfufbf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:25:08,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:25:08,365 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-07-25 14:25:08,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:25:08,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:25:08,382 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-07-25 14:25:08,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:25:30,924 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=10}} for Document{{}} fields.
2020-07-25 14:25:30,925 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:25:30,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667279/yvb4q5udkyvxwsixisfc.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667281/iupfcmjpletss1lp8cac.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667283/mohundduwuycrimfufbf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:25:30,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667279/yvb4q5udkyvxwsixisfc.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667281/iupfcmjpletss1lp8cac.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667283/mohundduwuycrimfufbf.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@fe4754)
2020-07-25 14:25:37,832 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@fe4754, Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667279/yvb4q5udkyvxwsixisfc.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667281/iupfcmjpletss1lp8cac.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667283/mohundduwuycrimfufbf.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667334/ca2efspece49emhlevyb.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667337/qsdtyciqaesjuuntl93a.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:25:37,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, imageLinks, status, _class]
2020-07-25 14:25:37,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@fe4754, Document{{_id=10, categoryId=13, subCategoryId=24, name=boost, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667279/yvb4q5udkyvxwsixisfc.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667281/iupfcmjpletss1lp8cac.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667283/mohundduwuycrimfufbf.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667334/ca2efspece49emhlevyb.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667337/qsdtyciqaesjuuntl93a.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:25:48,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:25:48,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:25:48,715 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:25:58,122 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "18"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:25:58,131 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "18"}}, Fields: {}, Sort: {}
2020-07-25 14:25:58,132 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:26:10,902 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=18}} for Document{{}} fields.
2020-07-25 14:26:10,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:26:10,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=18, categoryId=14, subCategoryId=30, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:26:10,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=18, categoryId=14, subCategoryId=30, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2b782cf4)
2020-07-25 14:26:12,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2b782cf4, Document{{_id=18, categoryId=14, subCategoryId=30, name=boost, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667372/bgbyjohfudvwsinxcvxb.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:26:12,977 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 14:26:12,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2b782cf4, Document{{_id=18, categoryId=14, subCategoryId=30, name=boost, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667372/bgbyjohfudvwsinxcvxb.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:26:21,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:26:21,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:26:21,234 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:26:41,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:26:41,256 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:26:41,259 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:26:41,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2da35729)
2020-07-25 14:26:41,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d17e536)
2020-07-25 14:26:41,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a0f8772)
2020-07-25 14:26:41,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fd09eaf)
2020-07-25 14:26:41,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@587d9663)
2020-07-25 14:26:41,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ac1e60f)
2020-07-25 14:26:41,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c73ce32)
2020-07-25 14:26:41,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37bd16f5)
2020-07-25 14:26:41,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:26:41,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34750ef)
2020-07-25 14:26:42,909 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:26:42,926 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:28:38,565 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:28:38,579 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:28:38,586 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:28:38,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b33edb7)
2020-07-25 14:28:38,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3036d0fe)
2020-07-25 14:28:38,598 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,599 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1006b082)
2020-07-25 14:28:38,599 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8138b0c)
2020-07-25 14:28:38,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c2991ec)
2020-07-25 14:28:38,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a9e1db7)
2020-07-25 14:28:38,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4fb922c6)
2020-07-25 14:28:38,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5be68bd6)
2020-07-25 14:28:38,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7be0d7b7)
2020-07-25 14:28:38,648 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:28:38,652 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:28:38,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:28:38,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ee8223e)
2020-07-25 14:28:38,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@391e571a)
2020-07-25 14:28:38,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,669 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56ab1342)
2020-07-25 14:28:38,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14c7d298)
2020-07-25 14:28:38,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b51fbec)
2020-07-25 14:28:38,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@303cd51b)
2020-07-25 14:28:38,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,673 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e83f15d)
2020-07-25 14:28:38,673 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,675 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14fab707)
2020-07-25 14:28:38,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:38,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6080a0ef)
2020-07-25 14:28:41,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:28:41,546 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:28:45,941 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:28:45,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:28:47,877 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:28:48,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:28:48,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:28:51,120 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:28:51,128 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:28:51,136 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:28:51,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,144 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10982fb4)
2020-07-25 14:28:51,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e187565)
2020-07-25 14:28:51,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46cd9f07)
2020-07-25 14:28:51,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b29194b)
2020-07-25 14:28:51,150 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,150 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a1d7e15)
2020-07-25 14:28:51,151 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,151 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7763876e)
2020-07-25 14:28:51,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dfc1b22)
2020-07-25 14:28:51,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e3ca297)
2020-07-25 14:28:51,155 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:28:51,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f808693)
2020-07-25 14:29:04,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:29:04,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:29:19,203 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-25 14:29:19,205 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:29:19,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:29:19,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2607fb9f)
2020-07-25 14:29:19,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2607fb9f, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=best for children}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:29:19,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 14:29:19,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2607fb9f, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=best for children}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:29:19,224 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-25 14:29:19,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:29:19,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70743366)
2020-07-25 14:29:19,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14ecf645)
2020-07-25 14:29:19,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@97f757a)
2020-07-25 14:29:19,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10bdacc9)
2020-07-25 14:29:19,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@418342bb)
2020-07-25 14:29:19,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@322eda10)
2020-07-25 14:29:19,270 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-25 14:29:19,271 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-25 14:29:19,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-25 14:29:19,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@22d939a4)
2020-07-25 14:29:19,299 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-25 14:29:19,300 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-25 14:29:19,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-25 14:29:19,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@60c5ad0c)
2020-07-25 14:29:19,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:29:19,800 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:29:19,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:29:19,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a65d1a9)
2020-07-25 14:29:19,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,822 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74075ad6)
2020-07-25 14:29:19,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f2993af)
2020-07-25 14:29:19,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@378e03bf)
2020-07-25 14:29:19,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23f2647e)
2020-07-25 14:29:19,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d6d5b3c)
2020-07-25 14:29:19,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6eda09d5)
2020-07-25 14:29:19,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@298e6c4a)
2020-07-25 14:29:19,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:19,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19ef3c91)
2020-07-25 14:29:24,724 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:29:24,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:29:30,781 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-25 14:29:30,782 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 14:29:30,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=best for children}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:29:30,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=best for children}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7e4f7c06)
2020-07-25 14:29:30,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7e4f7c06, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:29:30,785 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 14:29:30,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7e4f7c06, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 14:29:30,788 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-25 14:29:30,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:29:30,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:30,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f6801b8)
2020-07-25 14:29:30,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:30,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b789310)
2020-07-25 14:29:30,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:30,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c2cca8e)
2020-07-25 14:29:30,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:30,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79cee4b6)
2020-07-25 14:29:30,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:30,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36e45ff6)
2020-07-25 14:29:30,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:29:30,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@596bba29)
2020-07-25 14:29:30,802 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-25 14:29:30,804 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-25 14:29:30,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-25 14:29:30,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@3496330)
2020-07-25 14:29:30,811 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-25 14:29:30,813 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-25 14:29:30,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-25 14:29:30,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@d2cccbb)
2020-07-25 14:29:41,311 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:29:41,316 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:29:46,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:29:46,188 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:29:46,188 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:37:47,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:37:47,906 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:37:47,907 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:37:47,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43e3e1f3)
2020-07-25 14:37:47,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30f12e35)
2020-07-25 14:37:47,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c805018)
2020-07-25 14:37:47,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fe263ee)
2020-07-25 14:37:47,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4352f598)
2020-07-25 14:37:47,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a6bfb41)
2020-07-25 14:37:47,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24357484)
2020-07-25 14:37:47,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28c48eff)
2020-07-25 14:37:47,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:37:47,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cee504a)
2020-07-25 14:38:14,269 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:38:14,273 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:38:14,274 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:38:14,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fb0f799)
2020-07-25 14:38:14,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@85bbe41)
2020-07-25 14:38:14,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f95f609)
2020-07-25 14:38:14,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68f7672d)
2020-07-25 14:38:14,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70e34995)
2020-07-25 14:38:14,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@259f487e)
2020-07-25 14:38:14,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@455ad77a)
2020-07-25 14:38:14,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16c70ef3)
2020-07-25 14:38:14,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c82525f)
2020-07-25 14:38:14,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:38:14,292 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 14:38:14,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:38:14,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e060757)
2020-07-25 14:38:14,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22b10ca4)
2020-07-25 14:38:14,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@634d582f)
2020-07-25 14:38:14,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ed00bcf)
2020-07-25 14:38:14,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@309291fd)
2020-07-25 14:38:14,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1aec7f67)
2020-07-25 14:38:14,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13e9d035)
2020-07-25 14:38:14,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d293ff4)
2020-07-25 14:38:14,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:38:14,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@791040d5)
2020-07-25 14:39:20,953 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:39:21,017 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:39:21,023 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:40:52,218 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:40:52,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 14:40:52,327 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 14:40:55,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:40:55,190 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 14:40:55,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:40:55,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:40:55,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22095e26)
2020-07-25 14:40:55,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:40:55,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5840f24e)
2020-07-25 14:40:55,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:40:55,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@146a029a)
2020-07-25 14:40:55,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:40:55,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@791ded77)
2020-07-25 14:41:20,983 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:41:20,988 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 14:41:20,989 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:41:20,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:20,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@707428b3)
2020-07-25 14:41:20,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:20,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@365a254c)
2020-07-25 14:41:20,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:20,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5848db9)
2020-07-25 14:41:20,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:20,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@335a0417)
2020-07-25 14:41:21,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 14:41:21,009 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 14:41:21,011 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 14:41:21,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:21,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7474fbc6)
2020-07-25 14:41:21,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:21,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51534cd3)
2020-07-25 14:41:21,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:21,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a8fe2db)
2020-07-25 14:41:21,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 14:41:21,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42a1a3e)
2020-07-25 22:31:50,318 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 22:31:50,323 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 22:31:50,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 22:31:50,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c927ef6)
2020-07-25 22:31:50,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cf4cd43)
2020-07-25 22:31:50,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20fe9933)
2020-07-25 22:31:50,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4fdd2434)
2020-07-25 22:31:50,345 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 22:31:50,353 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 22:31:50,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 22:31:50,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@af93f02)
2020-07-25 22:31:50,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@640ba875)
2020-07-25 22:31:50,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44d1e713)
2020-07-25 22:31:50,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:31:50,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d20f502)
2020-07-25 22:38:56,017 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 22:38:56,020 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 22:38:56,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 22:38:56,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3eb806b3)
2020-07-25 22:38:56,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cfa49fb)
2020-07-25 22:38:56,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@455a1874)
2020-07-25 22:38:56,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@393ea8aa)
2020-07-25 22:38:56,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 22:38:56,037 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 22:38:56,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 22:38:56,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b950d47)
2020-07-25 22:38:56,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5456b990)
2020-07-25 22:38:56,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6da579ae)
2020-07-25 22:38:56,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:38:56,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1924a6b5)
2020-07-25 22:39:03,960 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 22:39:03,964 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 22:39:03,964 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 22:39:03,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:03,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f0ea5db)
2020-07-25 22:39:03,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:03,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3337b39e)
2020-07-25 22:39:03,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:03,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d043e7e)
2020-07-25 22:39:03,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:03,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74530986)
2020-07-25 22:39:03,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 22:39:03,990 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 22:39:03,991 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 22:39:03,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:03,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d9c131e)
2020-07-25 22:39:03,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:03,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@782d7cc)
2020-07-25 22:39:03,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:04,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d15a355)
2020-07-25 22:39:04,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 22:39:04,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@316ec7b5)
2020-07-25 23:12:23,394 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:12:23,399 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:12:23,400 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:12:23,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d4e998a)
2020-07-25 23:12:23,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ef49042)
2020-07-25 23:12:23,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bcd810d)
2020-07-25 23:12:23,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b970f9)
2020-07-25 23:12:23,423 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:12:23,427 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:12:23,429 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:12:23,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6908a8cf)
2020-07-25 23:12:23,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44c2944e)
2020-07-25 23:12:23,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37dcca8c)
2020-07-25 23:12:23,434 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:12:23,434 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e79c2f8)
2020-07-25 23:15:41,197 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:15:41,202 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:15:41,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:15:41,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@327ee2a5)
2020-07-25 23:15:41,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,208 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58f3cf45)
2020-07-25 23:15:41,208 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a473fa3)
2020-07-25 23:15:41,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a762951)
2020-07-25 23:15:41,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:15:41,234 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:15:41,235 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:15:41,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1975a316)
2020-07-25 23:15:41,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29c8dd61)
2020-07-25 23:15:41,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f6f44c3)
2020-07-25 23:15:41,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:15:41,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17d2945d)
2020-07-25 23:20:36,536 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 4576 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-25 23:20:36,539 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-25 23:20:36,540 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-25 23:40:43,859 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10899 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-25 23:40:43,871 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-25 23:40:43,874 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-25 23:40:46,566 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-25 23:40:46,598 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-25 23:40:46,627 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-25 23:40:46,629 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-25 23:40:46,630 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-25 23:40:46,631 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-25 23:40:46,632 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-25 23:40:46,632 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-25 23:40:46,633 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-25 23:40:46,634 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-25 23:40:46,634 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-25 23:40:46,635 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-25 23:40:46,636 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-25 23:40:46,637 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-25 23:40:46,637 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-25 23:40:46,638 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-25 23:40:46,638 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-25 23:40:46,821 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-25 23:40:46,822 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-25 23:40:46,844 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 245ms. Found 15 MongoDB repository interfaces.
2020-07-25 23:40:50,957 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:40:50,958 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:40:51,439 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:40:51,440 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:40:51,601 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-25 23:40:51,625 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-25 23:40:51,627 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-25 23:40:51,628 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-25 23:40:51,634 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-25 23:40:51,640 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-25 23:40:51,641 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-25 23:40:51,643 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-25 23:40:51,644 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-25 23:40:51,657 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-25 23:40:51,659 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-25 23:40:51,660 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-25 23:40:51,661 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-25 23:40:51,671 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-25 23:40:51,674 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-25 23:40:51,675 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-25 23:40:51,678 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-25 23:40:51,686 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-25 23:40:51,688 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-25 23:40:51,689 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-25 23:40:51,690 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-25 23:40:56,599 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-25 23:40:56,765 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-25 23:40:56,792 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-25 23:40:56,815 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-25 23:40:56,831 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-25 23:40:56,848 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-25 23:40:56,861 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-25 23:40:56,881 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-25 23:40:57,055 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-25 23:40:57,066 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-25 23:40:57,086 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-25 23:40:57,102 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-25 23:40:57,117 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-25 23:40:57,131 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-25 23:40:57,141 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-25 23:40:57,151 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-25 23:40:57,174 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-25 23:40:57,189 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-25 23:40:57,203 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-25 23:40:57,219 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-25 23:40:57,231 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-25 23:40:57,249 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-25 23:40:57,265 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-25 23:40:57,274 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-25 23:40:57,307 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-25 23:40:57,319 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-25 23:40:57,337 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-25 23:40:57,347 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-25 23:40:57,461 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-25 23:40:57,465 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 23:40:57,465 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-25 23:40:57,465 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 23:40:57,671 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-25 23:40:57,678 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-25 23:40:59,588 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-25 23:40:59,620 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-25 23:40:59,624 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-25 23:40:59,999 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 18.048 seconds (JVM running for 19.515)
2020-07-25 23:45:33,941 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:45:34,309 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-25 23:45:34,493 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:45:34,526 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:45:34,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cbb68f5)
2020-07-25 23:45:34,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3076601e)
2020-07-25 23:45:34,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@561aef55)
2020-07-25 23:45:34,599 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d492d1)
2020-07-25 23:45:34,851 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:45:34,862 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:45:34,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:45:34,870 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,871 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3befa44f)
2020-07-25 23:45:34,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,881 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bab129b)
2020-07-25 23:45:34,882 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f31a157)
2020-07-25 23:45:34,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:34,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ce31056)
2020-07-25 23:45:49,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:45:49,400 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:45:49,409 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:45:49,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,428 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d4037b4)
2020-07-25 23:45:49,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e59349b)
2020-07-25 23:45:49,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25bde2e6)
2020-07-25 23:45:49,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@508d716b)
2020-07-25 23:45:49,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:45:49,489 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:45:49,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:45:49,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d7ab644)
2020-07-25 23:45:49,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@509c6120)
2020-07-25 23:45:49,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2298e379)
2020-07-25 23:45:49,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:45:49,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62b596ef)
2020-07-25 23:50:04,692 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10899 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-25 23:50:04,693 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-25 23:50:04,693 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-25 23:51:05,186 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 11721 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-25 23:51:05,196 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-25 23:51:05,197 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-25 23:51:08,359 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-25 23:51:08,403 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-25 23:51:08,450 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-25 23:51:08,452 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-25 23:51:08,452 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-25 23:51:08,453 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-25 23:51:08,453 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-25 23:51:08,454 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-25 23:51:08,454 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-25 23:51:08,458 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-25 23:51:08,458 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-25 23:51:08,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-25 23:51:08,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-25 23:51:08,461 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-25 23:51:08,462 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-25 23:51:08,463 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-25 23:51:08,463 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-25 23:51:08,709 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-25 23:51:08,711 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-25 23:51:08,742 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 335ms. Found 15 MongoDB repository interfaces.
2020-07-25 23:51:12,734 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:51:12,736 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:51:13,098 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:51:13,100 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:51:13,227 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-25 23:51:13,228 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-25 23:51:13,245 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-25 23:51:13,247 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-25 23:51:13,249 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-25 23:51:13,249 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-25 23:51:13,250 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-25 23:51:13,252 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-25 23:51:13,256 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-25 23:51:13,256 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-25 23:51:13,258 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-25 23:51:13,258 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-25 23:51:13,260 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-25 23:51:13,261 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-25 23:51:13,263 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-25 23:51:13,264 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-25 23:51:13,268 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-25 23:51:13,269 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-25 23:51:13,270 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-25 23:51:13,271 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-25 23:51:13,272 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-25 23:51:18,615 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-25 23:51:18,788 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-25 23:51:18,812 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-25 23:51:18,839 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-25 23:51:18,862 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-25 23:51:18,881 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-25 23:51:18,896 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-25 23:51:18,919 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-25 23:51:19,167 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-25 23:51:19,178 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-25 23:51:19,207 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-25 23:51:19,230 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-25 23:51:19,246 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-25 23:51:19,260 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-25 23:51:19,277 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-25 23:51:19,289 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-25 23:51:19,321 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-25 23:51:19,341 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-25 23:51:19,365 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-25 23:51:19,386 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-25 23:51:19,404 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-25 23:51:19,421 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-25 23:51:19,441 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-25 23:51:19,456 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-25 23:51:19,502 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-25 23:51:19,513 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-25 23:51:19,536 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-25 23:51:19,549 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-25 23:51:19,729 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-25 23:51:19,732 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 23:51:19,733 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-25 23:51:19,734 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 23:51:20,063 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-25 23:51:20,073 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-25 23:51:22,133 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-25 23:51:22,162 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-25 23:51:22,166 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-25 23:51:22,629 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 19.491 seconds (JVM running for 21.072)
2020-07-25 23:52:15,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:52:16,003 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-25 23:52:16,148 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:52:16,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:52:16,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50514d22)
2020-07-25 23:52:16,305 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,306 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e5c6a8a)
2020-07-25 23:52:16,307 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fc3785b)
2020-07-25 23:52:16,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dc7606a)
2020-07-25 23:52:16,466 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:52:16,489 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-25 23:52:16,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:52:16,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1051596c)
2020-07-25 23:52:16,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@262417e7)
2020-07-25 23:52:16,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2540118e)
2020-07-25 23:52:16,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:16,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3191a7c6)
2020-07-25 23:52:18,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:52:19,041 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-25 23:52:19,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-25 23:52:19,052 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-7] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-25 23:52:22,735 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:52:22,744 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:52:22,746 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:52:22,751 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,752 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@121906a)
2020-07-25 23:52:22,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14f506be)
2020-07-25 23:52:22,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,758 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4fc7eeb0)
2020-07-25 23:52:22,760 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5664e5aa)
2020-07-25 23:52:22,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bcb8dcc)
2020-07-25 23:52:22,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6737b0fd)
2020-07-25 23:52:22,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17f560c5)
2020-07-25 23:52:22,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b053e54)
2020-07-25 23:52:22,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:52:22,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74a92b9)
2020-07-25 23:54:00,024 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 11721 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-25 23:54:00,026 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-25 23:54:00,029 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-25 23:54:01,182 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-25 23:54:01,199 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-25 23:54:01,218 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-25 23:54:01,219 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-25 23:54:01,221 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-25 23:54:01,221 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-25 23:54:01,222 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-25 23:54:01,223 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-25 23:54:01,223 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-25 23:54:01,223 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-25 23:54:01,224 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-25 23:54:01,224 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-25 23:54:01,225 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-25 23:54:01,227 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-25 23:54:01,229 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-25 23:54:01,229 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-25 23:54:01,230 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-25 23:54:01,350 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-25 23:54:01,350 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-25 23:54:01,361 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 161ms. Found 15 MongoDB repository interfaces.
2020-07-25 23:54:02,047 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:54:02,048 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:54:02,251 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:54:02,255 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-25 23:54:02,264 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-25 23:54:02,265 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-25 23:54:02,268 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-25 23:54:02,269 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-25 23:54:02,270 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-25 23:54:02,271 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-25 23:54:02,273 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-25 23:54:02,273 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-25 23:54:02,274 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-25 23:54:02,275 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-25 23:54:02,278 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-25 23:54:02,281 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-25 23:54:02,282 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-25 23:54:02,282 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-25 23:54:02,283 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-25 23:54:02,283 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-25 23:54:02,284 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-25 23:54:02,285 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-25 23:54:02,286 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-25 23:54:02,287 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-25 23:54:02,288 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-25 23:54:05,974 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-25 23:54:05,990 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-25 23:54:06,005 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-25 23:54:06,019 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-25 23:54:06,034 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-25 23:54:06,048 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-25 23:54:06,057 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-25 23:54:06,074 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-25 23:54:06,137 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-25 23:54:06,144 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-25 23:54:06,168 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-25 23:54:06,181 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-25 23:54:06,197 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-25 23:54:06,207 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-25 23:54:06,219 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-25 23:54:06,229 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-25 23:54:06,246 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-25 23:54:06,255 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-25 23:54:06,270 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-25 23:54:06,283 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-25 23:54:06,290 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-25 23:54:06,302 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-25 23:54:06,314 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-25 23:54:06,323 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-25 23:54:06,351 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-25 23:54:06,361 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-25 23:54:06,382 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-25 23:54:06,400 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-25 23:54:06,567 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-25 23:54:06,572 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 23:54:06,573 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-25 23:54:06,573 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-25 23:54:06,636 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-25 23:54:06,645 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-25 23:54:07,021 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-25 23:54:07,042 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-25 23:54:07,046 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-25 23:54:07,229 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 7.272 seconds (JVM running for 185.672)
2020-07-25 23:54:24,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:54:24,731 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-25 23:54:24,775 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:54:24,777 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:54:24,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@400d4c76)
2020-07-25 23:54:24,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5da414f1)
2020-07-25 23:54:24,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,811 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bf411a3)
2020-07-25 23:54:24,811 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f804de2)
2020-07-25 23:54:24,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65c4d698)
2020-07-25 23:54:24,814 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18ba454d)
2020-07-25 23:54:24,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@35836f0)
2020-07-25 23:54:24,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4efa9424)
2020-07-25 23:54:24,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dc9eb75)
2020-07-25 23:54:24,894 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:54:24,926 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:54:24,927 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:54:24,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,948 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16310e07)
2020-07-25 23:54:24,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dbc01db)
2020-07-25 23:54:24,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43dc6a06)
2020-07-25 23:54:24,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@323761fb)
2020-07-25 23:54:24,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ce8008c)
2020-07-25 23:54:24,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:24,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11e76e13)
2020-07-25 23:54:25,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:25,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@547aa6fb)
2020-07-25 23:54:25,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:25,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e47cd91)
2020-07-25 23:54:25,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:54:25,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12b37818)
2020-07-25 23:54:36,979 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-25 23:54:37,139 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 23:54:37,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:54:37,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595612803/qdtzji4rqxaa7znzfsr6.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@38713aaf)
2020-07-25 23:55:36,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@38713aaf, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:55:36,513 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 23:55:36,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@38713aaf, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:55:44,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:55:44,525 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:55:44,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:55:44,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,539 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@587daf8d)
2020-07-25 23:55:44,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24d48aea)
2020-07-25 23:55:44,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ed21e6b)
2020-07-25 23:55:44,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@560d0041)
2020-07-25 23:55:44,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63b9ccca)
2020-07-25 23:55:44,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@633a898d)
2020-07-25 23:55:44,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2dd5f2c7)
2020-07-25 23:55:44,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13e4f034)
2020-07-25 23:55:44,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e16b11e)
2020-07-25 23:55:44,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:55:44,580 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:55:44,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:55:44,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58b77885)
2020-07-25 23:55:44,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65437d2e)
2020-07-25 23:55:44,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e1d169e)
2020-07-25 23:55:44,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75aa6136)
2020-07-25 23:55:44,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,597 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@163a4c56)
2020-07-25 23:55:44,597 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,598 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68eef9b2)
2020-07-25 23:55:44,599 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e71abd7)
2020-07-25 23:55:44,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78f4c2fe)
2020-07-25 23:55:44,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:55:44,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ce8794a)
2020-07-25 23:58:38,501 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-25 23:58:38,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 23:58:38,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:38,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595614047/phrpyvv5ijprky9niw5d.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@270f82d3)
2020-07-25 23:58:38,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@270f82d3, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:38,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 23:58:38,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@270f82d3, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:40,709 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-25 23:58:40,711 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 23:58:40,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:40,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615672/nvvd1ppcmysuutm7zrmd.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@22819608)
2020-07-25 23:58:40,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@22819608, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:40,719 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 23:58:40,721 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@22819608, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:43,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:58:43,387 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:58:43,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:58:43,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a6c71bd)
2020-07-25 23:58:43,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dcbe961)
2020-07-25 23:58:43,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36ce231a)
2020-07-25 23:58:43,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28500a60)
2020-07-25 23:58:43,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3128674e)
2020-07-25 23:58:43,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@130a00eb)
2020-07-25 23:58:43,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,405 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@541b3763)
2020-07-25 23:58:43,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c30348a)
2020-07-25 23:58:43,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e503e55)
2020-07-25 23:58:43,429 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:58:43,434 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:58:43,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:58:43,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cbf45c7)
2020-07-25 23:58:43,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@112cff98)
2020-07-25 23:58:43,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@470e7d45)
2020-07-25 23:58:43,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ea6565f)
2020-07-25 23:58:43,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78b1b531)
2020-07-25 23:58:43,451 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e974580)
2020-07-25 23:58:43,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a47f542)
2020-07-25 23:58:43,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@761f48fb)
2020-07-25 23:58:43,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:58:43,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3726334)
2020-07-25 23:58:59,292 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-25 23:58:59,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-25 23:58:59,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:59,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615676/ui5zv4ry9ollnwexwy5k.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@35babe4b)
2020-07-25 23:58:59,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@35babe4b, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:58:59,298 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-25 23:58:59,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@35babe4b, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595615679/rtzkh27y7zokxywpldky.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-25 23:59:03,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:59:03,311 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:59:03,313 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:59:03,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b4bc386)
2020-07-25 23:59:03,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22e71e36)
2020-07-25 23:59:03,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56dca63a)
2020-07-25 23:59:03,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47577f01)
2020-07-25 23:59:03,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6225c39e)
2020-07-25 23:59:03,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78296742)
2020-07-25 23:59:03,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4bf7e30b)
2020-07-25 23:59:03,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37242203)
2020-07-25 23:59:03,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bd13e4a)
2020-07-25 23:59:03,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-25 23:59:03,356 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-25 23:59:03,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-25 23:59:03,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e0d9341)
2020-07-25 23:59:03,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47b5f29d)
2020-07-25 23:59:03,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41096707)
2020-07-25 23:59:03,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6cfed904)
2020-07-25 23:59:03,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2eabd841)
2020-07-25 23:59:03,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4662f613)
2020-07-25 23:59:03,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cd99087)
2020-07-25 23:59:03,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@567546e1)
2020-07-25 23:59:03,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-25 23:59:03,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26ecf5be)
