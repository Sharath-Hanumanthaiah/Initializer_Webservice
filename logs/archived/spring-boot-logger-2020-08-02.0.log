2020-08-02 00:10:04,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:10:04,950 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:10:04,951 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:10:04,962 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:10:04,965 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:10:04,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:10:08,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:10:08,261 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:10:08,262 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:10:08,268 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:10:08,272 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:10:08,273 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:10:16,446 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=19}} for Document{{}} fields.
2020-08-02 00:10:16,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:10:16,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=19, categoryId=13, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596303763/lzyanre4opcbohnwmg9g.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304321/klublw9bxvgukkxdsoqm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304389/dxy6otxcv4w7gar00fvx.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304532/nv5c6x1ujsfxlwmbgx0v.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:10:16,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=19, categoryId=13, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596303763/lzyanre4opcbohnwmg9g.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304321/klublw9bxvgukkxdsoqm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304389/dxy6otxcv4w7gar00fvx.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304532/nv5c6x1ujsfxlwmbgx0v.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@22014e41)
2020-08-02 00:10:16,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@22014e41, Document{{_id=19, categoryId=13, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596303763/lzyanre4opcbohnwmg9g.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304321/klublw9bxvgukkxdsoqm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304389/dxy6otxcv4w7gar00fvx.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304532/nv5c6x1ujsfxlwmbgx0v.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:10:16,450 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, description, imageLinks, status, _class]
2020-08-02 00:10:16,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@22014e41, Document{{_id=19, categoryId=13, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596303763/lzyanre4opcbohnwmg9g.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304321/klublw9bxvgukkxdsoqm.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304389/dxy6otxcv4w7gar00fvx.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596304532/nv5c6x1ujsfxlwmbgx0v.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:18:00,882 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:00,885 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:18:00,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:18:00,894 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:00,897 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:18:00,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:18:04,654 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:04,658 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:18:04,659 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:18:04,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:04,691 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 00:18:04,693 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:18:08,577 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:08,657 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:18:08,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:18:10,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:10,245 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:18:10,247 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:18:10,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f9f03fb)
2020-08-02 00:18:10,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1089305c)
2020-08-02 00:18:10,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d842e28)
2020-08-02 00:18:10,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1897bd0e)
2020-08-02 00:18:10,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f40f53c)
2020-08-02 00:18:10,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16123758)
2020-08-02 00:18:10,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a4bbedc)
2020-08-02 00:18:10,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f110b56)
2020-08-02 00:18:10,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:10,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5730f49d)
2020-08-02 00:18:17,843 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:18:17,844 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:18:17,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:18:17,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@9ff6710)
2020-08-02 00:18:17,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@9ff6710, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:18:17,847 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:18:17,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@9ff6710, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:18:57,738 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:57,740 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:18:57,741 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:18:57,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@620de16)
2020-08-02 00:18:57,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e7009d7)
2020-08-02 00:18:57,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37e27b4)
2020-08-02 00:18:57,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f6d6af9)
2020-08-02 00:18:57,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fbddf6c)
2020-08-02 00:18:57,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15d5bfd)
2020-08-02 00:18:57,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@736c8fe5)
2020-08-02 00:18:57,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@476209d3)
2020-08-02 00:18:57,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7695e8ec)
2020-08-02 00:18:57,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:18:57,762 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:18:57,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:18:57,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a5c5d1c)
2020-08-02 00:18:57,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ac8b704)
2020-08-02 00:18:57,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e15a630)
2020-08-02 00:18:57,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bbbf361)
2020-08-02 00:18:57,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2317fdb7)
2020-08-02 00:18:57,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c181e46)
2020-08-02 00:18:57,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f1f17d3)
2020-08-02 00:18:57,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1bdbc3aa)
2020-08-02 00:18:57,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:18:57,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bd6f23)
2020-08-02 00:26:17,971 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10755 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 00:26:17,972 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 00:26:17,972 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 00:26:19,113 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 00:26:19,114 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 00:26:19,127 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 00:26:19,128 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 00:26:19,128 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 00:26:19,129 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 00:26:19,129 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 00:26:19,129 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 00:26:19,129 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 00:26:19,130 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 00:26:19,130 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 00:26:19,130 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 00:26:19,130 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 00:26:19,131 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 00:26:19,131 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 00:26:19,131 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 00:26:19,132 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 00:26:19,211 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 00:26:19,211 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 00:26:19,220 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 106ms. Found 15 MongoDB repository interfaces.
2020-08-02 00:26:20,929 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:20,934 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:21,144 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:21,144 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:21,157 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 00:26:21,158 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 00:26:21,159 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 00:26:21,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 00:26:21,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 00:26:21,161 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 00:26:21,162 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 00:26:21,162 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 00:26:21,163 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 00:26:21,164 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 00:26:21,164 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 00:26:21,165 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 00:26:21,166 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 00:26:21,166 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 00:26:21,167 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 00:26:21,168 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 00:26:21,170 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 00:26:21,171 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 00:26:21,172 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 00:26:21,173 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 00:26:21,173 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 00:26:21,349 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 00:26:21,370 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 00:26:21,389 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 00:26:21,404 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 00:26:21,417 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 00:26:21,434 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 00:26:21,443 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 00:26:21,461 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 00:26:21,524 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 00:26:21,534 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 00:26:21,555 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 00:26:21,569 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 00:26:21,584 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 00:26:21,650 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 00:26:21,664 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 00:26:21,672 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 00:26:21,688 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 00:26:21,702 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 00:26:21,716 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 00:26:21,729 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 00:26:21,738 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 00:26:21,751 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 00:26:21,763 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 00:26:21,773 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 00:26:21,806 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 00:26:21,824 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 00:26:21,838 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 00:26:21,846 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 00:26:21,934 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 00:26:21,938 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:26:21,938 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 00:26:21,939 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:26:21,985 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 00:26:21,994 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 00:26:22,367 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 00:26:22,378 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 00:26:22,381 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 00:26:22,487 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 4.588 seconds (JVM running for 7396.572)
2020-08-02 00:26:43,183 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10755 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 00:26:43,183 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 00:26:43,183 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 00:26:44,019 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 00:26:44,020 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 00:26:44,030 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 00:26:44,031 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 00:26:44,032 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 00:26:44,032 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 00:26:44,032 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 00:26:44,033 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 00:26:44,033 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 00:26:44,033 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 00:26:44,034 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 00:26:44,034 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 00:26:44,034 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 00:26:44,034 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 00:26:44,035 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 00:26:44,035 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 00:26:44,035 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 00:26:44,075 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 00:26:44,075 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 00:26:44,084 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 63ms. Found 15 MongoDB repository interfaces.
2020-08-02 00:26:44,504 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:44,505 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:44,664 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:44,665 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:26:44,672 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 00:26:44,673 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 00:26:44,674 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 00:26:44,674 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 00:26:44,675 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 00:26:44,676 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 00:26:44,682 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 00:26:44,683 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 00:26:44,684 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 00:26:44,685 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 00:26:44,686 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 00:26:44,687 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 00:26:44,688 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 00:26:44,689 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 00:26:44,691 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 00:26:44,693 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 00:26:44,693 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 00:26:44,694 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 00:26:44,695 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 00:26:44,701 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 00:26:44,702 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 00:26:44,843 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 00:26:44,855 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 00:26:44,873 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 00:26:44,965 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 00:26:44,975 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 00:26:44,985 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 00:26:44,990 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 00:26:45,001 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 00:26:45,037 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 00:26:45,047 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 00:26:45,068 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 00:26:45,074 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 00:26:45,080 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 00:26:45,091 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 00:26:45,105 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 00:26:45,119 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 00:26:45,140 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 00:26:45,154 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 00:26:45,168 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 00:26:45,182 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 00:26:45,189 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 00:26:45,196 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 00:26:45,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 00:26:45,211 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 00:26:45,238 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 00:26:45,246 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 00:26:45,257 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 00:26:45,264 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 00:26:45,338 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 00:26:45,340 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:26:45,340 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 00:26:45,341 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:26:45,370 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 00:26:45,375 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 00:26:45,713 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 00:26:45,723 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 00:26:45,726 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 00:26:45,892 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 2.763 seconds (JVM running for 7419.977)
2020-08-02 00:28:03,748 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:28:03,760 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-02 00:28:03,781 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:28:03,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:28:03,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d7785e8)
2020-08-02 00:28:03,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dc2802d)
2020-08-02 00:28:03,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@35ec9411)
2020-08-02 00:28:03,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f22cdf3)
2020-08-02 00:28:03,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e1b433a)
2020-08-02 00:28:03,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3791773c)
2020-08-02 00:28:03,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@668c31c3)
2020-08-02 00:28:03,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f4835b4)
2020-08-02 00:28:03,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b6ea9f4)
2020-08-02 00:28:03,830 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:28:03,838 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:28:03,839 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:28:03,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32141248)
2020-08-02 00:28:03,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,856 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b330ec8)
2020-08-02 00:28:03,857 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b2161ec)
2020-08-02 00:28:03,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@319f3f9c)
2020-08-02 00:28:03,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@230bedb5)
2020-08-02 00:28:03,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@305de252)
2020-08-02 00:28:03,870 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74b24d12)
2020-08-02 00:28:03,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b226ea4)
2020-08-02 00:28:03,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:03,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75225e1f)
2020-08-02 00:28:21,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:28:21,264 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:28:21,265 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:28:21,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7af7ca43)
2020-08-02 00:28:21,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45c60d7d)
2020-08-02 00:28:21,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@844acb1)
2020-08-02 00:28:21,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@439cb153)
2020-08-02 00:28:21,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77dceb1)
2020-08-02 00:28:21,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@722586c6)
2020-08-02 00:28:21,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fa99d17)
2020-08-02 00:28:21,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7919a998)
2020-08-02 00:28:21,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10f8f84c)
2020-08-02 00:28:21,278 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:28:21,281 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:28:21,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:28:21,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bde4e87)
2020-08-02 00:28:21,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15120dd3)
2020-08-02 00:28:21,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d3fb152)
2020-08-02 00:28:21,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69ff1cd)
2020-08-02 00:28:21,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fac2def)
2020-08-02 00:28:21,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ad5d75c)
2020-08-02 00:28:21,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a605075)
2020-08-02 00:28:21,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6388cb6d)
2020-08-02 00:28:21,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:28:21,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1db551a6)
2020-08-02 00:28:42,796 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:28:42,797 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:28:42,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:28:42,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7d2aa8ae)
2020-08-02 00:28:47,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7d2aa8ae, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:28:47,640 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:28:47,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7d2aa8ae, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:02,652 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:29:02,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:29:02,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:02,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596302690/zujxpfide5pzn5kftjx3.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1666faf)
2020-08-02 00:29:02,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1666faf, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:02,659 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:29:02,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1666faf, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:04,684 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:29:04,685 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:29:04,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:04,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596167085/cetpsbpsd8kcki9uuxgh.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1ee55435)
2020-08-02 00:29:04,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1ee55435, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:04,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:29:04,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1ee55435, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:06,724 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:29:06,725 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:29:06,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:06,727 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595766896/kvnsencpgk7jrfdbniyf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@216de84a)
2020-08-02 00:29:06,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@216de84a, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:06,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:29:06,732 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@216de84a, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:29:10,151 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:29:10,155 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:29:10,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:29:10,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55b4d2e4)
2020-08-02 00:29:10,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53b77255)
2020-08-02 00:29:10,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@579c4bd9)
2020-08-02 00:29:10,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75ab48df)
2020-08-02 00:29:10,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fb877c)
2020-08-02 00:29:10,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e36682c)
2020-08-02 00:29:10,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b4124b0)
2020-08-02 00:29:10,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@740362b7)
2020-08-02 00:29:10,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e99cb2c)
2020-08-02 00:29:10,172 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:29:10,176 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:29:10,177 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:29:10,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23162145)
2020-08-02 00:29:10,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10c1178a)
2020-08-02 00:29:10,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@665d6f2)
2020-08-02 00:29:10,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f0345b6)
2020-08-02 00:29:10,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d0d431a)
2020-08-02 00:29:10,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15686876)
2020-08-02 00:29:10,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d92ee6f)
2020-08-02 00:29:10,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3839229e)
2020-08-02 00:29:10,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:10,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fcba310)
2020-08-02 00:29:16,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:29:16,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:29:16,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:29:16,107 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-4] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-02 00:29:18,859 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:29:18,945 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:29:18,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:29:22,113 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:29:22,116 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:29:22,116 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:29:22,117 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f263944)
2020-08-02 00:29:22,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,119 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@148cda27)
2020-08-02 00:29:22,119 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2468a222)
2020-08-02 00:29:22,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11da3d09)
2020-08-02 00:29:22,121 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,121 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4fe8da6f)
2020-08-02 00:29:22,121 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,121 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3dc76c57)
2020-08-02 00:29:22,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c5fa07f)
2020-08-02 00:29:22,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c2dfc88)
2020-08-02 00:29:22,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:29:22,123 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@151f76c0)
2020-08-02 00:29:27,091 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:29:27,160 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:29:27,160 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:29:38,574 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10755 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 00:29:38,575 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 00:29:38,575 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 00:29:39,661 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 00:29:39,662 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 00:29:39,674 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 00:29:39,675 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 00:29:39,676 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 00:29:39,676 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 00:29:39,677 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 00:29:39,677 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 00:29:39,678 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 00:29:39,678 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 00:29:39,679 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 00:29:39,679 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 00:29:39,679 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 00:29:39,680 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 00:29:39,680 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 00:29:39,680 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 00:29:39,681 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 00:29:39,726 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 00:29:39,727 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 00:29:39,736 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 73ms. Found 15 MongoDB repository interfaces.
2020-08-02 00:29:40,423 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:40,424 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:40,670 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:40,671 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:40,778 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 00:29:40,784 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 00:29:40,785 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 00:29:40,786 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 00:29:40,787 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 00:29:40,787 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 00:29:40,789 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 00:29:40,790 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 00:29:40,791 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 00:29:40,792 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 00:29:40,800 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 00:29:40,801 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 00:29:40,802 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 00:29:40,804 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 00:29:40,805 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 00:29:40,806 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 00:29:40,810 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 00:29:40,811 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 00:29:40,812 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 00:29:40,812 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 00:29:40,813 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 00:29:40,948 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 00:29:40,959 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 00:29:40,970 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 00:29:40,984 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 00:29:40,992 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 00:29:41,022 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 00:29:41,030 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 00:29:41,045 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 00:29:41,086 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 00:29:41,094 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 00:29:41,111 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 00:29:41,121 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 00:29:41,136 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 00:29:41,146 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 00:29:41,158 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 00:29:41,167 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 00:29:41,183 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 00:29:41,196 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 00:29:41,211 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 00:29:41,223 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 00:29:41,231 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 00:29:41,249 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 00:29:41,261 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 00:29:41,270 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 00:29:41,295 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 00:29:41,306 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 00:29:41,337 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 00:29:41,345 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 00:29:41,442 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 00:29:41,443 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:29:41,444 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 00:29:41,444 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:29:41,479 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 00:29:41,487 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 00:29:41,922 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 00:29:41,933 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 00:29:41,936 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 00:29:42,007 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.504 seconds (JVM running for 7596.091)
2020-08-02 00:29:56,837 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10755 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 00:29:56,837 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 00:29:56,837 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 00:29:57,656 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 00:29:57,657 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 00:29:57,666 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 00:29:57,667 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 00:29:57,667 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 00:29:57,668 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 00:29:57,668 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 00:29:57,669 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 00:29:57,669 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 00:29:57,669 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 00:29:57,670 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 00:29:57,670 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 00:29:57,670 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 00:29:57,671 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 00:29:57,671 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 00:29:57,671 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 00:29:57,671 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 00:29:57,707 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 00:29:57,707 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 00:29:57,715 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 15 MongoDB repository interfaces.
2020-08-02 00:29:58,243 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:58,244 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:58,444 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:58,444 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:29:58,449 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 00:29:58,450 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 00:29:58,450 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 00:29:58,451 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 00:29:58,462 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 00:29:58,462 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 00:29:58,463 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 00:29:58,464 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 00:29:58,464 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 00:29:58,465 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 00:29:58,466 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 00:29:58,466 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 00:29:58,467 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 00:29:58,467 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 00:29:58,468 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 00:29:58,469 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 00:29:58,470 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 00:29:58,470 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 00:29:58,470 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 00:29:58,471 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 00:29:58,471 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 00:29:58,579 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 00:29:58,589 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 00:29:58,599 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 00:29:58,610 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 00:29:58,617 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 00:29:58,635 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 00:29:58,642 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 00:29:58,653 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 00:29:58,691 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 00:29:58,698 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 00:29:58,714 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 00:29:58,722 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 00:29:58,730 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 00:29:58,739 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 00:29:58,747 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 00:29:58,754 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 00:29:58,766 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 00:29:58,774 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 00:29:58,784 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 00:29:58,793 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 00:29:58,797 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 00:29:58,806 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 00:29:58,813 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 00:29:58,820 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 00:29:58,875 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 00:29:58,886 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 00:29:58,899 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 00:29:58,907 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 00:29:58,991 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 00:29:58,994 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:29:58,994 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 00:29:58,995 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:29:59,063 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 00:29:59,070 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 00:29:59,459 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 00:29:59,467 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 00:29:59,472 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 00:29:59,572 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 2.853 seconds (JVM running for 7613.657)
2020-08-02 00:30:16,237 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10755 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 00:30:16,237 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 00:30:16,237 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 00:30:16,867 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 00:30:16,869 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 00:30:16,878 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 00:30:16,878 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 00:30:16,879 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 00:30:16,879 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 00:30:16,879 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 00:30:16,883 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 00:30:16,884 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 00:30:16,884 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 00:30:16,884 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 00:30:16,884 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 00:30:16,885 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 00:30:16,885 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 00:30:16,885 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 00:30:16,885 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 00:30:16,885 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 00:30:16,921 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 00:30:16,921 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 00:30:16,927 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 15 MongoDB repository interfaces.
2020-08-02 00:30:17,619 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:30:17,619 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:30:17,733 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:30:17,733 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:30:17,741 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 00:30:17,742 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 00:30:17,743 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 00:30:17,743 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 00:30:17,744 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 00:30:17,753 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 00:30:17,754 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 00:30:17,755 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 00:30:17,757 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 00:30:17,758 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 00:30:17,758 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 00:30:17,759 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 00:30:17,760 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 00:30:17,761 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 00:30:17,762 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 00:30:17,762 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 00:30:17,763 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 00:30:17,764 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 00:30:17,765 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 00:30:17,766 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 00:30:17,768 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 00:30:17,902 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 00:30:17,913 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 00:30:17,925 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 00:30:17,941 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 00:30:17,954 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 00:30:17,973 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 00:30:17,978 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 00:30:17,992 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 00:30:18,037 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 00:30:18,044 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 00:30:18,058 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 00:30:18,067 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 00:30:18,079 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 00:30:18,089 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 00:30:18,097 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 00:30:18,104 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 00:30:18,114 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 00:30:18,121 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 00:30:18,131 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 00:30:18,141 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 00:30:18,146 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 00:30:18,156 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 00:30:18,163 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 00:30:18,170 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 00:30:18,194 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 00:30:18,202 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 00:30:18,246 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 00:30:18,253 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 00:30:18,312 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 00:30:18,314 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:30:18,314 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 00:30:18,314 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:30:18,355 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 00:30:18,364 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 00:30:18,672 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 00:30:18,686 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 00:30:18,690 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 00:30:18,795 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 2.608 seconds (JVM running for 7632.88)
2020-08-02 00:30:27,339 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:30:27,439 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:30:27,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:30:28,314 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-02 00:30:28,329 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-9] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-02 00:32:02,258 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10755 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 00:32:02,258 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 00:32:02,258 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 00:32:02,993 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 00:32:02,994 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 00:32:03,004 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 00:32:03,005 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 00:32:03,005 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 00:32:03,006 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 00:32:03,006 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 00:32:03,006 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 00:32:03,007 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 00:32:03,007 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 00:32:03,007 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 00:32:03,007 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 00:32:03,008 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 00:32:03,008 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 00:32:03,008 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 00:32:03,009 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 00:32:03,009 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 00:32:03,074 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 00:32:03,074 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 00:32:03,088 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 93ms. Found 15 MongoDB repository interfaces.
2020-08-02 00:32:03,676 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:32:03,676 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:32:03,804 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:32:03,805 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 00:32:03,810 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 00:32:03,811 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 00:32:03,811 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 00:32:03,812 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 00:32:03,812 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 00:32:03,813 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 00:32:03,814 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 00:32:03,814 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 00:32:03,815 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 00:32:03,815 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 00:32:03,816 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 00:32:03,816 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 00:32:03,816 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 00:32:03,817 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 00:32:03,818 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 00:32:03,818 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 00:32:03,819 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 00:32:03,819 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 00:32:03,819 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 00:32:03,820 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 00:32:03,821 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 00:32:03,933 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 00:32:03,943 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 00:32:03,956 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 00:32:03,967 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 00:32:03,975 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 00:32:04,002 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 00:32:04,007 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 00:32:04,017 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 00:32:04,049 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 00:32:04,056 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 00:32:04,071 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 00:32:04,079 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 00:32:04,087 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 00:32:04,095 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 00:32:04,125 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 00:32:04,171 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 00:32:04,191 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 00:32:04,203 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 00:32:04,215 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 00:32:04,228 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 00:32:04,234 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 00:32:04,242 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 00:32:04,249 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 00:32:04,256 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 00:32:04,276 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 00:32:04,285 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 00:32:04,294 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 00:32:04,301 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 00:32:04,368 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 00:32:04,371 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:32:04,372 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 00:32:04,372 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 00:32:04,464 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 00:32:04,470 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 00:32:04,763 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 00:32:04,769 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 00:32:04,771 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 00:32:04,814 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 2.604 seconds (JVM running for 7738.899)
2020-08-02 00:34:58,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:34:59,020 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-02 00:34:59,090 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:34:59,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:34:59,107 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-02 00:37:41,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:37:42,055 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:37:42,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:38:37,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:38:37,640 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:38:37,643 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:38:52,071 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:38:52,075 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:38:52,075 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:39:00,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:39:00,973 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:39:00,974 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:00,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cf217f1)
2020-08-02 00:39:00,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fc06e3d)
2020-08-02 00:39:00,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45753385)
2020-08-02 00:39:00,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@317d613c)
2020-08-02 00:39:00,984 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,984 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d3cb57d)
2020-08-02 00:39:00,984 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,985 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41f18561)
2020-08-02 00:39:00,985 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,989 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@775a9fc2)
2020-08-02 00:39:00,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f155b09)
2020-08-02 00:39:00,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:00,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62021907)
2020-08-02 00:39:06,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "12"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:39:06,795 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "12"}}, Fields: {}, Sort: {}
2020-08-02 00:39:06,795 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:06,910 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=12}} for Document{{}} fields.
2020-08-02 00:39:06,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:06,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:06,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20b97426)
2020-08-02 00:39:08,911 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:39:08,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:39:08,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:08,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cf33087)
2020-08-02 00:39:08,918 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:39:08,920 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:08,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f22e678)
2020-08-02 00:39:08,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e4518bd)
2020-08-02 00:39:08,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@690bf53e)
2020-08-02 00:39:08,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17b63680)
2020-08-02 00:39:08,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fadca80)
2020-08-02 00:39:08,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1989e9c3)
2020-08-02 00:39:08,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e587f89)
2020-08-02 00:39:08,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c47bdc2)
2020-08-02 00:39:08,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:08,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d6f8500)
2020-08-02 00:39:17,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:39:17,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:39:24,754 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:39:24,755 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:39:24,757 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:39:24,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=ITC, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1e7e2de)
2020-08-02 00:39:24,764 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-08-02 00:39:24,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 00:39:24,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 00:39:24,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@9efe5b6)
2020-08-02 00:39:24,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1e7e2de, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:39:24,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:39:24,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1e7e2de, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:39:24,774 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-02 00:39:24,775 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:24,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:24,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2248ee4c)
2020-08-02 00:39:24,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:24,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15654f7d)
2020-08-02 00:39:24,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:24,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ce17d66)
2020-08-02 00:39:24,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:24,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b33ea39)
2020-08-02 00:39:24,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:24,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e6c499d)
2020-08-02 00:39:24,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:24,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61cdeb8a)
2020-08-02 00:39:24,779 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-08-02 00:39:24,780 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 00:39:24,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=Oil}})
2020-08-02 00:39:24,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@66c0a098)
2020-08-02 00:39:24,781 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-08-02 00:39:24,782 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 00:39:24,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-08-02 00:39:24,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1322ea2d)
2020-08-02 00:39:25,345 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:39:25,350 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:39:25,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:25,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75e05306)
2020-08-02 00:39:25,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a450f1a)
2020-08-02 00:39:25,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6eb9b4fe)
2020-08-02 00:39:25,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8496c33)
2020-08-02 00:39:25,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fc6665f)
2020-08-02 00:39:25,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dd98b62)
2020-08-02 00:39:25,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ee4da63)
2020-08-02 00:39:25,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d0f0978)
2020-08-02 00:39:25,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:25,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71b77418)
2020-08-02 00:39:28,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:39:28,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:39:38,545 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:39:38,546 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:39:38,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:39:38,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@37f32340)
2020-08-02 00:39:38,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@37f32340, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:39:38,549 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:39:38,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@37f32340, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:39:38,551 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-02 00:39:38,552 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:38,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:38,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13476d6d)
2020-08-02 00:39:38,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:38,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d80a566)
2020-08-02 00:39:38,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:38,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6add508e)
2020-08-02 00:39:38,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:38,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c1e39fd)
2020-08-02 00:39:38,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:38,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@141a1716)
2020-08-02 00:39:38,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:38,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c892b66)
2020-08-02 00:39:38,556 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-08-02 00:39:38,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 00:39:38,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=Oil}})
2020-08-02 00:39:38,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@2cd05759)
2020-08-02 00:39:38,558 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-08-02 00:39:38,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 00:39:38,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-08-02 00:39:38,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@61cc52ef)
2020-08-02 00:39:46,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:39:46,959 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:39:46,961 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:46,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31d45551)
2020-08-02 00:39:46,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ac32d08)
2020-08-02 00:39:46,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@470a4944)
2020-08-02 00:39:46,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d33366d)
2020-08-02 00:39:46,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ede9847)
2020-08-02 00:39:46,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dd641f9)
2020-08-02 00:39:46,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4883636e)
2020-08-02 00:39:46,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cf7b44d)
2020-08-02 00:39:46,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:46,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36e11f34)
2020-08-02 00:39:47,119 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:39:47,125 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:39:47,126 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:39:47,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e38cc2b)
2020-08-02 00:39:47,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@596e51e3)
2020-08-02 00:39:47,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f9b740)
2020-08-02 00:39:47,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33538fef)
2020-08-02 00:39:47,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bd2443a)
2020-08-02 00:39:47,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4098f1ea)
2020-08-02 00:39:47,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e950d0e)
2020-08-02 00:39:47,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2116d7c4)
2020-08-02 00:39:47,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:39:47,134 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@589ca448)
2020-08-02 00:40:56,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:40:56,364 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:40:56,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:40:56,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@528de8d5)
2020-08-02 00:40:56,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6056bb20)
2020-08-02 00:40:56,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29ceea32)
2020-08-02 00:40:56,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65127b5d)
2020-08-02 00:40:56,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5864fc6a)
2020-08-02 00:40:56,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dbed3fd)
2020-08-02 00:40:56,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@537f2702)
2020-08-02 00:40:56,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@254166a3)
2020-08-02 00:40:56,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a3949cd)
2020-08-02 00:40:56,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:40:56,519 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:40:56,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:40:56,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5572f89b)
2020-08-02 00:40:56,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e92fa6c)
2020-08-02 00:40:56,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b401f72)
2020-08-02 00:40:56,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@509f8a2b)
2020-08-02 00:40:56,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12eb0683)
2020-08-02 00:40:56,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bd3df28)
2020-08-02 00:40:56,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6063e6af)
2020-08-02 00:40:56,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c81f65a)
2020-08-02 00:40:56,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:40:56,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6143e57)
2020-08-02 00:41:20,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:41:20,240 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:41:20,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:41:20,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29bbff44)
2020-08-02 00:41:20,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50731c61)
2020-08-02 00:41:20,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16a87b2a)
2020-08-02 00:41:20,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72236eb8)
2020-08-02 00:41:20,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@494ee67)
2020-08-02 00:41:20,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c4c6a80)
2020-08-02 00:41:20,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19e83908)
2020-08-02 00:41:20,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7057d223)
2020-08-02 00:41:20,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5313ed98)
2020-08-02 00:41:20,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:41:20,269 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:41:20,271 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:41:20,273 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,274 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@518335af)
2020-08-02 00:41:20,274 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6aadab8c)
2020-08-02 00:41:20,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@785007e0)
2020-08-02 00:41:20,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1642ca33)
2020-08-02 00:41:20,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e24bb19)
2020-08-02 00:41:20,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59d29a9a)
2020-08-02 00:41:20,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2145e947)
2020-08-02 00:41:20,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21d6ac0e)
2020-08-02 00:41:20,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:20,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ad1375e)
2020-08-02 00:41:28,544 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 00:41:28,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 00:41:28,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:41:28,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596308327/bdf9n8jo4yutvudbxigw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6c10521e)
2020-08-02 00:41:28,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6c10521e, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:41:28,551 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 00:41:28,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6c10521e, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:41:31,190 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:41:31,192 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 00:41:31,193 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:41:31,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3570473)
2020-08-02 00:41:31,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63cbfbe1)
2020-08-02 00:41:31,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c83ac70)
2020-08-02 00:41:31,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@723e46fd)
2020-08-02 00:41:31,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4971b055)
2020-08-02 00:41:31,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75594e69)
2020-08-02 00:41:31,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24689c9e)
2020-08-02 00:41:31,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24613f40)
2020-08-02 00:41:31,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 00:41:31,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60d6d081)
2020-08-02 00:41:36,081 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:41:36,153 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:41:36,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:41:52,826 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "16,17"] with root cause
java.lang.NumberFormatException: For input string: "16,17"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.base/java.lang.Long.parseLong(Long.java:692)
	at java.base/java.lang.Long.parseLong(Long.java:817)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.getItemDetailsList(ItemDetailsServiceImpl.java:358)
	at com.initializers.services.apiservices.controller.AdminController.getItemDetails(AdminController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-02 00:42:00,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:42:00,952 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:42:00,958 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:42:06,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "14"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:42:09,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "14"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:42:15,181 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "14"}]}}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "31"}, { "$numberLong" : "32"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:42:26,812 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:42:36,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:42:36,456 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:42:55,935 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "16"}}, Fields: {}, Sort: {}
2020-08-02 00:42:55,936 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 00:42:55,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 00:42:55,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@428a6566)
2020-08-02 00:42:55,938 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-08-02 00:42:55,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 00:42:55,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 00:42:55,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2e6f21c2)
2020-08-02 00:42:55,949 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-02 00:42:56,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@70b09e5d, Document{{_id=39, categoryId=16, subCategoryId=27, name=Mobile, description=Document{{itemProperties=Test, sellerName=Mobile, disclaimer=Good}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:42:56,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-08-02 00:42:56,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@70b09e5d, Document{{_id=39, categoryId=16, subCategoryId=27, name=Mobile, description=Document{{itemProperties=Test, sellerName=Mobile, disclaimer=Good}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 00:42:56,055 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=39, available=Y}} for Document{{}} fields.
2020-08-02 00:42:56,056 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "39"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:42:56,058 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=16}} for Document{{name=16}} fields.
2020-08-02 00:42:56,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{name=16}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 00:42:56,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, name=Cleaning Product}})
2020-08-02 00:42:56,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, name=Cleaning Product}}, com.initializers.services.apiservices.model.item.ItemCategory@54e29669)
2020-08-02 00:42:56,060 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-08-02 00:42:56,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 00:42:56,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-08-02 00:42:56,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@67aa6794)
2020-08-02 00:42:56,248 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "39"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:42:56,254 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "39"}}, Fields: {}, Sort: {}
2020-08-02 00:42:56,255 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "39"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:42:56,336 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:42:56,336 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:42:56,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "39"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:42:56,348 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "39"}}, Fields: {}, Sort: {}
2020-08-02 00:42:56,349 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "39"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:43:01,284 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:43:01,374 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:43:01,374 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:43:06,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "39"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:43:06,805 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "39"}}, Fields: {}, Sort: {}
2020-08-02 00:43:06,806 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "39"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:43:08,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:43:08,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:43:08,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:43:15,480 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "name" : { "$in" : ["Mobile"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:43:17,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "39"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:43:17,653 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "39"}}, Fields: {}, Sort: {}
2020-08-02 00:43:17,654 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "39"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 00:46:36,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 00:46:36,882 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 00:46:36,890 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 00:47:29,411 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 00:47:29,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 00:47:29,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2c7d2ff6)
2020-08-02 00:47:29,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 00:47:29,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@610e3d59)
2020-08-02 00:47:29,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 00:47:29,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@3670d1fe)
2020-08-02 00:47:29,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 00:47:29,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@6829c3d5)
2020-08-02 00:47:29,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 00:47:29,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2d6e43b9)
2020-08-02 00:47:29,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 00:47:29,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3d9a47b8)
2020-08-02 00:47:29,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 00:47:29,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@dd58ed4)
2020-08-02 00:47:30,398 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 00:47:30,407 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-8] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-08-02 11:05:00,325 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:05:00,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:05:00,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:05:03,658 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:05:03,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:05:03,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3eba7809)
2020-08-02 11:05:03,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:05:03,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@a983e8d)
2020-08-02 11:05:03,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:05:03,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@1409926d)
2020-08-02 11:05:03,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:05:03,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@13f0a577)
2020-08-02 11:05:03,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:05:03,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4bb2d79e)
2020-08-02 11:05:03,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:05:03,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@78003fbf)
2020-08-02 11:05:03,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:05:03,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1c1666bd)
2020-08-02 11:05:05,234 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:05:05,304 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:05:07,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:05:07,102 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:05:07,103 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:05:07,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,105 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47771976)
2020-08-02 11:05:07,105 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,105 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30d8e1a6)
2020-08-02 11:05:07,105 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11081f73)
2020-08-02 11:05:07,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2862ea99)
2020-08-02 11:05:07,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5721ea4a)
2020-08-02 11:05:07,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2083e4d9)
2020-08-02 11:05:07,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71a1943d)
2020-08-02 11:05:07,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e289eb2)
2020-08-02 11:05:07,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:05:07,108 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16035e87)
2020-08-02 11:05:08,928 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:05:08,987 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:05:08,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:05:10,681 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:05:10,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:05:10,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@71e07779)
2020-08-02 11:05:10,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:05:10,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@733ea0d7)
2020-08-02 11:05:10,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:05:10,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@6aeb8320)
2020-08-02 11:05:10,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:05:10,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@113f8a0a)
2020-08-02 11:05:10,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:05:10,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@63967ceb)
2020-08-02 11:05:10,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:05:10,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@65a85056)
2020-08-02 11:05:10,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:05:10,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@536c2d40)
2020-08-02 11:05:14,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:09:15,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:09:15,426 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:09:15,428 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:09:18,209 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:09:18,318 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:09:18,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:16:09,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:18:17,212 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:18:17,300 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:18:17,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:19:56,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:19:56,849 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:19:56,849 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:20:08,085 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:20:08,090 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:20:08,091 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:20:08,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@96b1807)
2020-08-02 11:20:08,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62fc3a10)
2020-08-02 11:20:08,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a118c24)
2020-08-02 11:20:08,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e37df58)
2020-08-02 11:20:08,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f4d49b9)
2020-08-02 11:20:08,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ce2d8fa)
2020-08-02 11:20:08,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a3413ee)
2020-08-02 11:20:08,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4aa9c2ef)
2020-08-02 11:20:08,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:08,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ffc4a82)
2020-08-02 11:20:09,879 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:20:09,879 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:20:09,989 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:20:12,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:20:12,440 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:20:12,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:20:12,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3aec31e3)
2020-08-02 11:20:12,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7993b7b2)
2020-08-02 11:20:12,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7be5b924)
2020-08-02 11:20:12,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f34ae4a)
2020-08-02 11:20:12,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@548cf566)
2020-08-02 11:20:12,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@203013c5)
2020-08-02 11:20:12,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f599f80)
2020-08-02 11:20:12,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b429ec2)
2020-08-02 11:20:12,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:20:12,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b92dc36)
2020-08-02 11:20:31,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:20:31,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:20:31,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:20:33,439 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:20:33,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:20:33,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6ecfc0ff)
2020-08-02 11:20:33,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:20:33,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@49c21790)
2020-08-02 11:20:33,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:20:33,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@7bf625c5)
2020-08-02 11:20:33,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:20:33,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@3145b93c)
2020-08-02 11:20:33,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:20:33,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@211d5fd3)
2020-08-02 11:20:33,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:20:33,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@78bab2f7)
2020-08-02 11:20:33,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:20:33,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@32287828)
2020-08-02 11:20:40,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:20:40,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:20:41,009 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:20:41,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:20:41,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3acfc8d9)
2020-08-02 11:20:41,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:20:41,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@14c25def)
2020-08-02 11:20:41,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:20:41,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@4f0fcecc)
2020-08-02 11:20:41,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:20:41,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@7d7b1ed0)
2020-08-02 11:20:41,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:20:41,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@393688a6)
2020-08-02 11:20:41,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:20:41,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3f1d874a)
2020-08-02 11:20:41,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:20:41,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@ed557cb)
2020-08-02 11:20:47,022 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:20:53,713 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "24"}}, Fields: {}, Sort: {}
2020-08-02 11:20:53,715 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 11:20:53,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, categoryId=16, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785894/dqvjv1jgngerqvou3if3.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:20:53,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, categoryId=16, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785894/dqvjv1jgngerqvou3if3.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@22013185)
2020-08-02 11:20:55,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:20:55,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:20:59,848 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "24"}}, Fields: {}, Sort: {}
2020-08-02 11:20:59,849 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 11:20:59,851 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, categoryId=16, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785894/dqvjv1jgngerqvou3if3.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:20:59,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, categoryId=16, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785894/dqvjv1jgngerqvou3if3.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@48c48697)
2020-08-02 11:21:11,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:21:11,996 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:21:14,897 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:21:14,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:21:14,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3573648f)
2020-08-02 11:21:14,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:21:14,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@f62baac)
2020-08-02 11:21:14,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:21:14,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@bd8bf15)
2020-08-02 11:21:14,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:21:14,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@768d4cb6)
2020-08-02 11:21:14,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:21:14,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@58f419f4)
2020-08-02 11:21:14,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:21:14,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@42596f9c)
2020-08-02 11:21:14,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:21:14,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@cb740d5)
2020-08-02 11:21:17,499 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "18"}}, Fields: {}, Sort: {}
2020-08-02 11:21:17,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:21:17,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:21:17,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@40beb9d)
2020-08-02 11:21:20,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:21:20,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:21:20,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2b7d555f)
2020-08-02 11:21:20,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:21:20,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@26838b2e)
2020-08-02 11:21:20,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:21:20,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@75777f63)
2020-08-02 11:21:20,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:21:20,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@51380509)
2020-08-02 11:21:20,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:21:20,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@10ae65dc)
2020-08-02 11:21:20,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:21:20,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2a4e561c)
2020-08-02 11:21:20,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:21:20,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@648ca851)
2020-08-02 11:21:22,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:21:27,795 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:21:27,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:21:46,744 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}, { "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:21:53,952 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}, { "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:21:56,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}, { "$numberLong" : "14"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:22:08,108 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}, { "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:22:13,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:22:15,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:22:15,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:22:15,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@758de984)
2020-08-02 11:22:15,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:22:15,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@16eef26c)
2020-08-02 11:22:15,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:22:15,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@4ec8b81b)
2020-08-02 11:22:15,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:22:15,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@4f874fb3)
2020-08-02 11:22:15,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:22:15,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@55dc4e0e)
2020-08-02 11:22:15,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:22:15,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@34c0bb4b)
2020-08-02 11:22:15,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:22:15,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3f43c5a8)
2020-08-02 11:22:20,197 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:22:20,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:22:30,970 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}, { "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:22:41,353 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:22:45,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:22:54,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$match" : { "name" : { "$in" : ["aa"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:22:59,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$match" : { "name" : { "$in" : ["aa-"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:23:02,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:23:10,398 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:23:10,403 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 11:23:10,405 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:18,519 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=9}} for Document{{}} fields.
2020-08-02 11:25:18,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:25:18,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:25:18,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1813978c)
2020-08-02 11:25:18,526 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-08-02 11:25:18,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:18,528 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 11:25:18,529 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:18,534 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-02 11:25:18,537 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=9}} for Document{{}} fields.
2020-08-02 11:25:18,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:25:18,539 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:25:18,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@74c841b2)
2020-08-02 11:25:18,540 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-08-02 11:25:18,541 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:18,543 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-08-02 11:25:18,544 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 11:25:18,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:25:18,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@50b1a947)
2020-08-02 11:25:18,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@50b1a947, Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:25:18,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, offer, imageLink, _class]
2020-08-02 11:25:18,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@50b1a947, Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:25:18,582 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=9}} for Document{{}} fields.
2020-08-02 11:25:18,583 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:25:18,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:25:18,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@46d2af1f)
2020-08-02 11:25:18,585 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-08-02 11:25:18,586 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:18,588 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-08-02 11:25:18,589 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:25:18,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:25:18,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@253131f6)
2020-08-02 11:25:18,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@253131f6, Document{{_id=14, name=Oil, description=upto 35% offer, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:25:18,592 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-02 11:25:18,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@253131f6, Document{{_id=14, name=Oil, description=upto 35% offer, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:25:18,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@5f6af19b, Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:18,594 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-08-02 11:25:18,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@5f6af19b, Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:18,859 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=28}} for Document{{}} fields.
2020-08-02 11:25:18,861 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "28"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:18,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:18,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e076da1)
2020-08-02 11:25:19,028 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=28}} for Document{{}} fields.
2020-08-02 11:25:19,029 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "28"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:19,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:19,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ebef32f)
2020-08-02 11:25:26,703 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=9}} for Document{{}} fields.
2020-08-02 11:25:26,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:25:26,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:26,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:26,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f12e59)
2020-08-02 11:25:26,707 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 11:25:26,708 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:26,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:26,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2fbc4d2a)
2020-08-02 11:25:32,327 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:25:32,327 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:25:32,328 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:25:38,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:25:38,206 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 11:25:38,207 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:38,208 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:38,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@498d5b51)
2020-08-02 11:25:50,471 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=9}} for Document{{}} fields.
2020-08-02 11:25:50,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:25:50,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:25:50,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@202c4bd7)
2020-08-02 11:25:50,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@202c4bd7, Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:25:50,477 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 11:25:50,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@202c4bd7, Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:25:51,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:25:51,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:25:51,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:25:55,417 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:25:55,422 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 11:25:55,423 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:25:55,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:25:55,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39da6b8d)
2020-08-02 11:26:07,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:26:07,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:26:07,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:26:09,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:26:09,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:26:35,759 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-08-02 11:26:35,760 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:26:35,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:26:35,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5f83558)
2020-08-02 11:26:35,765 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-08-02 11:26:35,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 11:26:35,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:26:35,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@250aab9)
2020-08-02 11:26:35,769 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-02 11:26:35,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@138be7ff, Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:26:35,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-08-02 11:26:35,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@138be7ff, Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:26:35,772 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=40, available=Y}} for Document{{}} fields.
2020-08-02 11:26:35,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "40"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:26:35,773 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-08-02 11:26:35,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:26:35,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=Grocery}})
2020-08-02 11:26:35,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=Grocery}}, com.initializers.services.apiservices.model.item.ItemCategory@1b484b3d)
2020-08-02 11:26:35,776 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-08-02 11:26:35,777 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 11:26:35,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-08-02 11:26:35,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@23b994b3)
2020-08-02 11:26:36,245 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:26:36,246 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:26:36,246 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:26:36,251 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:26:36,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:26:36,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:26:36,359 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:26:36,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:15,080 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=40}} for Document{{}} fields.
2020-08-02 11:27:15,082 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:27:15,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:27:15,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2725aa33)
2020-08-02 11:27:15,085 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=40, available=Y}} for Document{{}} fields.
2020-08-02 11:27:15,087 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "40"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:15,090 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:27:15,091 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:15,094 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-02 11:27:15,095 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=40}} for Document{{}} fields.
2020-08-02 11:27:15,096 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:27:15,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:27:15,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@16ccf411)
2020-08-02 11:27:15,098 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=40, available=Y}} for Document{{}} fields.
2020-08-02 11:27:15,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "40"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:15,101 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-08-02 11:27:15,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 11:27:15,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:27:15,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7ee79621)
2020-08-02 11:27:15,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7ee79621, Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:27:15,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, name, offer, imageLink, _class]
2020-08-02 11:27:15,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7ee79621, Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 11:27:15,107 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=40}} for Document{{}} fields.
2020-08-02 11:27:15,108 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:27:15,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:27:15,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=40, categoryId=13, subCategoryId=27, name=tab, description=Document{{itemProperties=Test, sellerName=tab, disclaimer=testtest}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5087ce1)
2020-08-02 11:27:15,110 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=40, available=Y}} for Document{{}} fields.
2020-08-02 11:27:15,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "40"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:15,113 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-08-02 11:27:15,114 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:27:15,115 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:27:15,115 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@ff62a41)
2020-08-02 11:27:15,116 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@ff62a41, Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:27:15,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-02 11:27:15,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@ff62a41, Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:27:15,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@7ad670aa, Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:15,119 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-08-02 11:27:15,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@7ad670aa, Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:15,480 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=29}} for Document{{}} fields.
2020-08-02 11:27:15,482 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:15,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:15,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66ce2b06)
2020-08-02 11:27:15,590 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=29}} for Document{{}} fields.
2020-08-02 11:27:15,591 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:15,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:15,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70cdf32a)
2020-08-02 11:27:18,828 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:27:18,831 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:27:19,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:19,139 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:27:19,139 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:27:24,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:24,361 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 11:27:24,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:24,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:24,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cfca224)
2020-08-02 11:27:25,566 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:27:25,566 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:25,566 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:27:34,149 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:34,155 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:27:34,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:34,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:34,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1eba95e)
2020-08-02 11:27:45,498 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=29}} for Document{{}} fields.
2020-08-02 11:27:45,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "29"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:45,501 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:45,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:45,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9ede7e9)
2020-08-02 11:27:45,503 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "29"}}, Fields: {}, Sort: {}
2020-08-02 11:27:45,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:53,249 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=40}} for Document{{}} fields.
2020-08-02 11:27:53,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:53,251 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:53,255 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:27:53,256 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:53,257 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:53,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9a15b58)
2020-08-02 11:27:55,680 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=29}} for Document{{}} fields.
2020-08-02 11:27:55,681 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "29"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:55,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:55,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:55,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51287a65)
2020-08-02 11:27:55,685 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "29"}}, Fields: {}, Sort: {}
2020-08-02 11:27:55,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:58,378 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=40}} for Document{{}} fields.
2020-08-02 11:27:58,379 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:27:58,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:58,384 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:27:58,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:27:58,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:27:58,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f1d6766)
2020-08-02 11:28:02,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:02,985 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:28:02,986 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:02,987 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:02,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6846e81)
2020-08-02 11:28:03,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:03,256 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:28:03,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:03,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:03,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a00c474)
2020-08-02 11:28:05,210 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=29}} for Document{{}} fields.
2020-08-02 11:28:05,211 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:05,211 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "29"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:05,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:05,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14cb79ed)
2020-08-02 11:28:05,215 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "29"}}, Fields: {}, Sort: {}
2020-08-02 11:28:05,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "29"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:07,713 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=40}} for Document{{}} fields.
2020-08-02 11:28:07,714 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "40"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:07,714 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:07,718 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "40"}}, Fields: {}, Sort: {}
2020-08-02 11:28:07,720 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "40"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:07,721 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:07,722 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=29, itemId=40, actualPrice=123.0, discount=19, discountPrice=100.0, value=1.0, unit=kg, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b632703)
2020-08-02 11:28:11,170 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:11,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:28:11,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:28:13,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:13,915 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:28:13,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:13,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,918 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60b68237)
2020-08-02 11:28:13,918 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d089b48)
2020-08-02 11:28:13,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a571288)
2020-08-02 11:28:13,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f9f651c)
2020-08-02 11:28:13,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b6ce5e2)
2020-08-02 11:28:13,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@207fb1c)
2020-08-02 11:28:13,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60a66a86)
2020-08-02 11:28:13,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7405540b)
2020-08-02 11:28:13,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:13,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@289aec9c)
2020-08-02 11:28:16,541 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=11}} for Document{{}} fields.
2020-08-02 11:28:16,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:16,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:16,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:16,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75ea172d)
2020-08-02 11:28:16,546 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-08-02 11:28:16,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:18,182 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 11:28:18,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:18,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:18,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2163a3d5)
2020-08-02 11:28:18,188 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:28:18,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:18,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2476f040)
2020-08-02 11:28:18,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30ac0d35)
2020-08-02 11:28:18,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@865ccfc)
2020-08-02 11:28:18,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@462b137b)
2020-08-02 11:28:18,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55cc0f0e)
2020-08-02 11:28:18,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5597527)
2020-08-02 11:28:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23fd4b5c)
2020-08-02 11:28:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3dd33493)
2020-08-02 11:28:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8d2e858)
2020-08-02 11:28:20,274 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 11:28:20,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:20,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:20,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@694c9114)
2020-08-02 11:28:24,321 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:24,323 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:28:24,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:24,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f07a048)
2020-08-02 11:28:24,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2605e7e3)
2020-08-02 11:28:24,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@576fb65a)
2020-08-02 11:28:24,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1305963a)
2020-08-02 11:28:24,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41d271f2)
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4861acd4)
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62161ee4)
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d9df0da)
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:24,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f92577a)
2020-08-02 11:28:26,522 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=11}} for Document{{}} fields.
2020-08-02 11:28:26,523 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:26,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:26,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:26,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@694e367f)
2020-08-02 11:28:26,527 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-08-02 11:28:26,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:55,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 11:28:55,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:28:55,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:55,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@542235b6)
2020-08-02 11:28:55,232 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:28:55,233 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:28:55,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12c9c8e3)
2020-08-02 11:28:55,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15f90d07)
2020-08-02 11:28:55,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cbda8f8)
2020-08-02 11:28:55,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50d36e4d)
2020-08-02 11:28:55,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c812a64)
2020-08-02 11:28:55,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@514d8fc6)
2020-08-02 11:28:55,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30d6177f)
2020-08-02 11:28:55,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b3cb62e)
2020-08-02 11:28:55,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:28:55,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7eeb6127)
2020-08-02 11:29:07,469 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=11}} for Document{{}} fields.
2020-08-02 11:29:07,470 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:29:07,471 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:29:07,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:07,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41089c55)
2020-08-02 11:29:07,476 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-08-02 11:29:07,477 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:29:24,152 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 11:29:24,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:29:24,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:29:24,155 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@466c5428)
2020-08-02 11:29:24,158 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:29:24,159 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:29:24,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f29c53)
2020-08-02 11:29:24,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2237edce)
2020-08-02 11:29:24,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4694bf13)
2020-08-02 11:29:24,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8791e1)
2020-08-02 11:29:24,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@170085a6)
2020-08-02 11:29:24,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ac45315)
2020-08-02 11:29:24,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69cb1979)
2020-08-02 11:29:24,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55ff8538)
2020-08-02 11:29:24,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:24,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46411794)
2020-08-02 11:29:37,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:29:37,077 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:29:37,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:29:37,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@424a90bd)
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d0defcc)
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f797624)
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c6dd015)
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ab4645d)
2020-08-02 11:29:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38759948)
2020-08-02 11:29:37,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c991034)
2020-08-02 11:29:37,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e0696ca)
2020-08-02 11:29:37,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@473991db)
2020-08-02 11:29:37,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:29:37,216 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 11:29:37,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:29:37,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ddb1c78)
2020-08-02 11:29:37,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5de539d2)
2020-08-02 11:29:37,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c69b069)
2020-08-02 11:29:37,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16dd3408)
2020-08-02 11:29:37,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5320c277)
2020-08-02 11:29:37,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27ff4a68)
2020-08-02 11:29:37,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16244c06)
2020-08-02 11:29:37,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@692657be)
2020-08-02 11:29:37,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:29:37,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c400397)
2020-08-02 11:29:40,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:29:40,235 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:29:40,236 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:34:12,046 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:34:12,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:34:12,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@f025012)
2020-08-02 11:34:12,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:34:12,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2b519acd)
2020-08-02 11:34:12,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:34:12,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@345e37d7)
2020-08-02 11:34:12,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:34:12,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@10b7e860)
2020-08-02 11:34:12,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:34:12,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@da8a8a4)
2020-08-02 11:34:12,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:34:12,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2a08cc2e)
2020-08-02 11:34:12,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-08-02 11:34:12,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6f2db637)
2020-08-02 11:34:15,129 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "20"}}, Fields: {}, Sort: {}
2020-08-02 11:34:15,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:34:15,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:34:15,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5f0464dc)
2020-08-02 11:34:16,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeDelete(Document{{_id=20}})
2020-08-02 11:34:16,731 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Remove using query: { "_id" : { "$numberLong" : "20"}} in collection: item_category.
2020-08-02 11:34:16,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterDelete(Document{{_id=20}})
2020-08-02 11:34:16,735 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "categoryId" : { "$numberLong" : "20"}}, Fields: {}, Sort: {}
2020-08-02 11:34:16,737 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeDelete(Document{{categoryId=20}})
2020-08-02 11:34:16,737 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Remove using query: { "categoryId" : { "$numberLong" : "20"}} in collection: item_sub_category.
2020-08-02 11:34:16,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterDelete(Document{{categoryId=20}})
2020-08-02 11:34:17,062 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:34:17,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:34:17,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2f29f2d8)
2020-08-02 11:34:17,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:34:17,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@30009bf3)
2020-08-02 11:34:17,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:34:17,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@1fb4b527)
2020-08-02 11:34:17,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:34:17,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@385e87d5)
2020-08-02 11:34:17,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:34:17,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@58810d34)
2020-08-02 11:34:17,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-08-02 11:34:17,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6c6adad4)
2020-08-02 11:34:20,768 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 11:34:20,769 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:34:20,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:34:20,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@43e5e283)
2020-08-02 11:34:22,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeDelete(Document{{_id=19}})
2020-08-02 11:34:22,658 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Remove using query: { "_id" : { "$numberLong" : "19"}} in collection: item_category.
2020-08-02 11:34:22,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterDelete(Document{{_id=19}})
2020-08-02 11:34:22,661 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "categoryId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-08-02 11:34:22,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeDelete(Document{{categoryId=19}})
2020-08-02 11:34:22,662 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Remove using query: { "categoryId" : { "$numberLong" : "19"}} in collection: item_sub_category.
2020-08-02 11:34:22,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterDelete(Document{{categoryId=19}})
2020-08-02 11:34:22,987 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:34:22,989 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:34:22,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@16a1eb02)
2020-08-02 11:34:22,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:34:22,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3c358803)
2020-08-02 11:34:22,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:34:22,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@737e8a79)
2020-08-02 11:34:22,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:34:22,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@4f3fe2c8)
2020-08-02 11:34:22,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:34:22,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@565ff9d6)
2020-08-02 11:34:26,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:34:37,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:34:37,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:34:37,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4076a75a)
2020-08-02 11:34:37,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:34:37,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@853da78)
2020-08-02 11:34:37,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}})
2020-08-02 11:34:37,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer}}, com.initializers.services.apiservices.model.item.ItemCategory@64d60ee0)
2020-08-02 11:34:37,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:34:37,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@66488043)
2020-08-02 11:34:37,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:34:37,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1371a7a7)
2020-08-02 11:34:43,127 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "16"}}, Fields: {}, Sort: {}
2020-08-02 11:34:43,128 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 11:34:43,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 11:34:43,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, name=Cleaning Product, description=Upto 9% offer, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@767bec41)
2020-08-02 11:34:44,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeDelete(Document{{_id=16}})
2020-08-02 11:34:44,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Remove using query: { "_id" : { "$numberLong" : "16"}} in collection: item_category.
2020-08-02 11:34:44,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterDelete(Document{{_id=16}})
2020-08-02 11:34:44,260 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "categoryId" : { "$numberLong" : "16"}}, Fields: {}, Sort: {}
2020-08-02 11:34:44,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeDelete(Document{{categoryId=16}})
2020-08-02 11:34:44,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Remove using query: { "categoryId" : { "$numberLong" : "16"}} in collection: item_sub_category.
2020-08-02 11:34:44,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterDelete(Document{{categoryId=16}})
2020-08-02 11:34:44,575 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 11:34:44,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 11:34:44,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@564d47f3)
2020-08-02 11:34:44,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 11:34:44,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1ae102c0)
2020-08-02 11:34:44,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 11:34:44,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@4a595405)
2020-08-02 11:34:44,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 11:34:44,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@70df8be0)
2020-08-02 11:34:47,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 11:34:55,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:35:32,993 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:35:32,996 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-08-02 11:35:32,997 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:35:32,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:32,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f94d9b)
2020-08-02 11:35:32,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:33,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a968e00)
2020-08-02 11:35:33,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:33,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63e2ffeb)
2020-08-02 11:35:41,273 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=5}} for Document{{}} fields.
2020-08-02 11:35:41,290 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:35:41,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667160/y3nke3vrp8tpooyoxt8k.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:41,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667160/y3nke3vrp8tpooyoxt8k.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@32d60faa)
2020-08-02 11:35:41,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@32d60faa, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:41,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 11:35:41,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@32d60faa, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:42,809 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=5}} for Document{{}} fields.
2020-08-02 11:35:42,810 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:35:42,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:42,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667155/xifybujaabqpkscgx97d.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7ef7f7b0)
2020-08-02 11:35:42,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7ef7f7b0, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:42,813 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 11:35:42,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7ef7f7b0, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:44,299 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=5}} for Document{{}} fields.
2020-08-02 11:35:44,300 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:35:44,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:44,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595667150/aoafjth0bxe2tj09vbkl.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5672fab)
2020-08-02 11:35:44,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5672fab, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:44,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 11:35:44,305 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@5672fab, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:45,815 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=5}} for Document{{}} fields.
2020-08-02 11:35:45,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:35:45,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:45,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665840/vgjlugx3rodyyru24omo.png, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3848a8ad)
2020-08-02 11:35:45,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@3848a8ad, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:45,822 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 11:35:45,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@3848a8ad, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:47,204 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=5}} for Document{{}} fields.
2020-08-02 11:35:47,206 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 11:35:47,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:47,208 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665949/j8h8r9jiq56keur4xnts.png], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5392ffad)
2020-08-02 11:35:47,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5392ffad, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:47,209 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 11:35:47,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@5392ffad, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1595616539/kpgdvtpzsj96jqiadc2h.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665568/ofcfer0cixiqajy0sapf.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1595665610/he8anfjjpkcgavbyzaia.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 11:35:49,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:35:49,933 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-08-02 11:35:49,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:35:49,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:49,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6df69ea2)
2020-08-02 11:35:49,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:49,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4fd81b27)
2020-08-02 11:35:49,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:49,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d972e49)
2020-08-02 11:35:50,029 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:35:50,035 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-08-02 11:35:50,037 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 11:35:50,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:50,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=22, itemId=5, actualPrice=560.0, discount=10, discountPrice=504.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58336606)
2020-08-02 11:35:50,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:50,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=23, itemId=5, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17517418)
2020-08-02 11:35:50,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 11:35:50,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, itemId=5, actualPrice=111.0, discount=10, discountPrice=100.0, value=2, unit=PACK, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7378faa4)
2020-08-02 11:36:11,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 11:36:11,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 11:36:11,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 11:36:11,897 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 12:05:15,711 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 12:05:15,804 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 12:05:15,812 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 12:05:21,839 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 12:05:21,841 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 12:05:21,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 12:05:21,843 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79f0ed23)
2020-08-02 12:05:21,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67d9d365)
2020-08-02 12:05:21,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73e41153)
2020-08-02 12:05:21,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16683034)
2020-08-02 12:05:21,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@688f5e2f)
2020-08-02 12:05:21,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41e4eaa0)
2020-08-02 12:05:21,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12d90546)
2020-08-02 12:05:21,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45677eb9)
2020-08-02 12:05:21,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 12:05:21,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@570b2e1c)
2020-08-02 12:05:31,210 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 12:05:31,211 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 12:05:31,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 12:05:31,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4ae9d8ab)
2020-08-02 12:05:38,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4ae9d8ab, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 12:05:38,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 12:05:38,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4ae9d8ab, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 12:05:53,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 12:05:54,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 12:05:54,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 12:31:11,181 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 10755 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 12:31:11,181 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 12:31:11,181 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 19:33:32,436 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 2037 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 19:33:32,468 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 19:33:32,469 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 19:33:36,401 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 19:33:36,430 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 19:33:36,461 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 19:33:36,462 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 19:33:36,463 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 19:33:36,464 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 19:33:36,465 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 19:33:36,466 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 19:33:36,466 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 19:33:36,467 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 19:33:36,468 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 19:33:36,470 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 19:33:36,472 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 19:33:36,473 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 19:33:36,474 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 19:33:36,475 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 19:33:36,475 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 19:33:36,632 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 19:33:36,633 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 19:33:36,683 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 250ms. Found 15 MongoDB repository interfaces.
2020-08-02 19:33:41,254 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:33:41,255 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:33:41,593 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:33:41,595 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:33:41,731 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 19:33:41,750 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 19:33:41,752 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 19:33:41,753 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 19:33:41,767 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 19:33:41,767 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 19:33:41,768 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 19:33:41,771 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 19:33:41,776 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 19:33:41,778 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 19:33:41,785 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 19:33:41,787 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 19:33:41,793 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 19:33:41,802 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 19:33:41,803 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 19:33:41,804 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 19:33:41,808 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 19:33:41,809 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 19:33:41,810 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 19:33:41,812 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 19:33:41,813 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 19:33:42,866 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 19:33:42,998 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 19:33:43,016 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 19:33:43,161 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 19:33:43,256 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 19:33:43,316 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 19:33:43,348 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 19:33:43,402 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 19:33:43,723 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 19:33:43,767 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 19:33:43,794 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 19:33:43,818 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 19:33:43,836 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 19:33:43,861 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 19:33:43,882 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 19:33:43,899 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 19:33:43,939 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 19:33:43,963 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 19:33:44,002 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 19:33:44,019 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 19:33:44,057 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 19:33:44,076 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 19:33:44,100 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 19:33:44,119 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 19:33:44,161 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 19:33:44,176 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 19:33:44,196 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 19:33:44,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 19:33:44,325 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 19:33:44,330 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 19:33:44,330 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 19:33:44,331 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 19:33:44,514 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 19:33:44,521 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 19:33:46,948 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 19:33:47,002 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 19:33:47,013 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 19:33:47,516 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 17.694 seconds (JVM running for 20.548)
2020-08-02 19:34:27,312 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 2037 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 19:34:27,313 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 19:34:27,313 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 19:34:28,301 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 19:34:28,303 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 19:34:28,314 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 19:34:28,315 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 19:34:28,315 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 19:34:28,316 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 19:34:28,316 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 19:34:28,316 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 19:34:28,317 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 19:34:28,317 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 19:34:28,317 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 19:34:28,318 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 19:34:28,318 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 19:34:28,318 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 19:34:28,319 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 19:34:28,319 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 19:34:28,319 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 19:34:28,381 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 19:34:28,381 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 19:34:28,382 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 78ms. Found 15 MongoDB repository interfaces.
2020-08-02 19:34:28,875 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:34:28,876 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:34:29,033 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:34:29,034 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:34:29,043 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 19:34:29,044 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 19:34:29,046 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 19:34:29,047 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 19:34:29,048 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 19:34:29,050 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 19:34:29,050 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 19:34:29,051 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 19:34:29,053 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 19:34:29,054 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 19:34:29,055 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 19:34:29,056 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 19:34:29,059 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 19:34:29,060 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 19:34:29,061 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 19:34:29,062 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 19:34:29,063 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 19:34:29,064 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 19:34:29,065 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 19:34:29,066 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 19:34:29,066 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 19:34:29,202 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 19:34:29,218 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 19:34:29,234 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 19:34:29,248 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 19:34:29,258 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 19:34:29,269 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 19:34:29,298 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 19:34:29,337 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 19:34:29,389 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 19:34:29,400 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 19:34:29,414 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 19:34:29,423 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 19:34:29,432 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 19:34:29,443 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 19:34:29,453 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 19:34:29,463 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 19:34:29,478 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 19:34:29,488 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 19:34:29,502 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 19:34:29,509 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 19:34:29,525 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 19:34:29,558 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 19:34:29,567 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 19:34:29,575 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 19:34:29,596 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 19:34:29,604 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 19:34:29,616 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 19:34:29,624 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 19:34:29,711 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 19:34:29,714 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 19:34:29,714 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 19:34:29,714 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 19:34:29,757 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 19:34:29,764 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 19:34:30,160 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 19:34:30,173 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 19:34:30,177 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 19:34:30,279 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.069 seconds (JVM running for 63.31)
2020-08-02 19:34:56,161 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:34:56,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:34:56,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3494ac5f)
2020-08-02 19:34:56,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:34:56,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@497951b5)
2020-08-02 19:34:56,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:34:56,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@17fdf708)
2020-08-02 19:34:56,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:34:56,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1a0cd1f6)
2020-08-02 19:34:56,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:34:56,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@beb70bc)
2020-08-02 19:34:56,313 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:34:56,322 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:34:56,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:34:56,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@785937a3)
2020-08-02 19:39:16,348 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:39:16,399 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-4] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-02 19:39:16,477 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 19:39:16,481 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 19:39:16,488 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-5] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-02 19:39:23,221 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:39:23,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:39:23,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@ba41d10)
2020-08-02 19:39:23,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:39:23,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4ea69200)
2020-08-02 19:39:23,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:39:23,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2c2b02c2)
2020-08-02 19:39:23,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:39:23,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7fa21d3c)
2020-08-02 19:39:23,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:39:23,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@54c5d345)
2020-08-02 19:39:23,262 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:39:23,263 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:39:23,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:39:23,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3564fad7)
2020-08-02 19:40:30,461 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:40:30,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:40:30,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2998483c)
2020-08-02 19:40:30,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:40:30,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@ea434cd)
2020-08-02 19:40:30,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:40:30,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@61d06325)
2020-08-02 19:40:30,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:40:30,480 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4efd218e)
2020-08-02 19:40:30,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:40:30,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@140fdab9)
2020-08-02 19:40:30,493 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:40:30,494 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:40:30,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:40:30,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@ee85e2e)
2020-08-02 19:41:12,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:41:34,516 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 2037 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 19:41:34,516 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 19:41:34,516 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 19:41:35,184 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 19:41:35,185 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 19:41:35,196 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 19:41:35,197 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 19:41:35,197 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 19:41:35,198 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 19:41:35,198 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 19:41:35,198 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 19:41:35,199 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 19:41:35,199 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 19:41:35,199 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 19:41:35,200 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 19:41:35,201 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 19:41:35,201 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 19:41:35,202 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 19:41:35,202 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 19:41:35,203 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 19:41:35,245 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 19:41:35,246 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 19:41:35,260 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 74ms. Found 15 MongoDB repository interfaces.
2020-08-02 19:41:35,881 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:41:35,882 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:41:36,138 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:41:36,140 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 19:41:36,148 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 19:41:36,149 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 19:41:36,152 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 19:41:36,154 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 19:41:36,155 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 19:41:36,156 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 19:41:36,166 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 19:41:36,168 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 19:41:36,169 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 19:41:36,169 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 19:41:36,170 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 19:41:36,170 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 19:41:36,171 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 19:41:36,174 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 19:41:36,175 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 19:41:36,181 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 19:41:36,182 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 19:41:36,182 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 19:41:36,185 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 19:41:36,186 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 19:41:36,188 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 19:41:36,443 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 19:41:36,455 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 19:41:36,467 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 19:41:36,483 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 19:41:36,497 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 19:41:36,507 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 19:41:36,514 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 19:41:36,526 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 19:41:36,566 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 19:41:36,577 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 19:41:36,590 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 19:41:36,604 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 19:41:36,615 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 19:41:36,624 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 19:41:36,645 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 19:41:36,663 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 19:41:36,682 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 19:41:36,696 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 19:41:36,712 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 19:41:36,720 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 19:41:36,734 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 19:41:36,743 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 19:41:36,753 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 19:41:36,765 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 19:41:36,796 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 19:41:36,820 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 19:41:36,844 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 19:41:36,863 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 19:41:36,993 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 19:41:36,996 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 19:41:36,996 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 19:41:36,997 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 19:41:37,041 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 19:41:37,050 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 19:41:37,487 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 19:41:37,496 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 19:41:37,499 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 19:41:37,585 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.124 seconds (JVM running for 490.616)
2020-08-02 19:41:44,098 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:41:44,115 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:41:44,138 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@71fbe10f)
2020-08-02 19:41:44,139 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:41:44,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7265a2b8)
2020-08-02 19:41:44,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:41:44,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@c2e0e47)
2020-08-02 19:41:44,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:41:44,142 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5fed1446)
2020-08-02 19:41:44,142 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:41:44,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7130752d)
2020-08-02 19:41:44,144 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:41:44,146 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:41:44,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:41:44,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@42cbf668)
2020-08-02 19:42:03,312 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:42:03,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:03,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@256029a6)
2020-08-02 19:42:03,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:03,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2ba7c37a)
2020-08-02 19:42:03,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:03,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2f9842d6)
2020-08-02 19:42:03,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:03,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6a9ac941)
2020-08-02 19:42:03,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:03,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4e13f0ad)
2020-08-02 19:42:03,328 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:42:03,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:42:03,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:42:03,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5bba4606)
2020-08-02 19:42:11,823 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:42:11,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:11,827 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@af81e2b)
2020-08-02 19:42:11,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:11,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@43fe104)
2020-08-02 19:42:11,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:11,832 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@fc1bcf2)
2020-08-02 19:42:11,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:11,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@748d4bcf)
2020-08-02 19:42:11,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:42:11,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@77a442a8)
2020-08-02 19:42:11,839 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:42:11,840 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:42:11,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:42:11,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@252d1470)
2020-08-02 19:43:21,735 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:43:21,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:43:21,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6b6b3709)
2020-08-02 19:43:21,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:43:21,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@252077fa)
2020-08-02 19:43:21,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:43:21,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@13df7cbe)
2020-08-02 19:43:21,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:43:21,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@74519db2)
2020-08-02 19:43:21,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:43:21,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@46302f4e)
2020-08-02 19:43:21,750 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:43:21,751 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:43:21,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:43:21,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@60091fd5)
2020-08-02 19:47:26,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:47:26,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:47:26,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4e453348)
2020-08-02 19:47:26,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:47:26,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@b47a4e4)
2020-08-02 19:47:26,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:47:26,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2595512c)
2020-08-02 19:47:26,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:47:26,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3a860f17)
2020-08-02 19:47:26,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:47:26,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5dbea47c)
2020-08-02 19:47:26,340 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:47:26,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:47:26,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:47:26,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6e0f2ee4)
2020-08-02 19:49:15,846 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:49:15,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:49:15,850 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@36d92155)
2020-08-02 19:49:15,851 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:49:15,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@ab5360e)
2020-08-02 19:49:15,853 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:49:15,855 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5b72296d)
2020-08-02 19:49:15,858 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:49:15,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@52f1ce73)
2020-08-02 19:49:15,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:49:15,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2ddd8ef1)
2020-08-02 19:49:15,863 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:49:15,864 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:49:15,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:49:15,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@efbc802)
2020-08-02 19:50:34,825 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:50:34,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:50:34,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@8dbb5e6)
2020-08-02 19:50:34,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:50:34,832 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@701f0542)
2020-08-02 19:50:34,832 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:50:34,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@37921e50)
2020-08-02 19:50:34,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:50:34,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1fcd48c0)
2020-08-02 19:50:34,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:50:34,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4a6cba5a)
2020-08-02 19:50:34,841 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:50:34,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:50:34,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:50:34,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@42d18340)
2020-08-02 19:51:12,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:51:12,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:51:12,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@37f030e7)
2020-08-02 19:51:12,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:51:12,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3937c869)
2020-08-02 19:51:12,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:51:12,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3d085b97)
2020-08-02 19:51:12,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:51:12,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@780ac252)
2020-08-02 19:51:12,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:51:12,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4ecba2bc)
2020-08-02 19:51:12,553 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:51:12,554 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:51:12,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:51:12,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@49b85f8c)
2020-08-02 19:54:56,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:54:56,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:54:56,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7193dcb3)
2020-08-02 19:54:56,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:54:56,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@25b97e95)
2020-08-02 19:54:56,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:54:56,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5e13b3f0)
2020-08-02 19:54:56,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:54:56,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@426572bd)
2020-08-02 19:54:56,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:54:56,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2d7c5806)
2020-08-02 19:54:56,583 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:54:56,585 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:54:56,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:54:56,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@69890b77)
2020-08-02 19:56:05,207 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 19:56:05,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:56:05,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@46baea1d)
2020-08-02 19:56:05,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:56:05,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6f264462)
2020-08-02 19:56:05,212 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:56:05,212 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@503cdffe)
2020-08-02 19:56:05,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:56:05,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@47d3b313)
2020-08-02 19:56:05,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 19:56:05,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@562853f6)
2020-08-02 19:56:05,218 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:56:05,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 19:56:05,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 19:56:05,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@bf00805)
2020-08-02 19:56:07,544 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:56:07,569 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-10] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-02 19:56:07,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 19:56:07,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 19:56:07,698 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-02 19:56:09,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:56:09,662 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:56:09,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 19:56:09,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40162377)
2020-08-02 19:56:09,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@251e8a03)
2020-08-02 19:56:09,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fc52cf7)
2020-08-02 19:56:09,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41da1862)
2020-08-02 19:56:09,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30a686b5)
2020-08-02 19:56:09,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61395c30)
2020-08-02 19:56:09,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@275d7674)
2020-08-02 19:56:09,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36d563f5)
2020-08-02 19:56:09,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:09,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3242c8b4)
2020-08-02 19:56:15,570 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:56:15,633 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 19:56:15,638 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 19:56:17,218 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:56:17,224 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-02 19:56:17,226 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 19:56:17,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:17,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dc5b3e)
2020-08-02 19:56:17,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:17,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18c73c36)
2020-08-02 19:56:17,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:17,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f0d9eab)
2020-08-02 19:56:17,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:17,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67161ed3)
2020-08-02 19:56:21,989 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:56:22,057 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 19:56:22,065 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 19:56:39,535 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:56:39,542 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:56:39,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 19:56:39,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2df57478)
2020-08-02 19:56:39,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d31c514)
2020-08-02 19:56:39,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@705ea1f5)
2020-08-02 19:56:39,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63d4d38f)
2020-08-02 19:56:39,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@508b8bcd)
2020-08-02 19:56:39,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54ee6da9)
2020-08-02 19:56:39,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@513a3fc8)
2020-08-02 19:56:39,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1437c6cb)
2020-08-02 19:56:39,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:56:39,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18eee263)
2020-08-02 19:58:03,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:58:03,452 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:58:03,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 19:58:03,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f6a810)
2020-08-02 19:58:03,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f49ba88)
2020-08-02 19:58:03,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5704a762)
2020-08-02 19:58:03,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@163812c2)
2020-08-02 19:58:03,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20b89e3d)
2020-08-02 19:58:03,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@287ed58)
2020-08-02 19:58:03,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@704a65dd)
2020-08-02 19:58:03,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26b2d714)
2020-08-02 19:58:03,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@429ffc89)
2020-08-02 19:58:03,480 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:58:03,485 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:58:03,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 19:58:03,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bdcb067)
2020-08-02 19:58:03,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7052457)
2020-08-02 19:58:03,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20541eb2)
2020-08-02 19:58:03,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@286b8025)
2020-08-02 19:58:03,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@168a52c7)
2020-08-02 19:58:03,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3803fbdd)
2020-08-02 19:58:03,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3822d3e1)
2020-08-02 19:58:03,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c3c0668)
2020-08-02 19:58:03,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:03,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8e46942)
2020-08-02 19:58:07,658 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:58:07,773 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 19:58:07,777 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 19:58:12,746 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 19:58:12,754 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 19:58:12,755 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 19:58:12,757 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,757 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a96f8f0)
2020-08-02 19:58:12,758 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,759 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b1c0f38)
2020-08-02 19:58:12,759 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,760 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d43ad93)
2020-08-02 19:58:12,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ac10595)
2020-08-02 19:58:12,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@471d2545)
2020-08-02 19:58:12,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ca39751)
2020-08-02 19:58:12,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6cfc8e63)
2020-08-02 19:58:12,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e53c3c4)
2020-08-02 19:58:12,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 19:58:12,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4afc46)
2020-08-02 20:02:03,973 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:02:04,096 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:02:04,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:02:07,508 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 20:02:07,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 20:02:07,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@30cf999b)
2020-08-02 20:02:07,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 20:02:07,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1c6f5035)
2020-08-02 20:02:07,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 20:02:07,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@421c8b21)
2020-08-02 20:02:07,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 20:02:07,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4e4cd493)
2020-08-02 20:02:08,835 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-08-02 20:02:08,837 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 20:02:08,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 20:02:08,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@519278ba)
2020-08-02 20:02:34,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 20:02:34,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 20:02:34,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@75eb38fa)
2020-08-02 20:02:34,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 20:02:34,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@702c381f)
2020-08-02 20:02:34,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 20:02:34,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@5057d27e)
2020-08-02 20:02:34,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 20:02:34,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@22461c60)
2020-08-02 20:02:37,806 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 20:02:37,816 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-7] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-08-02 20:02:39,407 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-08-02 20:02:39,408 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:02:39,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 20:02:39,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@5193c620)
2020-08-02 20:02:47,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 20:02:47,409 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:02:54,094 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:02:55,479 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:02:55,484 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:02:55,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:02:55,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59ac21bb)
2020-08-02 20:02:55,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@263556f3)
2020-08-02 20:02:55,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66b2a77d)
2020-08-02 20:02:55,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23362da0)
2020-08-02 20:02:55,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1baf6184)
2020-08-02 20:02:55,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17213ecc)
2020-08-02 20:02:55,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@645bea1a)
2020-08-02 20:02:55,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7612901c)
2020-08-02 20:02:55,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:02:55,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16517c1b)
2020-08-02 20:03:12,396 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:03:12,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:03:12,475 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:03:24,466 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:03:24,471 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:03:24,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:03:24,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15fc87c8)
2020-08-02 20:03:24,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74a4743c)
2020-08-02 20:03:24,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,480 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@412e2c07)
2020-08-02 20:03:24,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16d02bbe)
2020-08-02 20:03:24,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,483 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67e32c6b)
2020-08-02 20:03:24,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3031a13f)
2020-08-02 20:03:24,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ffd2a)
2020-08-02 20:03:24,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1755ab46)
2020-08-02 20:03:24,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:03:24,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@692b4db3)
2020-08-02 20:03:27,193 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:03:27,256 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:03:27,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:05:51,735 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:05:51,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:05:51,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:06:03,922 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:06:03,927 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:06:03,927 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:06:03,929 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,929 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@99da8a4)
2020-08-02 20:06:03,930 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,930 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@606c35a2)
2020-08-02 20:06:03,930 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@217caefb)
2020-08-02 20:06:03,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@88cfabf)
2020-08-02 20:06:03,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6cb0bb82)
2020-08-02 20:06:03,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d705293)
2020-08-02 20:06:03,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29bf22b0)
2020-08-02 20:06:03,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46096c3a)
2020-08-02 20:06:03,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:03,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f8ca3d2)
2020-08-02 20:06:16,081 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:06:16,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:06:16,192 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:06:19,408 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:06:19,412 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-02 20:06:19,413 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:06:19,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:19,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@717f133f)
2020-08-02 20:06:19,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:06:19,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56c6bf41)
2020-08-02 20:06:21,496 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:06:21,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:06:21,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:06:24,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 20:06:24,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 20:06:24,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@522ae641)
2020-08-02 20:06:24,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 20:06:24,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2c59637)
2020-08-02 20:06:24,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 20:06:24,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@77a407cb)
2020-08-02 20:06:24,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 20:06:24,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@67b8eac1)
2020-08-02 20:06:27,716 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 20:06:32,849 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "32"}}, Fields: {}, Sort: {}
2020-08-02 20:06:32,850 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "32"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:06:32,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=32, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 20:06:32,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=32, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1d184ef1)
2020-08-02 20:06:49,003 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "32"}}, Fields: {}, Sort: {}
2020-08-02 20:06:49,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "32"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:06:49,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=32, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 20:06:49,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=32, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@74f153ca)
2020-08-02 20:06:59,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@74f153ca, Document{{_id=32, categoryId=14, name=shopnow, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379016/noo4etxu8eqkczbebtez.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 20:06:59,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, imageLink, _class]
2020-08-02 20:06:59,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@74f153ca, Document{{_id=32, categoryId=14, name=shopnow, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379016/noo4etxu8eqkczbebtez.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 20:07:05,016 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 20:07:05,082 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:07:16,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 20:07:16,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:07:16,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@117188cf)
2020-08-02 20:07:16,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:07:16,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@72ae1117)
2020-08-02 20:07:16,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:07:16,480 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@754e5977)
2020-08-02 20:07:16,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:07:16,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@190cbf00)
2020-08-02 20:07:16,483 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:07:16,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4266b1e)
2020-08-02 20:07:16,485 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:07:16,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 20:07:16,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 20:07:16,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7d08cbed)
2020-08-02 20:07:49,600 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:07:49,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:07:49,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:08:11,564 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:08:11,570 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 20:08:11,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:08:11,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:08:11,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ff487ed)
2020-08-02 20:08:13,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:08:13,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:08:13,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:08:27,153 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:08:27,157 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 20:08:27,158 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:08:27,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:08:27,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c2c3d8f)
2020-08-02 20:08:42,587 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:08:42,725 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:08:42,727 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:08:45,394 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-02 20:08:45,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}})
2020-08-02 20:08:45,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3b7c958a)
2020-08-02 20:08:45,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}})
2020-08-02 20:08:45,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=Oil, description=upto 35% offer, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776939/virysp5rdygpu86p8v6w.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@71177ba4)
2020-08-02 20:08:45,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-08-02 20:08:45,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@178cc83b)
2020-08-02 20:08:45,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-08-02 20:08:45,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5d0c5b35)
2020-08-02 20:08:51,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-02 20:09:02,991 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 20:09:02,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:09:02,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@10b83bb6)
2020-08-02 20:09:02,995 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:09:02,995 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7e86de8)
2020-08-02 20:09:02,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:09:02,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@b173313)
2020-08-02 20:09:02,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:09:02,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@70271673)
2020-08-02 20:09:02,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:09:02,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2193e64a)
2020-08-02 20:09:02,999 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:09:03,000 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 20:09:03,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 20:09:03,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@655048bd)
2020-08-02 20:09:10,748 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:09:14,740 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:09:14,741 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:09:47,741 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-08-02 20:09:47,742 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 20:09:47,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-02 20:09:47,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, name=Grocery, description=upto 20% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595776992/nkpr6hbxvbgod1mbxizk.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@2752fc2e)
2020-08-02 20:09:47,744 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-08-02 20:09:47,745 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:09:47,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 20:09:47,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@784db08a)
2020-08-02 20:09:47,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-02 20:09:47,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@65ca5af, Document{{_id=41, categoryId=13, subCategoryId=27, name=Test, description=Document{{itemProperties=Test, sellerName=Test, disclaimer=Test}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:09:47,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-08-02 20:09:47,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@65ca5af, Document{{_id=41, categoryId=13, subCategoryId=27, name=Test, description=Document{{itemProperties=Test, sellerName=Test, disclaimer=Test}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:09:47,798 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=41, available=Y}} for Document{{}} fields.
2020-08-02 20:09:47,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "41"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:09:47,801 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-08-02 20:09:47,803 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 20:09:47,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, name=Grocery}})
2020-08-02 20:09:47,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, name=Grocery}}, com.initializers.services.apiservices.model.item.ItemCategory@511bf932)
2020-08-02 20:09:47,806 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-08-02 20:09:47,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:09:47,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-08-02 20:09:47,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@49f4c602)
2020-08-02 20:09:48,008 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "41"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:09:48,012 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "41"}}, Fields: {}, Sort: {}
2020-08-02 20:09:48,013 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "41"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:09:48,097 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:09:48,098 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:09:48,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "41"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:09:48,106 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "41"}}, Fields: {}, Sort: {}
2020-08-02 20:09:48,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "41"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:10:33,862 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:10:33,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:10:33,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:10:39,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "41"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:10:39,773 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "41"}}, Fields: {}, Sort: {}
2020-08-02 20:10:39,773 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "41"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:12:08,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:12:08,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:12:08,330 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:12:15,411 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:12:15,592 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:12:15,600 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:12:18,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:12:21,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:12:21,439 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:12:21,440 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:12:21,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@424c0c2a)
2020-08-02 20:12:21,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60387ea4)
2020-08-02 20:12:21,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ebd5b7d)
2020-08-02 20:12:21,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f5d8eba)
2020-08-02 20:12:21,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dd2e827)
2020-08-02 20:12:21,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ebc7867)
2020-08-02 20:12:21,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@aeeba7e)
2020-08-02 20:12:21,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5995ddc7)
2020-08-02 20:12:21,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:12:21,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@538c8502)
2020-08-02 20:12:43,825 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 20:12:43,827 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 20:12:43,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:12:43,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@13faf00c)
2020-08-02 20:12:46,453 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@13faf00c, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:12:46,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 20:12:46,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@13faf00c, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:12:57,108 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 20:12:57,110 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 20:12:57,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:12:57,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@361862c8)
2020-08-02 20:12:57,116 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@361862c8, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:12:57,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 20:12:57,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@361862c8, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:13:17,685 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 20:13:17,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 20:13:17,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:13:17,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@799a29fd)
2020-08-02 20:13:26,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@799a29fd, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:13:26,600 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 20:13:26,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@799a29fd, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:13:33,136 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 20:13:33,139 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:13:33,142 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:33,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c823fc)
2020-08-02 20:13:37,482 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:13:37,485 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:13:37,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:13:37,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2907e702)
2020-08-02 20:13:37,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5124dcdb)
2020-08-02 20:13:37,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1169c51f)
2020-08-02 20:13:37,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ef5e39d)
2020-08-02 20:13:37,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@685c24b6)
2020-08-02 20:13:37,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fe9ff62)
2020-08-02 20:13:37,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@407790bd)
2020-08-02 20:13:37,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@114f7a25)
2020-08-02 20:13:37,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:37,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@183f852e)
2020-08-02 20:13:39,438 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:13:39,603 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:13:39,608 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:13:43,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:13:43,802 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:13:43,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:13:43,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55a3a269)
2020-08-02 20:13:43,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70ccf35c)
2020-08-02 20:13:43,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38533b47)
2020-08-02 20:13:43,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@608206cf)
2020-08-02 20:13:43,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@287a505c)
2020-08-02 20:13:43,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fbb101c)
2020-08-02 20:13:43,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e938daf)
2020-08-02 20:13:43,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e5744cc)
2020-08-02 20:13:43,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:43,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@145501ea)
2020-08-02 20:13:49,570 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:13:49,575 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:13:54,892 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 20:13:54,894 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 20:13:54,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:13:54,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=New, sellerName=Mobile, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2bcbfca3)
2020-08-02 20:13:54,897 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-08-02 20:13:54,898 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:13:54,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-02 20:13:54,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=19, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1595785940/bvjd2ufj7bya7sc7cx4y.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1e368166)
2020-08-02 20:13:54,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2bcbfca3, Document{{_id=1, categoryId=14, subCategoryId=27, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:13:54,901 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 20:13:54,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2bcbfca3, Document{{_id=1, categoryId=14, subCategoryId=27, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:13:54,902 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-02 20:13:54,903 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:13:54,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:54,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6aec48e7)
2020-08-02 20:13:54,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:54,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b4818f3)
2020-08-02 20:13:54,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:54,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fef1c5b)
2020-08-02 20:13:54,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:54,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@35788371)
2020-08-02 20:13:54,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:54,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d5b5e49)
2020-08-02 20:13:54,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:54,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16ff4691)
2020-08-02 20:13:54,907 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-08-02 20:13:54,908 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 20:13:54,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=Oil}})
2020-08-02 20:13:54,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@674954c6)
2020-08-02 20:13:54,910 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-08-02 20:13:54,910 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:13:54,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-08-02 20:13:54,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@bee4d70)
2020-08-02 20:13:55,306 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:13:55,312 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:13:55,313 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:13:55,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f4fba15)
2020-08-02 20:13:55,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b023387)
2020-08-02 20:13:55,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6664e408)
2020-08-02 20:13:55,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c1c49c0)
2020-08-02 20:13:55,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e21db44)
2020-08-02 20:13:55,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34d5450c)
2020-08-02 20:13:55,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7550a33a)
2020-08-02 20:13:55,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b1ca619)
2020-08-02 20:13:55,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:13:55,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bb7bbc5)
2020-08-02 20:14:01,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:14:01,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:14:01,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:14:07,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 20:14:07,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:14:07,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@31f367e1)
2020-08-02 20:14:07,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:14:07,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4aa44d9b)
2020-08-02 20:14:07,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:14:07,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5d6a6314)
2020-08-02 20:14:07,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:14:07,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@59bbab95)
2020-08-02 20:14:07,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:14:07,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@735d132c)
2020-08-02 20:14:07,184 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:14:07,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 20:14:07,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 20:14:07,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@11e204c7)
2020-08-02 20:14:33,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:14:49,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:14:53,994 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:15:02,851 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:15:02,857 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-08-02 20:15:02,859 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:15:02,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:02,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=28, itemId=9, actualPrice=120.0, discount=5, discountPrice=114.0, value=1.0, unit=pc, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2dc856eb)
2020-08-02 20:15:20,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:15:21,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:15:21,058 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:15:24,994 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:15:25,001 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:15:25,002 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:15:25,003 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6281ed97)
2020-08-02 20:15:25,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4444f96b)
2020-08-02 20:15:25,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60737763)
2020-08-02 20:15:25,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74d582f1)
2020-08-02 20:15:25,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d282a0e)
2020-08-02 20:15:25,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1de6c880)
2020-08-02 20:15:25,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57d762b6)
2020-08-02 20:15:25,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@fcdb0b7)
2020-08-02 20:15:25,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:15:25,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63d9931a)
2020-08-02 20:17:17,828 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:17:17,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:17:17,920 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:19:23,374 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:19:23,374 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:19:32,144 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-02 20:19:32,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@268c7b57, Document{{_id=42, name=Test2, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:19:32,147 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Inserting Document containing fields: [_id, name, description, status, _class] in collection: item_details
2020-08-02 20:19:32,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@268c7b57, Document{{_id=42, name=Test2, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:19:32,149 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=42, available=Y}} for Document{{}} fields.
2020-08-02 20:19:32,149 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "42"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:19:32,151 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-08-02 20:19:32,152 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-02 20:19:32,153 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-08-02 20:19:32,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-02 20:19:32,458 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "42"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:19:32,462 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "42"}}, Fields: {}, Sort: {}
2020-08-02 20:19:32,462 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "42"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:19:32,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:19:32,628 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:19:32,629 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "42"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:19:32,633 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "42"}}, Fields: {}, Sort: {}
2020-08-02 20:19:32,635 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "42"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:20:11,169 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:20:11,274 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:20:11,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:20:16,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "42"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:20:16,563 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "42"}}, Fields: {}, Sort: {}
2020-08-02 20:20:16,565 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "42"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:20:18,996 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:20:19,104 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:20:19,106 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:20:21,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:20:21,769 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:20:21,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:20:21,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d699751)
2020-08-02 20:20:21,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15c136da)
2020-08-02 20:20:21,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@170268d4)
2020-08-02 20:20:21,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40f00c6d)
2020-08-02 20:20:21,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7192d83d)
2020-08-02 20:20:21,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6df94733)
2020-08-02 20:20:21,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6939c690)
2020-08-02 20:20:21,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29ea2cbe)
2020-08-02 20:20:21,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:21,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e5e5a8e)
2020-08-02 20:20:25,949 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-02 20:20:25,951 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-02 20:20:25,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=27, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:20:25,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=27, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379365/hytmq8eat7zpinodyots.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3d1e7689)
2020-08-02 20:20:25,955 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@3d1e7689, Document{{_id=1, categoryId=14, subCategoryId=27, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:20:25,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-02 20:20:25,957 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@3d1e7689, Document{{_id=1, categoryId=14, subCategoryId=27, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1596350137/pxlvfzoihyusbacrcksy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1596379405/erbio3vnjb6qgezjw34o.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-02 20:20:31,685 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:20:31,691 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:20:31,692 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:20:31,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31a86f6a)
2020-08-02 20:20:31,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75f56f59)
2020-08-02 20:20:31,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f24dcef)
2020-08-02 20:20:31,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e8ea8d5)
2020-08-02 20:20:31,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2caf4f51)
2020-08-02 20:20:31,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@727e723a)
2020-08-02 20:20:31,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b640b3e)
2020-08-02 20:20:31,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@87c687)
2020-08-02 20:20:31,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5684d401)
2020-08-02 20:20:31,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:20:31,705 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:20:31,705 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:20:31,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2377390d)
2020-08-02 20:20:31,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f1db07b)
2020-08-02 20:20:31,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7208d0d7)
2020-08-02 20:20:31,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52d867ad)
2020-08-02 20:20:31,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48fd93aa)
2020-08-02 20:20:31,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ab16ca6)
2020-08-02 20:20:31,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e0b994f)
2020-08-02 20:20:31,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fff662c)
2020-08-02 20:20:31,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:20:31,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b3bd2ba)
2020-08-02 20:21:14,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:21:14,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:21:14,769 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:21:35,368 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 20:21:35,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:21:35,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6140d7aa)
2020-08-02 20:21:35,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:21:35,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2fcafe65)
2020-08-02 20:21:35,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:21:35,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@609fffa4)
2020-08-02 20:21:35,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:21:35,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@13541c62)
2020-08-02 20:21:35,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 20:21:35,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@74ce6425)
2020-08-02 20:21:35,379 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:21:35,380 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 20:21:35,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 20:21:35,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@20f680f5)
2020-08-02 20:25:22,602 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:25:22,702 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:25:22,702 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 20:25:27,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:25:27,339 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 20:25:27,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-02 20:25:27,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3389027)
2020-08-02 20:25:27,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55083aed)
2020-08-02 20:25:27,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2efb64f2)
2020-08-02 20:25:27,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@230bdabb)
2020-08-02 20:25:27,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6475df55)
2020-08-02 20:25:27,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300.0, unit=Grms, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@703e5e64)
2020-08-02 20:25:27,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5176865)
2020-08-02 20:25:27,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7834b47e)
2020-08-02 20:25:27,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-02 20:25:27,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3271535a)
2020-08-02 20:25:30,768 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-02 20:25:30,821 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-02 20:25:30,825 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-02 21:50:00,385 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 9295 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-02 21:50:00,432 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-02 21:50:00,432 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-02 21:50:05,334 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-02 21:50:05,377 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-02 21:50:05,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-02 21:50:05,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-02 21:50:05,461 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-02 21:50:05,462 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-02 21:50:05,463 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-02 21:50:05,464 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-02 21:50:05,465 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-02 21:50:05,466 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-02 21:50:05,467 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-02 21:50:05,468 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-02 21:50:05,468 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-02 21:50:05,469 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-02 21:50:05,469 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-02 21:50:05,470 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-02 21:50:05,471 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-02 21:50:05,814 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-02 21:50:05,816 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-02 21:50:05,920 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 541ms. Found 15 MongoDB repository interfaces.
2020-08-02 21:50:14,293 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 21:50:14,295 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 21:50:14,822 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 21:50:14,824 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-02 21:50:15,025 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-02 21:50:15,066 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-02 21:50:15,069 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-02 21:50:15,070 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-02 21:50:15,072 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-02 21:50:15,076 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-02 21:50:15,077 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-02 21:50:15,094 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-02 21:50:15,099 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-02 21:50:15,099 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-02 21:50:15,102 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-02 21:50:15,104 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-02 21:50:15,105 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-02 21:50:15,109 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-02 21:50:15,110 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-02 21:50:15,119 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-02 21:50:15,120 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-02 21:50:15,122 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-02 21:50:15,127 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-02 21:50:15,128 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-02 21:50:15,136 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-02 21:50:16,556 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-02 21:50:16,857 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-02 21:50:16,894 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-02 21:50:16,960 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-02 21:50:16,982 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-02 21:50:17,005 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-02 21:50:17,022 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-02 21:50:17,042 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-02 21:50:17,362 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-02 21:50:17,420 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-02 21:50:17,468 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-02 21:50:17,486 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-02 21:50:17,503 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-02 21:50:17,534 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-02 21:50:17,575 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-02 21:50:17,598 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-02 21:50:17,659 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-02 21:50:17,691 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-02 21:50:17,723 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-02 21:50:17,736 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-02 21:50:17,782 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-02 21:50:17,821 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-02 21:50:17,846 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-02 21:50:17,877 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-02 21:50:17,921 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-02 21:50:17,936 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-02 21:50:17,981 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-02 21:50:18,003 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-02 21:50:18,253 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-02 21:50:18,258 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 21:50:18,259 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-02 21:50:18,261 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-02 21:50:18,755 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-02 21:50:18,769 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-02 21:50:21,932 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-02 21:50:21,973 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-02 21:50:21,982 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-02 21:50:22,663 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 25.991 seconds (JVM running for 31.795)
2020-08-02 21:51:51,998 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: {} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-02 21:51:52,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 21:51:52,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=53, orderList=[Document{{userId=2, itemId=1, availabilityId=1, quantity=4, amount=720.0}}, Document{{userId=2, itemId=2, availabilityId=14, quantity=4, amount=1376.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Fri May 08 00:24:46 IST 2020, deliveredBy=Sat May 09 00:24:46 IST 2020, totalAmount=2191.0, deliveryCharge=105.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@593594b7)
2020-08-02 21:51:52,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 21:51:52,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=54, orderList=[Document{{userId=2, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat May 09 01:53:26 IST 2020, deliveredBy=Sun May 10 01:53:26 IST 2020, totalAmount=342.0, deliveryCharge=32.0, coupenCode=SUN10D, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@521557ab)
2020-08-02 21:51:52,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 21:51:52,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=55, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:55:34 IST 2020, deliveredBy=Fri May 15 23:55:34 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@59861a68)
2020-08-02 21:51:52,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 21:51:52,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=56, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=2, status=Document{{confirmed=true, delivered=false}}, orderAt=Thu May 14 23:59:05 IST 2020, deliveredBy=Fri May 15 23:59:05 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1e36c4f2)
2020-08-02 21:51:52,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-02 21:51:52,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=57, orderList=[Document{{userId=9, itemId=1, availabilityId=3, quantity=2, amount=320.0}}], addressId=3, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri May 15 00:08:36 IST 2020, deliveredBy=Sat May 16 00:08:37 IST 2020, totalAmount=352.0, deliveryCharge=32.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6b536baf)
2020-08-02 21:51:52,668 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-02 21:51:52,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-02 21:51:52,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}})
2020-08-02 21:51:52,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=2, name=sharath, phoneNumber=3432, firstLine=kyc, secondLine=tmk, landMark=mtt, pinCode=572104, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@283ae799)
