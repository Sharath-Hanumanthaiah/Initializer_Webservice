2020-08-23 00:02:29,448 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 00:02:29,450 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 00:02:29,450 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 00:02:29,694 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 00:02:29,694 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 00:02:29,700 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 00:02:29,700 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 00:02:29,701 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 00:02:29,701 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 00:02:29,701 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 00:02:29,701 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 00:02:29,701 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 00:02:29,702 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 00:02:29,702 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 00:02:29,702 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 00:02:29,702 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 00:02:29,702 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 00:02:29,703 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 00:02:29,703 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 00:02:29,703 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 00:02:29,734 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 00:02:29,735 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 00:02:29,736 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 41ms. Found 15 MongoDB repository interfaces.
2020-08-23 00:02:29,880 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:02:29,881 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:02:29,938 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:02:29,938 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:02:29,941 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 00:02:29,942 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 00:02:29,943 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 00:02:29,943 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 00:02:29,944 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 00:02:29,945 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 00:02:29,946 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 00:02:29,946 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 00:02:29,947 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 00:02:29,948 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 00:02:29,949 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 00:02:29,949 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 00:02:29,950 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 00:02:29,951 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 00:02:29,952 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 00:02:29,953 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 00:02:29,954 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 00:02:29,955 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 00:02:29,955 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 00:02:29,956 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 00:02:29,957 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 00:02:30,010 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 00:02:30,018 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 00:02:30,024 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 00:02:30,032 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 00:02:30,038 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 00:02:30,044 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 00:02:30,046 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 00:02:30,051 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 00:02:30,068 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 00:02:30,074 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 00:02:30,079 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 00:02:30,084 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 00:02:30,090 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 00:02:30,096 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 00:02:30,101 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 00:02:30,107 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 00:02:30,116 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 00:02:30,122 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 00:02:30,127 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 00:02:30,130 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 00:02:30,137 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 00:02:30,142 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 00:02:30,147 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 00:02:30,152 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 00:02:30,160 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 00:02:30,166 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 00:02:30,174 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 00:02:30,178 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 00:02:30,210 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 00:02:30,211 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 00:02:30,211 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 00:02:30,211 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 00:02:30,234 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 00:02:30,240 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 00:02:30,391 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 00:02:30,398 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 00:02:30,400 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 00:02:30,431 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.017 seconds (JVM running for 10801.916)
2020-08-23 00:02:49,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:02:49,476 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.UserOrderSetList for index information.
2020-08-23 00:02:52,468 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:02:52,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:02:52,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:02:52,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@29d9de0a)
2020-08-23 00:02:52,486 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:02:52,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:02:52,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:02:52,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@cf1f047)
2020-08-23 00:02:52,495 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:02:52,496 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:02:52,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:02:52,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@51445c13)
2020-08-23 00:02:52,503 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:02:52,504 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:02:52,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:02:52,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5da9d3a4)
2020-08-23 00:02:52,512 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:02:52,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:02:52,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:02:52,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3a676f95)
2020-08-23 00:02:52,517 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:02:52,518 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:02:52,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:02:52,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3917d356)
2020-08-23 00:06:39,529 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 00:06:39,529 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 00:06:39,529 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 00:06:39,817 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 00:06:39,817 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 00:06:39,825 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 00:06:39,826 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 00:06:39,826 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 00:06:39,826 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 00:06:39,826 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 00:06:39,827 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 00:06:39,827 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 00:06:39,827 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 00:06:39,827 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 00:06:39,827 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 00:06:39,828 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 00:06:39,828 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 00:06:39,828 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 00:06:39,828 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 00:06:39,828 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 00:06:39,866 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 00:06:39,867 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 00:06:39,868 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 50ms. Found 15 MongoDB repository interfaces.
2020-08-23 00:06:40,064 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:06:40,064 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:06:40,111 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:06:40,111 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 00:06:40,113 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 00:06:40,114 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 00:06:40,115 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 00:06:40,115 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 00:06:40,115 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 00:06:40,115 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 00:06:40,116 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 00:06:40,116 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 00:06:40,116 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 00:06:40,117 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 00:06:40,117 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 00:06:40,117 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 00:06:40,118 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 00:06:40,118 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 00:06:40,118 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 00:06:40,118 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 00:06:40,119 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 00:06:40,119 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 00:06:40,119 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 00:06:40,119 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 00:06:40,120 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 00:06:40,167 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 00:06:40,176 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 00:06:40,186 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 00:06:40,192 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 00:06:40,197 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 00:06:40,201 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 00:06:40,204 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 00:06:40,210 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 00:06:40,232 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 00:06:40,239 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 00:06:40,246 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 00:06:40,251 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 00:06:40,255 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 00:06:40,259 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 00:06:40,263 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 00:06:40,267 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 00:06:40,275 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 00:06:40,278 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 00:06:40,285 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 00:06:40,289 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 00:06:40,296 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 00:06:40,301 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 00:06:40,305 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 00:06:40,309 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 00:06:40,317 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 00:06:40,321 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 00:06:40,326 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 00:06:40,329 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 00:06:40,368 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 00:06:40,369 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 00:06:40,369 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 00:06:40,369 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 00:06:40,390 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 00:06:40,393 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 00:06:40,577 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 00:06:40,581 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 00:06:40,583 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 00:06:40,626 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.128 seconds (JVM running for 11052.111)
2020-08-23 00:06:51,999 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:06:52,016 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.UserOrderSetList for index information.
2020-08-23 00:06:53,716 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:06:53,717 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:06:53,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:06:53,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5796a2cf)
2020-08-23 00:06:53,727 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:06:53,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:06:53,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:06:53,732 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7261596)
2020-08-23 00:06:53,733 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:06:53,734 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:06:53,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:06:53,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4490366c)
2020-08-23 00:06:53,740 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:06:53,741 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:06:53,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:06:53,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@126660c3)
2020-08-23 00:06:53,746 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:06:53,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:06:53,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:06:53,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5cd8c765)
2020-08-23 00:06:53,749 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:06:53,749 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:06:53,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:06:53,751 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@37c3958)
2020-08-23 00:06:57,549 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:06:59,458 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 00:06:59,459 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:06:59,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:06:59,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1f756c45)
2020-08-23 00:06:59,463 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:06:59,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:06:59,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:06:59,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@11b291db)
2020-08-23 00:06:59,467 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:06:59,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:06:59,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:06:59,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@158d0735)
2020-08-23 00:06:59,470 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:06:59,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:06:59,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:06:59,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@508f9be0)
2020-08-23 00:06:59,475 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:06:59,476 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:06:59,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:06:59,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@642cd2f0)
2020-08-23 00:06:59,479 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:06:59,480 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:06:59,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:06:59,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6115abe7)
2020-08-23 00:07:03,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:07:35,992 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:07:36,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:07:42,003 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:07:42,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:07:42,011 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:07:42,012 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:07:42,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:07:42,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@46efdd9d)
2020-08-23 00:07:42,016 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:07:42,016 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:07:42,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:07:42,019 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@55fa7c0d)
2020-08-23 00:07:42,020 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:07:42,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:07:42,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:07:42,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@48283b30)
2020-08-23 00:07:42,024 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:07:42,024 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:07:42,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:07:42,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5b3d88c2)
2020-08-23 00:07:42,027 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:07:42,028 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:07:42,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:07:42,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4c17b6ed)
2020-08-23 00:07:42,031 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:07:42,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:07:42,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5f02177d)
2020-08-23 00:07:42,034 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:07:42,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:07:42,035 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:07:42,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:07:42,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@915310b)
2020-08-23 00:07:42,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:07:42,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:07:42,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:07:42,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:07:42,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a0082f9)
2020-08-23 00:07:42,045 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:07:42,046 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:07:42,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@31ae0681)
2020-08-23 00:07:42,048 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:07:42,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:07:42,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1c9c9fa0)
2020-08-23 00:07:42,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:07:42,049 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:07:42,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:07:42,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:07:42,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@38565a3f)
2020-08-23 00:07:42,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:07:42,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bd07f69)
2020-08-23 00:07:55,516 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:07:57,082 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 00:07:57,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:07:57,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:07:57,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@24f81f45)
2020-08-23 00:07:57,086 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:07:57,087 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:07:57,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:07:57,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1b6a73a9)
2020-08-23 00:07:57,090 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:07:57,092 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:07:57,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:07:57,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3a111605)
2020-08-23 00:07:57,095 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:07:57,096 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:07:57,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:07:57,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f1c1e19)
2020-08-23 00:07:57,099 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:07:57,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:07:57,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:07:57,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4b7a2e88)
2020-08-23 00:07:57,102 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:07:57,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:07:57,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:07:57,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c5eb75)
2020-08-23 00:08:06,065 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:08:08,511 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 00:08:08,511 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:08:08,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:08:08,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3bb5ce79)
2020-08-23 00:08:08,514 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:08:08,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:08:08,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:08:08,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@49f4750d)
2020-08-23 00:08:08,521 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:08:08,522 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:08:08,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:08:08,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2f4e0d7c)
2020-08-23 00:08:08,530 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:08:08,531 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:08:08,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:08:08,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6486e42c)
2020-08-23 00:08:08,537 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:08:08,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:08:08,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:08:08,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@71d528c3)
2020-08-23 00:08:08,541 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:08:08,546 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:08:08,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:08:08,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b6377e9)
2020-08-23 00:08:16,693 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:13:30,389 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:13:31,639 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:13:36,517 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:13:36,518 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:13:36,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:13:36,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2a3580c4)
2020-08-23 00:13:36,521 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:13:36,522 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:13:36,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:13:36,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@488740c4)
2020-08-23 00:13:36,526 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:13:36,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:13:36,527 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:13:36,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:13:36,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:13:36,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:13:36,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@576cf8cd)
2020-08-23 00:13:36,534 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:13:36,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@67d8e2b7)
2020-08-23 00:13:36,535 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:13:36,535 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:13:36,535 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:13:36,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:13:36,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@52521f94)
2020-08-23 00:13:36,537 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:13:36,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:13:36,539 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:13:36,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@617e866c)
2020-08-23 00:13:36,541 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:13:36,542 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:13:36,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:13:36,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@62c83f83)
2020-08-23 00:13:36,543 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:13:36,544 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:13:36,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:13:36,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2c10e830)
2020-08-23 00:13:36,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:13:36,547 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:13:36,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f16936d)
2020-08-23 00:13:36,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:13:36,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:13:36,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7164229d)
2020-08-23 00:13:36,553 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:13:36,554 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:13:36,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:13:36,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@44d11ae7)
2020-08-23 00:13:36,559 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:13:36,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:13:36,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:13:36,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f0b8c97)
2020-08-23 00:20:01,414 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:20:01,648 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:20:01,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:20:01,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:20:01,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2ca865f3)
2020-08-23 00:20:01,655 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:20:01,656 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:20:01,656 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:20:01,660 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:20:01,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:20:01,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@27297188)
2020-08-23 00:20:01,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:20:01,662 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:20:01,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@18ddcc22)
2020-08-23 00:20:01,662 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:20:01,662 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:01,663 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:01,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:20:01,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@60296f2b)
2020-08-23 00:20:01,665 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:01,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:01,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:01,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@55d143ab)
2020-08-23 00:20:01,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:01,671 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:20:01,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5bd146b5)
2020-08-23 00:20:01,672 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:01,672 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:20:01,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:01,674 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:20:01,675 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6be40c32)
2020-08-23 00:20:01,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:20:01,677 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:01,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@44a4e998)
2020-08-23 00:20:01,677 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:01,677 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:01,678 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:01,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:01,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:01,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@286d75b5)
2020-08-23 00:20:01,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3477c6fe)
2020-08-23 00:20:01,688 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:20:01,688 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:20:01,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:01,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:01,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:20:01,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@39617a4)
2020-08-23 00:20:01,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:20:01,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ed945de)
2020-08-23 00:20:14,477 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:20:17,486 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 00:20:17,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:20:17,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:20:17,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@66f776ec)
2020-08-23 00:20:17,492 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:20:17,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:20:17,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:20:17,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3794de46)
2020-08-23 00:20:17,496 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:17,497 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:17,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:17,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@274f4295)
2020-08-23 00:20:17,499 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:20:17,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:17,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:20:17,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@62afbce6)
2020-08-23 00:20:17,501 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:17,502 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:17,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:17,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3fb2e649)
2020-08-23 00:20:17,504 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:20:17,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:17,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:20:17,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ec56917)
2020-08-23 00:20:22,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:20:23,332 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 00:20:23,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:20:23,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:20:23,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@439cb090)
2020-08-23 00:20:23,335 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:20:23,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:20:23,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:20:23,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@170b9c8)
2020-08-23 00:20:23,337 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:23,338 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:23,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:23,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@22e7ba42)
2020-08-23 00:20:23,341 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:20:23,342 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:23,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:20:23,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2961c888)
2020-08-23 00:20:23,346 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:23,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:23,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:23,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@f5fe504)
2020-08-23 00:20:23,349 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:20:23,349 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:23,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:20:23,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@be5a3de)
2020-08-23 00:20:27,612 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:20:42,384 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 00:20:42,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:20:42,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:20:42,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@31d67436)
2020-08-23 00:20:42,389 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:20:42,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:20:42,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:20:42,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7ef558c3)
2020-08-23 00:20:42,392 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:42,393 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:42,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:42,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@646137fb)
2020-08-23 00:20:42,396 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:20:42,397 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:42,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:20:42,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@48d3f641)
2020-08-23 00:20:42,398 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:20:42,399 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:20:42,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:20:42,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4aa65ca9)
2020-08-23 00:20:42,400 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:20:42,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:20:42,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:20:42,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e41367e)
2020-08-23 00:22:48,322 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 00:22:48,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:22:48,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:22:48,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@72abdd25)
2020-08-23 00:22:48,327 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:22:48,328 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:22:48,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:22:48,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7c5af1b5)
2020-08-23 00:22:48,330 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:22:48,331 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:22:48,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:22:48,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@37c09380)
2020-08-23 00:22:48,336 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 00:22:48,334 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:22:48,337 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:22:48,337 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:22:48,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:22:48,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:22:48,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b611e76)
2020-08-23 00:22:48,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5a75f83f)
2020-08-23 00:22:48,339 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:22:48,340 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:22:48,340 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:22:48,340 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:22:48,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:22:48,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:22:48,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@680eca09)
2020-08-23 00:22:48,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@113beadf)
2020-08-23 00:22:48,342 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:22:48,343 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:22:48,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:22:48,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:22:48,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:22:48,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@14120c27)
2020-08-23 00:22:48,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:22:48,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1b718e30)
2020-08-23 00:22:48,349 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:22:48,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:22:48,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:22:48,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f82df35)
2020-08-23 00:22:48,353 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:22:48,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:22:48,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:22:48,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6ac378fa)
2020-08-23 00:22:48,356 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:22:48,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:22:48,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:22:48,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@24e00a6f)
2020-08-23 00:23:40,917 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:23:46,497 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 00:23:46,497 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:23:46,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:23:46,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5cffc646)
2020-08-23 00:23:46,500 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:23:46,501 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:23:46,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:23:46,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@282eb3b4)
2020-08-23 00:23:46,505 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:23:46,506 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:23:46,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:23:46,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@28c1c4df)
2020-08-23 00:23:46,509 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:23:46,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:23:46,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:23:46,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@aaeea77)
2020-08-23 00:23:46,512 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:23:46,513 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:23:46,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:23:46,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@16e3cbb2)
2020-08-23 00:23:46,514 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:23:46,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:23:46,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:23:46,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b0d79c9)
2020-08-23 00:25:02,257 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 00:25:02,258 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:25:02,262 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 00:25:02,263 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:25:02,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:25:02,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@443c34d7)
2020-08-23 00:25:02,266 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 00:25:02,266 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:25:02,267 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 00:25:02,267 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:25:02,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 00:25:02,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:25:02,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@609230f6)
2020-08-23 00:25:02,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6ded822f)
2020-08-23 00:25:02,270 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:25:02,270 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 00:25:02,274 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 00:25:02,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6e681da6)
2020-08-23 00:25:02,276 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:25:02,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:25:02,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:25:02,279 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:25:02,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5c1fac3e)
2020-08-23 00:25:02,280 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:25:02,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:25:02,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:25:02,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@72b41f36)
2020-08-23 00:25:02,284 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:25:02,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:25:02,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:25:02,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4fc83376)
2020-08-23 00:25:02,288 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:25:02,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:25:02,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:25:02,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:25:02,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:25:02,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e8db51)
2020-08-23 00:25:02,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@45ad3abf)
2020-08-23 00:25:02,291 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 00:25:02,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:25:02,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 00:25:02,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@27ff524c)
2020-08-23 00:25:02,295 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 00:25:02,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 00:25:02,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 00:25:02,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@37c2980d)
2020-08-23 00:25:02,301 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 00:25:02,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:25:02,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 00:25:02,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@46a61b83)
2020-08-23 00:27:27,850 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 00:27:48,879 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 00:27:48,887 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-23 00:27:49,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 00:27:49,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 00:27:49,047 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-4] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-23 00:27:50,471 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 00:27:50,480 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 00:27:50,482 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 00:27:50,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 00:27:50,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76e6b316)
2020-08-23 00:27:50,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 00:27:50,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b339bba)
2020-08-23 00:27:59,836 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 00:27:59,965 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 00:27:59,970 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 00:29:17,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:25:04,286 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 12:25:04,286 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 12:25:04,286 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 12:25:04,570 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 12:25:04,571 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 12:25:04,594 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 12:25:04,595 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 12:25:04,595 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 12:25:04,596 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 12:25:04,596 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 12:25:04,596 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 12:25:04,597 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 12:25:04,597 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 12:25:04,597 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 12:25:04,597 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 12:25:04,598 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 12:25:04,598 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 12:25:04,598 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 12:25:04,598 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 12:25:04,599 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 12:25:04,624 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 12:25:04,625 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 12:25:04,630 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 58ms. Found 15 MongoDB repository interfaces.
2020-08-23 12:25:04,830 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 12:25:04,830 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 12:25:04,882 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 12:25:04,883 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 12:25:04,885 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 12:25:04,886 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 12:25:04,887 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 12:25:04,887 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 12:25:04,888 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 12:25:04,888 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 12:25:04,889 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 12:25:04,889 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 12:25:04,891 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 12:25:04,891 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 12:25:04,892 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 12:25:04,892 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 12:25:04,893 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 12:25:04,894 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 12:25:04,894 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 12:25:04,895 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 12:25:04,895 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 12:25:04,896 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 12:25:04,897 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 12:25:04,898 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 12:25:04,898 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 12:25:04,977 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 12:25:04,984 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 12:25:04,991 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 12:25:04,998 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 12:25:05,004 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 12:25:05,011 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 12:25:05,015 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 12:25:05,024 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 12:25:05,053 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 12:25:05,059 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 12:25:05,067 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 12:25:05,073 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 12:25:05,079 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 12:25:05,085 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 12:25:05,090 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 12:25:05,097 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 12:25:05,106 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 12:25:05,112 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 12:25:05,119 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 12:25:05,124 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 12:25:05,131 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 12:25:05,137 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 12:25:05,143 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 12:25:05,149 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 12:25:05,161 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 12:25:05,167 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 12:25:05,175 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 12:25:05,180 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 12:25:05,242 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 12:25:05,243 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 12:25:05,243 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 12:25:05,243 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 12:25:05,292 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 12:25:05,299 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 12:25:05,557 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 12:25:05,564 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 12:25:05,566 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 12:25:05,601 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.346 seconds (JVM running for 12478.83)
2020-08-23 12:25:46,890 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:25:46,903 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.UserOrderSetList for index information.
2020-08-23 12:25:48,853 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:25:53,279 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:25:53,285 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:25:53,287 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:25:53,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:25:53,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:25:53,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:25:53,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3cfbd37f)
2020-08-23 12:25:53,313 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:25:53,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:25:53,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:25:53,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7f7ebb52)
2020-08-23 12:25:53,317 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:25:53,317 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:25:53,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@79f94a84)
2020-08-23 12:25:53,321 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:25:53,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:25:53,322 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:25:53,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3a7c3ad9)
2020-08-23 12:25:53,323 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:25:53,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:25:53,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:25:53,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:25:53,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@52115674)
2020-08-23 12:25:53,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@79b8fa74)
2020-08-23 12:25:53,329 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:25:53,329 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:25:53,331 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:25:53,331 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:25:53,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:25:53,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:25:53,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@b0c0381)
2020-08-23 12:25:53,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@484a3531)
2020-08-23 12:25:53,342 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:25:53,342 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:25:53,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:25:53,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:25:53,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:25:53,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:25:53,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1229d99)
2020-08-23 12:25:53,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2a48776c)
2020-08-23 12:25:53,345 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:25:53,346 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:25:53,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:25:53,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:25:53,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:25:53,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@19d6b5cb)
2020-08-23 12:25:53,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:25:53,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a53c596)
2020-08-23 12:26:36,978 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:26:36,979 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:26:36,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:26:36,981 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@449d1eab)
2020-08-23 12:26:36,982 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:26:36,982 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:26:36,984 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:26:36,986 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:26:36,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@24b2e1e4)
2020-08-23 12:26:36,989 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:26:36,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:26:36,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:26:36,982 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:26:36,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@45ad896b)
2020-08-23 12:26:36,993 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:26:36,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:26:36,994 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:26:36,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5434269d)
2020-08-23 12:26:36,997 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:26:36,997 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:26:37,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:26:37,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bdde54d)
2020-08-23 12:26:37,003 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:26:37,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:26:37,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:26:37,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@21e2f11)
2020-08-23 12:26:37,007 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:26:37,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:26:37,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5af3d26b)
2020-08-23 12:26:37,014 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:26:37,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:26:37,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:26:37,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:26:37,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:26:37,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5ecc4ded)
2020-08-23 12:26:37,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bf47cce)
2020-08-23 12:26:37,017 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:26:37,018 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:26:37,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:26:37,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1bced850)
2020-08-23 12:26:37,031 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:26:37,032 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:26:37,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:26:37,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6e3b057a)
2020-08-23 12:26:37,042 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:26:37,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:26:37,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:26:37,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a1fe25c)
2020-08-23 12:27:08,737 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:27:08,737 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:27:08,740 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:27:08,742 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:27:08,743 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:27:08,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:27:08,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7fdd3b44)
2020-08-23 12:27:08,756 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:27:08,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:27:08,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:27:08,757 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3cfecb6d)
2020-08-23 12:27:08,759 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:27:08,760 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:27:08,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:27:08,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@711adacf)
2020-08-23 12:27:08,762 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:27:08,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:27:08,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:27:08,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@32392282)
2020-08-23 12:27:08,765 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:27:08,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:27:08,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:27:08,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:27:08,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3606a01d)
2020-08-23 12:27:08,768 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:27:08,769 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:27:08,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@75255034)
2020-08-23 12:27:08,771 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:27:08,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:27:08,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:27:08,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@730428b9)
2020-08-23 12:27:08,773 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:27:08,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:27:08,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:27:08,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:27:08,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3027d0f4)
2020-08-23 12:27:08,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@39eb2017)
2020-08-23 12:27:08,776 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:27:08,776 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:27:08,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:27:08,777 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:27:08,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:27:08,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2636caaf)
2020-08-23 12:27:08,780 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:27:08,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:27:08,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@423d389a)
2020-08-23 12:27:08,780 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:27:08,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:27:08,790 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@15da004)
2020-08-23 12:51:13,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:51:13,575 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:51:13,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:51:13,578 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:51:13,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:51:13,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:51:13,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1a2672cb)
2020-08-23 12:51:13,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:51:13,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@16f60770)
2020-08-23 12:51:13,585 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:51:13,585 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:51:13,582 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:51:13,587 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:51:13,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:51:13,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5e1d7b6c)
2020-08-23 12:51:13,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:51:13,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@648a0898)
2020-08-23 12:51:13,592 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:51:13,592 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:51:13,598 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:51:13,599 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:51:13,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:51:13,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@db77622)
2020-08-23 12:51:13,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:51:13,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6a304a05)
2020-08-23 12:51:13,603 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:51:13,604 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:51:13,605 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:51:13,608 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:51:13,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:51:13,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6dedf544)
2020-08-23 12:51:13,618 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:51:13,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:51:13,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:51:13,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@67b1d517)
2020-08-23 12:51:13,621 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:51:13,622 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:51:13,626 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:51:13,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@f39cb86)
2020-08-23 12:51:13,627 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:51:13,628 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:51:13,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:51:13,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7107b7e1)
2020-08-23 12:51:13,643 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:51:13,644 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:51:13,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:51:13,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f751ab)
2020-08-23 12:51:13,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:51:13,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4737c985)
2020-08-23 12:52:27,811 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:52:27,867 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:27,868 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:52:27,871 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:52:27,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@40fbe4a7)
2020-08-23 12:52:27,874 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:27,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:52:27,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:52:27,878 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5446930a)
2020-08-23 12:52:27,879 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:27,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:27,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:27,887 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@630172d8)
2020-08-23 12:52:27,889 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:52:27,890 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:27,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:52:27,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@62abc8da)
2020-08-23 12:52:27,896 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:27,896 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:27,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:27,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1af79b15)
2020-08-23 12:52:27,905 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:52:27,905 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:27,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:52:27,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6951c56f)
2020-08-23 12:52:27,912 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:27,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:52:27,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:52:27,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@70cd1f0)
2020-08-23 12:52:27,917 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:27,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:52:27,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:52:27,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@9cb2f61)
2020-08-23 12:52:27,934 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:27,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:27,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:27,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@df4ba80)
2020-08-23 12:52:27,943 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:52:27,944 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:27,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:52:27,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@48f6255a)
2020-08-23 12:52:27,951 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:27,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:27,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:27,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2914eee5)
2020-08-23 12:52:27,960 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:52:27,961 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:27,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:52:27,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@79746c81)
2020-08-23 12:52:46,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:52:46,276 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:46,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:52:46,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:52:46,282 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:46,283 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:52:46,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:52:46,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@495eeb2b)
2020-08-23 12:52:46,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@52fadde)
2020-08-23 12:52:46,291 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:46,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:52:46,292 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:46,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:52:46,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:52:46,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@39c16b9e)
2020-08-23 12:52:46,296 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:46,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:52:46,297 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:46,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5c6f0139)
2020-08-23 12:52:46,298 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:46,298 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:46,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:46,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5d59c00f)
2020-08-23 12:52:46,300 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:52:46,301 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:46,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:46,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7269c9b5)
2020-08-23 12:52:46,302 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:52:46,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:52:46,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:46,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@410ee976)
2020-08-23 12:52:46,304 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:46,305 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:52:46,310 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:46,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:46,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ddaf5de)
2020-08-23 12:52:46,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7f3755cf)
2020-08-23 12:52:46,313 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:52:46,313 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:52:46,313 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:52:46,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:46,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:52:46,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3563e0e6)
2020-08-23 12:52:46,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:52:46,316 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:52:46,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d185c2c)
2020-08-23 12:52:46,317 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:46,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:52:46,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@11a159ba)
2020-08-23 12:52:49,372 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:52:50,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:52:50,148 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-5] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-23 12:52:50,260 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:52:50,263 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:52:50,265 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-6] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-23 12:52:51,273 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:52:51,278 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:52:51,279 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:52:51,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:52:51,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72b251ba)
2020-08-23 12:52:51,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:52:51,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bab7cb0)
2020-08-23 12:52:56,638 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:52:56,654 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:53:02,215 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:53:02,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:53:02,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:53:02,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3f04d6a4)
2020-08-23 12:53:02,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@3f04d6a4, Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:53:02,241 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-08-23 12:53:02,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@3f04d6a4, Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:53:02,299 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:53:02,300 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:02,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:02,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d2afd75)
2020-08-23 12:53:02,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:02,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79cdd5e2)
2020-08-23 12:53:02,304 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-08-23 12:53:02,305 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 12:53:02,306 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-08-23 12:53:02,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@24655763)
2020-08-23 12:53:02,309 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:53:02,310 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 12:53:02,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Sunflower}})
2020-08-23 12:53:02,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Sunflower}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2251437b)
2020-08-23 12:53:02,426 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:02,429 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:53:02,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:02,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:02,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71207357)
2020-08-23 12:53:02,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:02,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b5065d2)
2020-08-23 12:53:04,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:04,523 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:04,526 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:53:04,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:04,530 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:53:04,531 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:04,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:04,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:04,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45e55356)
2020-08-23 12:53:04,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:04,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c8384db)
2020-08-23 12:53:04,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a3ca3a2)
2020-08-23 12:53:04,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:04,538 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@106fe07d)
2020-08-23 12:53:07,613 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:07,740 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:53:07,742 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:53:09,796 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:09,800 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:53:09,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:15,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:15,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:53:15,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:53:17,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:17,120 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:53:17,120 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:18,821 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:18,894 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:53:18,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:53:20,015 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 12:53:20,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 12:53:20,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2c32480a)
2020-08-23 12:53:20,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 12:53:20,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@29b6a975)
2020-08-23 12:53:20,889 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:53:20,890 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 12:53:20,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:53:20,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@61488f90)
2020-08-23 12:53:23,342 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 12:53:23,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 12:53:23,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@297191cc)
2020-08-23 12:53:23,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 12:53:23,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3b3c7441)
2020-08-23 12:53:24,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 12:53:24,307 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-10] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-08-23 12:53:26,026 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:53:26,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 12:53:26,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:53:26,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@13f6863)
2020-08-23 12:53:28,901 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 12:53:28,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:53:30,941 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:53:32,877 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:53:32,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:53:32,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:53:32,881 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5e0c9402)
2020-08-23 12:53:32,882 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:53:32,883 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:53:32,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:53:32,885 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6be69af9)
2020-08-23 12:53:32,885 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:53:32,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:53:32,888 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:53:32,888 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@51f0bf03)
2020-08-23 12:53:32,889 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:53:32,890 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:32,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:53:32,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f6c2cd0)
2020-08-23 12:53:32,892 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:53:32,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:53:32,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:53:32,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@754425af)
2020-08-23 12:53:32,896 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:53:32,896 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:32,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=2.0, unit=KG}})
2020-08-23 12:53:32,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=2.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a2a58ac)
2020-08-23 12:53:39,717 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:53:40,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 12:53:40,989 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 12:53:40,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@47a79a8f)
2020-08-23 12:53:40,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 12:53:40,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1c78c246)
2020-08-23 12:53:43,075 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:43,160 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:53:44,415 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:44,419 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:53:44,419 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:52,664 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:52,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:53:52,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:53:54,170 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:54,172 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:53:54,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:54,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:54,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d8a4b45)
2020-08-23 12:53:54,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:54,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ccc5e68)
2020-08-23 12:53:57,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:53:57,577 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:53:57,578 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:57,579 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:53:57,580 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:53:57,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:53:57,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b347c43)
2020-08-23 12:54:06,368 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:54:06,369 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:06,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:06,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22b4abdb)
2020-08-23 12:54:06,375 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:54:06,378 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:54:06,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:06,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:06,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e11fdd5)
2020-08-23 12:54:06,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:06,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ce80d2e)
2020-08-23 12:54:26,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:54:26,885 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:54:26,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:26,888 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:26,890 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65bc98cc)
2020-08-23 12:54:26,892 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:54:26,890 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:26,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45f859a1)
2020-08-23 12:54:26,895 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:54:26,895 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:26,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:26,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31ea3388)
2020-08-23 12:54:26,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:26,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21b6bb14)
2020-08-23 12:54:27,629 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:54:30,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:54:30,772 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:54:30,772 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:54:30,773 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:30,773 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:30,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:30,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b82f4e6)
2020-08-23 12:54:42,229 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:54:42,230 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:42,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:42,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57c2a420)
2020-08-23 12:54:42,237 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:54:42,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:42,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:42,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e21eea6)
2020-08-23 12:54:42,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:54:44,582 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:54:44,583 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:44,585 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:54:44,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:44,588 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:54:44,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e5543f9)
2020-08-23 12:54:44,588 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:44,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:44,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@269a067)
2020-08-23 12:54:44,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:44,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cd27d80)
2020-08-23 12:54:47,175 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:54:47,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:47,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:47,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b9c5588)
2020-08-23 12:54:50,254 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:54:50,257 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:54:50,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:50,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:50,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18916c79)
2020-08-23 12:54:50,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:50,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47c8cf5d)
2020-08-23 12:54:52,497 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:54:52,500 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:54:52,501 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:52,504 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:54:52,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:52,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:52,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6142f4b6)
2020-08-23 12:54:57,370 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:54:57,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:57,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:57,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12e06fdb)
2020-08-23 12:54:57,373 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:54:57,374 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:54:57,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:54:57,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c0b5e87)
2020-08-23 12:55:00,067 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:00,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:00,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:00,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@595c3a12)
2020-08-23 12:55:00,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:00,078 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:00,079 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:00,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:00,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@244f62ca)
2020-08-23 12:55:00,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:00,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@685d4e97)
2020-08-23 12:55:03,032 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:03,033 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:03,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:03,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@455dc55e)
2020-08-23 12:55:06,328 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:06,331 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:06,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:06,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:06,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d5ad2ec)
2020-08-23 12:55:06,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:06,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47d8b637)
2020-08-23 12:55:09,220 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:09,224 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:55:09,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:09,230 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:55:09,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:09,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:09,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c05c435)
2020-08-23 12:55:13,114 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:13,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:13,117 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:13,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65e1a1d3)
2020-08-23 12:55:13,122 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:13,126 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:13,127 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:13,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:13,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f99f32c)
2020-08-23 12:55:13,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:13,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16a08b4)
2020-08-23 12:55:15,445 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:15,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:15,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:15,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@309e988d)
2020-08-23 12:55:16,789 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:16,792 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:16,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:16,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:16,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@330c289b)
2020-08-23 12:55:16,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:16,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d7dae7b)
2020-08-23 12:55:19,315 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:19,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:55:19,490 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:55:20,942 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:20,944 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:20,945 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:20,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:20,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53b3dc14)
2020-08-23 12:55:20,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:20,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62cfb29a)
2020-08-23 12:55:23,079 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:23,080 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:23,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:23,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@def913b)
2020-08-23 12:55:24,818 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:24,821 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:24,822 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:24,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:24,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6225ed7f)
2020-08-23 12:55:24,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:24,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19970f37)
2020-08-23 12:55:27,321 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:27,323 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:55:27,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:27,330 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:55:27,331 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:27,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:27,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40c907ab)
2020-08-23 12:55:29,704 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:29,705 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:29,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:29,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d55452e)
2020-08-23 12:55:29,708 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:55:29,710 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:29,711 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:29,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:29,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@199f8edc)
2020-08-23 12:55:29,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:29,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5766eb09)
2020-08-23 12:55:58,094 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:58,095 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:55:58,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:55:58,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@37f89075)
2020-08-23 12:55:58,096 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:55:58,097 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:58,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2327df53)
2020-08-23 12:55:58,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@750804d8)
2020-08-23 12:55:58,100 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:58,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:58,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a719e2a)
2020-08-23 12:55:58,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36424ca1)
2020-08-23 12:55:58,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-23 12:55:58,165 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:58,166 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:55:58,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:55:58,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@783194d7)
2020-08-23 12:55:58,168 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:55:58,169 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:58,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e35326)
2020-08-23 12:55:58,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@155638c1)
2020-08-23 12:55:58,172 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:55:58,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 12:55:58,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:55:58,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@62043f25)
2020-08-23 12:55:58,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@62043f25, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:55:58,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-08-23 12:55:58,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@62043f25, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:55:58,181 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:55:58,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:55:58,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:55:58,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2f6fd79e)
2020-08-23 12:55:58,185 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:55:58,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:58,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c513841)
2020-08-23 12:55:58,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ebf2a7c)
2020-08-23 12:55:58,191 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:55:58,192 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 12:55:58,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:55:58,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@27965be4)
2020-08-23 12:55:58,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@27965be4, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=0, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:55:58,200 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-23 12:55:58,208 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@27965be4, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=0, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:55:58,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@737c534f, Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,211 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-08-23 12:55:58,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@737c534f, Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,417 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:55:58,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:58,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b2acbcc)
2020-08-23 12:55:58,525 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:55:58,526 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:55:58,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:55:58,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52b0d06a)
2020-08-23 12:56:01,956 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:56:01,957 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:01,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:01,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29bff2c8)
2020-08-23 12:56:01,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:56:01,972 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:56:01,974 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:01,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:01,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55f74650)
2020-08-23 12:56:01,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:01,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25a66f03)
2020-08-23 12:56:01,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:01,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a80098c)
2020-08-23 12:56:08,658 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:56:08,661 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:08,661 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:56:08,661 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:08,662 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:08,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:08,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10303af0)
2020-08-23 12:56:19,354 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:19,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:19,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51fcafa6)
2020-08-23 12:56:19,356 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:56:19,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:19,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40f39cf5)
2020-08-23 12:56:19,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46d3e96)
2020-08-23 12:56:19,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73e66700)
2020-08-23 12:56:19,361 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:56:19,361 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:56:19,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:56:19,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@47537745)
2020-08-23 12:56:19,364 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:56:19,364 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:19,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b9b5f6e)
2020-08-23 12:56:19,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76ef5b05)
2020-08-23 12:56:19,368 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:56:19,369 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 12:56:19,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:56:19,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3671ecbf)
2020-08-23 12:56:19,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3671ecbf, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:56:19,376 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-08-23 12:56:19,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3671ecbf, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:56:19,379 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:56:19,380 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:56:19,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:56:19,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2b650e62)
2020-08-23 12:56:19,383 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:56:19,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:19,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@275e5f78)
2020-08-23 12:56:19,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ef34b38)
2020-08-23 12:56:19,389 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:56:19,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 12:56:19,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=0, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:56:19,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=0, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@569ceb89)
2020-08-23 12:56:19,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@569ceb89, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:56:19,394 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-23 12:56:19,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@569ceb89, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:56:19,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@51fcafa6, Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,397 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class]
2020-08-23 12:56:19,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@51fcafa6, Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,484 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:19,485 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:19,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:19,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@650110ce)
2020-08-23 12:56:24,095 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:24,096 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:24,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:24,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@343506a7)
2020-08-23 12:56:24,108 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:24,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:24,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:24,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54aca151)
2020-08-23 12:56:34,039 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:34,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:34,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:34,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c565d57)
2020-08-23 12:56:34,042 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:56:34,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:34,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:34,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@301fcc96)
2020-08-23 12:56:34,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:34,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dc427d)
2020-08-23 12:56:34,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:34,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@513be12c)
2020-08-23 12:56:47,469 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:47,470 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:47,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5daba6af)
2020-08-23 12:56:47,471 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:56:47,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:56:47,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:56:47,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@10b59272)
2020-08-23 12:56:47,474 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:56:47,474 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:47,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f71b99c)
2020-08-23 12:56:47,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@598e2308)
2020-08-23 12:56:47,477 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:56:47,477 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 12:56:47,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:56:47,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@59907848)
2020-08-23 12:56:47,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@59907848, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:56:47,480 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-08-23 12:56:47,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@59907848, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:56:47,482 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:56:47,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:56:47,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 12:56:47,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@658a570a)
2020-08-23 12:56:47,486 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 12:56:47,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:47,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67b5bf7e)
2020-08-23 12:56:47,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f8b56e3)
2020-08-23 12:56:47,490 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:56:47,490 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 12:56:47,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:56:47,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@15033562)
2020-08-23 12:56:47,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@15033562, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:56:47,492 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-23 12:56:47,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@15033562, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:56:47,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@5daba6af, Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,495 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class]
2020-08-23 12:56:47,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@5daba6af, Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,576 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:56:47,577 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:47,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:47,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27e565b)
2020-08-23 12:56:50,455 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:56:50,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:50,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:50,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2181572b)
2020-08-23 12:56:50,461 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:56:50,463 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:56:50,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:56:50,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:50,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@120bd889)
2020-08-23 12:56:50,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:50,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5da3dafe)
2020-08-23 12:56:50,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:56:50,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fc443ed)
2020-08-23 12:56:55,239 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:56:55,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:56:55,563 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:56:57,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 12:56:58,562 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:56:58,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 12:56:58,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 12:56:58,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@58b3ed62)
2020-08-23 12:57:00,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 12:57:00,967 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:57:02,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 12:57:02,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 12:57:02,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3fe5007c)
2020-08-23 12:57:02,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 12:57:02,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1f960559)
2020-08-23 12:57:03,756 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:57:03,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 12:57:03,758 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 12:57:03,758 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1041d7df)
2020-08-23 12:57:06,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 12:57:06,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 12:57:06,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6e3bd4df)
2020-08-23 12:57:06,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 12:57:06,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@ee51732)
2020-08-23 12:57:09,550 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:57:10,688 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:57:10,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:57:10,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:57:10,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@26d4d0fb)
2020-08-23 12:57:10,692 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:57:10,693 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:57:10,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:57:10,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1d5fb9eb)
2020-08-23 12:57:10,695 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:57:10,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:57:10,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:57:10,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1d8cf1b3)
2020-08-23 12:57:10,697 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:57:10,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:57:10,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:57:10,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@8281f94)
2020-08-23 12:57:10,702 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:57:10,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:57:10,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:57:10,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@79978c4f)
2020-08-23 12:57:10,706 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:57:10,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:57:10,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 12:57:10,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1967e277)
2020-08-23 12:58:13,385 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:13,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:58:13,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:58:13,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1f697dda)
2020-08-23 12:58:13,389 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:13,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:58:13,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:58:13,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@8f0dbad)
2020-08-23 12:58:13,393 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:58:13,394 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:58:13,395 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:13,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:58:13,396 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 12:58:13,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 12:58:13,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3159828c)
2020-08-23 12:58:13,400 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:13,400 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 12:58:13,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 12:58:13,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2d02b2e)
2020-08-23 12:58:13,405 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:58:13,406 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:58:13,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1386ba0)
2020-08-23 12:58:13,409 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:58:13,410 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:13,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:58:13,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4dca8325)
2020-08-23 12:58:13,413 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 12:58:13,414 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:13,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:58:13,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@cf3372f)
2020-08-23 12:58:13,417 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:58:13,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:58:13,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:58:13,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5c94ac05)
2020-08-23 12:58:13,420 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:58:13,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 12:58:13,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@30fa35f2)
2020-08-23 12:58:13,421 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 12:58:13,423 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:13,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 12:58:13,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cc22088)
2020-08-23 12:58:13,422 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 12:58:13,428 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 12:58:13,429 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@73769da4)
2020-08-23 12:58:13,430 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 12:58:13,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:13,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 12:58:13,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@70fc51bf)
2020-08-23 12:58:13,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 12:58:17,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:17,664 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:58:17,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:58:22,593 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:22,596 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:58:22,597 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:26,539 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:26,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 12:58:26,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 12:58:27,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:27,566 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:27,566 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:27,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:27,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cb7755d)
2020-08-23 12:58:27,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:27,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74488263)
2020-08-23 12:58:27,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:27,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4adc9785)
2020-08-23 12:58:29,625 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:58:29,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:29,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:29,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69b6372e)
2020-08-23 12:58:32,420 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:32,422 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:32,423 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:32,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:32,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3642043d)
2020-08-23 12:58:32,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:32,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@389fcd62)
2020-08-23 12:58:32,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:32,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78fb1d9a)
2020-08-23 12:58:34,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:34,826 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:58:34,827 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:34,832 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:58:34,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:34,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:34,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c489435)
2020-08-23 12:58:37,307 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:58:37,308 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:37,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:37,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c428ace)
2020-08-23 12:58:37,320 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:37,324 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:37,325 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:37,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:37,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d4c50a9)
2020-08-23 12:58:37,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:37,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@399efeef)
2020-08-23 12:58:37,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:37,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c4efa2d)
2020-08-23 12:58:40,177 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:58:40,177 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:40,177 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:40,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:40,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@631c9981)
2020-08-23 12:58:40,181 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:58:40,181 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:43,972 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:58:43,973 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:43,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:43,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@455b3cd4)
2020-08-23 12:58:43,980 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:43,985 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:43,985 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:43,986 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:43,987 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20056126)
2020-08-23 12:58:43,987 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:43,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d9f3d29)
2020-08-23 12:58:43,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:43,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49f8a32c)
2020-08-23 12:58:49,898 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:49,901 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:58:49,901 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:58:49,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:49,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:49,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:49,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f9b112a)
2020-08-23 12:58:53,456 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:58:53,457 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:53,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:53,460 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:53,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53dbfa28)
2020-08-23 12:58:53,462 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:58:53,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:53,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:53,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29deb55e)
2020-08-23 12:58:53,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:53,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d13e874)
2020-08-23 12:58:53,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:53,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@139c066e)
2020-08-23 12:58:56,542 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:58:56,545 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:58:56,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:58:56,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:58:56,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c81d05d)
2020-08-23 12:58:56,550 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:58:56,551 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:00,236 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:59:00,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:00,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:00,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b00eec9)
2020-08-23 12:59:00,244 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:59:00,245 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:00,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:00,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a79e56e)
2020-08-23 12:59:05,742 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:59:05,742 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:05,745 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:05,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:05,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6efdc284)
2020-08-23 12:59:05,747 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:59:05,748 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:05,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:05,752 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@caf092b)
2020-08-23 12:59:05,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:05,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64146557)
2020-08-23 12:59:05,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:05,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3030479f)
2020-08-23 12:59:09,359 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:09,362 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:59:09,362 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:59:09,362 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:09,362 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:09,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:09,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29de8f08)
2020-08-23 12:59:11,862 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:59:11,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:11,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:11,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@466385e4)
2020-08-23 12:59:11,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:11,868 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:59:11,869 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:11,871 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:11,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76b1a187)
2020-08-23 12:59:11,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:11,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@268e7df4)
2020-08-23 12:59:11,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:11,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40e3f914)
2020-08-23 12:59:14,270 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:59:14,271 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:14,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:14,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13371c7c)
2020-08-23 12:59:16,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:16,804 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:59:16,804 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:16,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:16,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c80e240)
2020-08-23 12:59:16,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:16,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@495bfc26)
2020-08-23 12:59:16,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:16,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a970a77)
2020-08-23 12:59:19,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:19,054 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 12:59:19,054 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 12:59:19,055 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:19,055 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:19,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:19,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@710e1af8)
2020-08-23 12:59:22,439 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:59:22,440 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:22,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:22,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69a0175c)
2020-08-23 12:59:22,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:22,445 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:59:22,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:22,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:22,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23c41424)
2020-08-23 12:59:22,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:22,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@104c5a6d)
2020-08-23 12:59:22,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:22,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@419085ee)
2020-08-23 12:59:25,392 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:25,392 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:59:25,393 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:25,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:25,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fecb38c)
2020-08-23 12:59:25,398 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:59:25,399 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:45,792 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 12:59:45,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:45,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:45,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6103a509)
2020-08-23 12:59:45,811 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:45,813 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 12:59:45,814 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:45,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:45,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3886f67c)
2020-08-23 12:59:45,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:45,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7156dfb6)
2020-08-23 12:59:45,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:45,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46f8c0ff)
2020-08-23 12:59:50,672 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 12:59:50,673 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 12:59:50,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:50,675 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 12:59:50,676 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 12:59:50,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 12:59:50,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@606b2b43)
2020-08-23 13:01:40,529 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:01:40,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:40,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:40,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69f41d5b)
2020-08-23 13:01:40,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:01:40,550 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:01:40,551 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:40,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:40,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f689997)
2020-08-23 13:01:40,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:40,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47ffa57e)
2020-08-23 13:01:40,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:40,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e9521eb)
2020-08-23 13:01:44,380 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:01:44,383 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:01:44,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:44,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:44,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4206a558)
2020-08-23 13:01:44,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:44,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e41ebcc)
2020-08-23 13:01:44,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:44,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3660dacc)
2020-08-23 13:01:44,404 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:01:44,406 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:01:44,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:44,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:44,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36b9f92f)
2020-08-23 13:01:44,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:44,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38bdfda8)
2020-08-23 13:01:44,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:44,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48d61d88)
2020-08-23 13:01:47,098 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:01:47,098 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:01:47,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:47,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:47,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32d1581f)
2020-08-23 13:01:47,101 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:01:47,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:49,453 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:01:49,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:49,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:49,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7be257ec)
2020-08-23 13:01:49,456 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:01:49,460 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:01:49,462 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:49,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:49,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@173aba28)
2020-08-23 13:01:49,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:49,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25f8d510)
2020-08-23 13:01:49,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:49,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f6a8a8d)
2020-08-23 13:01:52,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:01:52,562 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:01:52,562 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:01:52,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:52,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:52,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:52,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ac089b0)
2020-08-23 13:01:54,717 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:01:54,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:54,719 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:01:54,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:54,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@154c6667)
2020-08-23 13:01:54,721 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:01:54,722 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:01:54,723 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:54,723 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33902be3)
2020-08-23 13:01:54,723 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:54,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76201501)
2020-08-23 13:01:54,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:01:54,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75b7d35b)
2020-08-23 13:02:01,591 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:02:01,593 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:02:01,594 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:01,594 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:02:01,595 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:01,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:01,597 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@297dccc6)
2020-08-23 13:02:05,064 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:02:05,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:05,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:05,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3deb7d2f)
2020-08-23 13:02:05,072 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:02:05,079 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:02:05,080 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:05,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:05,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70d78978)
2020-08-23 13:02:05,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:05,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e499083)
2020-08-23 13:02:05,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:05,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9f439e0)
2020-08-23 13:02:21,954 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:02:21,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:21,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:21,957 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d4e2e7a)
2020-08-23 13:02:23,750 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:02:23,752 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:02:23,753 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:23,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:23,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79370ae9)
2020-08-23 13:02:23,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:23,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@144b2c69)
2020-08-23 13:02:23,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:23,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@258b5031)
2020-08-23 13:02:26,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:02:26,188 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:02:26,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:26,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:02:26,191 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:02:26,192 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:02:26,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65449a6e)
2020-08-23 13:03:43,595 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:03:43,596 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:43,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:43,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48350b18)
2020-08-23 13:03:43,606 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:03:43,608 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:03:43,609 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:43,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:43,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@739d7be2)
2020-08-23 13:03:43,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:43,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22a00390)
2020-08-23 13:03:43,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:43,613 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6dd39826)
2020-08-23 13:03:46,845 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:03:46,847 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:03:46,848 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:03:46,848 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:46,848 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:46,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:46,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51834f22)
2020-08-23 13:03:50,144 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:03:50,145 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:50,151 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:03:50,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:50,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f385516)
2020-08-23 13:03:50,153 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:03:50,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:50,155 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:50,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@145e08db)
2020-08-23 13:03:50,157 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:50,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74a0a662)
2020-08-23 13:03:50,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:50,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@494a6823)
2020-08-23 13:03:52,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:03:52,578 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:03:52,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:52,582 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:03:52,582 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:52,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:52,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62c013aa)
2020-08-23 13:03:54,679 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:03:54,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:54,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:54,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:03:54,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@463fb9d8)
2020-08-23 13:03:54,686 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:03:54,688 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:54,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:54,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@304d28b9)
2020-08-23 13:03:54,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:54,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8d09ea7)
2020-08-23 13:03:54,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:54,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e9e2a07)
2020-08-23 13:03:58,656 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:03:58,657 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:03:58,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:03:58,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d34aa9c)
2020-08-23 13:04:00,642 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:00,644 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:04:00,645 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:00,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:00,646 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53bac5da)
2020-08-23 13:04:00,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:00,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ccc3c20)
2020-08-23 13:04:00,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:00,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@88aea0c)
2020-08-23 13:04:02,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:02,515 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:04:02,516 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:02,517 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:04:02,518 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:02,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:02,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dd38023)
2020-08-23 13:04:05,110 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:04:05,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:05,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:05,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66304c81)
2020-08-23 13:04:05,119 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:05,122 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:04:05,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:05,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:05,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a7f99ce)
2020-08-23 13:04:05,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:05,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@582f371)
2020-08-23 13:04:05,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:05,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@589c52f9)
2020-08-23 13:04:07,181 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:04:07,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:07,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:07,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32191d1b)
2020-08-23 13:04:09,175 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:09,178 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:04:09,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:09,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:09,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f5f4801)
2020-08-23 13:04:09,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:09,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38341244)
2020-08-23 13:04:09,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:09,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a5063b2)
2020-08-23 13:04:14,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:14,109 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:04:14,110 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:04:14,110 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:14,110 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:14,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:14,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ad3f5f8)
2020-08-23 13:04:16,547 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:04:16,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:16,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:16,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@508abda3)
2020-08-23 13:04:16,553 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:16,557 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:04:16,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:16,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:16,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2930f44b)
2020-08-23 13:04:16,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:16,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17b83a73)
2020-08-23 13:04:16,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:16,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30a70478)
2020-08-23 13:04:20,729 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:20,731 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:04:20,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:20,732 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:04:20,733 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:20,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:20,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ffcc692)
2020-08-23 13:04:35,789 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:04:35,790 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:35,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:35,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f66fa65)
2020-08-23 13:04:35,795 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:35,798 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:04:35,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:35,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:35,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26397141)
2020-08-23 13:04:35,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:35,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65209631)
2020-08-23 13:04:35,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:04:35,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15dbddd9)
2020-08-23 13:04:46,851 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:46,972 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:04:46,979 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:04:48,085 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:48,090 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:04:48,091 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:49,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:50,009 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:04:50,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:04:51,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:51,486 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:04:51,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:04:54,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:04:54,369 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:04:54,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:05:31,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:05:31,910 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:05:31,937 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:05:32,270 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:06:36,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:06:36,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:36,929 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:06:36,933 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:06:39,877 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:39,879 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:06:39,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:44,406 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:44,479 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:06:44,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:06:45,597 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:45,600 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:06:45,601 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:45,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:45,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58aa9bdd)
2020-08-23 13:06:45,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:45,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5567856b)
2020-08-23 13:06:45,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:45,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cd2e66)
2020-08-23 13:06:48,759 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:06:48,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:48,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:48,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@576fdbb4)
2020-08-23 13:06:51,692 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:51,694 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:06:51,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:51,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:51,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3eff3fd2)
2020-08-23 13:06:51,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:51,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e0ff028)
2020-08-23 13:06:51,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:51,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@695e1fcf)
2020-08-23 13:06:54,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:54,041 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:06:54,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:54,044 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:06:54,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:54,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:54,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64a1d9a)
2020-08-23 13:06:56,432 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:06:56,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:56,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:56,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@336612c4)
2020-08-23 13:06:56,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:56,446 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:06:56,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:56,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:56,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69d349aa)
2020-08-23 13:06:56,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:56,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64d9d58e)
2020-08-23 13:06:56,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:56,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c372b0e)
2020-08-23 13:06:58,911 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:06:58,913 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:06:58,914 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:58,916 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:06:58,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:06:58,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:06:58,918 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f5d11)
2020-08-23 13:08:55,992 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:08:56,104 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:08:56,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:08:58,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:08:58,838 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:08:58,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:09:00,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:00,029 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:09:00,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:00,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:00,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b46d37f)
2020-08-23 13:09:00,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:00,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7149a3db)
2020-08-23 13:09:00,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:00,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44f32023)
2020-08-23 13:09:03,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:03,800 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:09:03,800 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:09:03,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:03,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:03,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:03,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31328dea)
2020-08-23 13:09:08,943 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:09:08,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:08,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:08,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@912c07d)
2020-08-23 13:09:08,945 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:08,947 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:09:08,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:08,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:08,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3110d090)
2020-08-23 13:09:08,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:08,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32a2c1c9)
2020-08-23 13:09:08,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:08,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77948946)
2020-08-23 13:09:11,336 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:11,339 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:09:11,340 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:11,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:11,341 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:09:11,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6355b498)
2020-08-23 13:09:11,342 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:13,342 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:09:13,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:13,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:13,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1080d0f9)
2020-08-23 13:09:13,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:13,357 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:09:13,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:13,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:13,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e65582b)
2020-08-23 13:09:13,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:13,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d4d3299)
2020-08-23 13:09:13,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:13,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61d02e76)
2020-08-23 13:09:15,548 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:09:15,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:15,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:15,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13f930f5)
2020-08-23 13:09:17,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:17,343 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:09:17,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:17,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:17,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6296facf)
2020-08-23 13:09:17,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:17,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67bfc5ad)
2020-08-23 13:09:17,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:17,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2049f9bb)
2020-08-23 13:09:19,181 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:19,184 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:09:19,184 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:09:19,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:19,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:19,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:19,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c72eb02)
2020-08-23 13:09:20,920 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:09:20,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:20,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:20,922 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:20,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ead6f1)
2020-08-23 13:09:20,924 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:09:20,925 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:20,926 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:20,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c77610e)
2020-08-23 13:09:20,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:20,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a7db70e)
2020-08-23 13:09:20,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:20,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cf20a34)
2020-08-23 13:09:22,785 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:09:22,785 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:09:22,786 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:22,787 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:09:22,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:09:22,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:09:22,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d0532ee)
2020-08-23 13:10:04,083 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:10:04,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:04,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:04,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d65561b)
2020-08-23 13:10:04,090 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:10:04,090 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:04,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:04,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bc2175c)
2020-08-23 13:10:04,183 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:10:04,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:04,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:04,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6094b539)
2020-08-23 13:10:04,191 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:10:04,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:04,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:04,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42780ae8)
2020-08-23 13:10:10,754 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:10,755 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:10,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:10,757 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@88b903b)
2020-08-23 13:10:10,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:10,761 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:10,761 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:10,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:10,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c245f68)
2020-08-23 13:10:10,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:10,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@667398b)
2020-08-23 13:10:10,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:10,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50873fba)
2020-08-23 13:10:14,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:14,231 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:10:14,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:14,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:14,234 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:10:14,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@331d606a)
2020-08-23 13:10:14,234 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:16,209 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:16,209 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:16,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:16,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49c83341)
2020-08-23 13:10:16,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:16,219 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:16,220 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:16,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:16,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49c1cb2d)
2020-08-23 13:10:16,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:16,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62db9435)
2020-08-23 13:10:16,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:16,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f8947f)
2020-08-23 13:10:18,424 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:18,425 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:18,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:18,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15da8462)
2020-08-23 13:10:20,391 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:20,394 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:20,394 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:20,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:20,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ee60e4e)
2020-08-23 13:10:20,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:20,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ea3f8f7)
2020-08-23 13:10:20,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:20,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b13088b)
2020-08-23 13:10:22,376 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:22,378 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:10:22,379 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:10:22,379 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:22,379 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:22,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:22,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@176dc0ea)
2020-08-23 13:10:25,707 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:25,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:25,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:25,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58f01554)
2020-08-23 13:10:25,710 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:25,712 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:25,713 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:25,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:25,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fbc9716)
2020-08-23 13:10:25,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:25,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@107c7358)
2020-08-23 13:10:25,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:25,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ac2eef9)
2020-08-23 13:10:28,974 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:28,977 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:10:28,977 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:10:28,977 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:28,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:28,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:28,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a6160b9)
2020-08-23 13:10:31,000 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:31,001 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:31,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:31,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3179e7fa)
2020-08-23 13:10:31,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:31,006 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:31,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:31,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:31,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@105797aa)
2020-08-23 13:10:31,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:31,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17baf34)
2020-08-23 13:10:31,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:31,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5215fe37)
2020-08-23 13:10:32,837 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:32,839 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:10:32,840 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:10:32,840 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:32,840 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:32,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:32,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@180c330c)
2020-08-23 13:10:34,944 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:34,945 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:34,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:34,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ee6fd07)
2020-08-23 13:10:34,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:34,950 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:34,950 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:34,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:34,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14fae4ce)
2020-08-23 13:10:34,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:34,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e39f057)
2020-08-23 13:10:34,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:34,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@375ad63a)
2020-08-23 13:10:37,505 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:37,506 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:37,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:37,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58b20874)
2020-08-23 13:10:39,605 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:39,607 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:39,607 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:39,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:39,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48153861)
2020-08-23 13:10:39,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:39,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ba09a28)
2020-08-23 13:10:39,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:39,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d3b5bb2)
2020-08-23 13:10:41,635 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:41,644 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:10:41,645 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:41,648 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:10:41,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:41,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:41,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@691b5d67)
2020-08-23 13:10:43,611 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:43,612 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:43,613 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:43,614 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32e4221d)
2020-08-23 13:10:43,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:43,621 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:43,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:43,622 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:43,623 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ad7933c)
2020-08-23 13:10:43,624 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:43,624 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59afacdb)
2020-08-23 13:10:43,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:43,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ac4e1a9)
2020-08-23 13:10:45,564 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:45,566 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:10:45,567 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:10:45,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:45,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:45,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:45,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66e6da3d)
2020-08-23 13:10:47,088 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:47,089 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:47,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:47,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@618d5941)
2020-08-23 13:10:47,094 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:47,096 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:47,097 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:47,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:47,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5822326f)
2020-08-23 13:10:47,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:47,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ad9cb80)
2020-08-23 13:10:47,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:47,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45d31513)
2020-08-23 13:10:50,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:50,492 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:50,492 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:50,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:50,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:50,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42898d18)
2020-08-23 13:10:50,496 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:50,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:50,496 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:50,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@333ecd19)
2020-08-23 13:10:50,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:50,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d01b9ce)
2020-08-23 13:10:50,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:50,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6043dcca)
2020-08-23 13:10:50,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:50,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6704c27)
2020-08-23 13:10:50,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:50,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52f2353a)
2020-08-23 13:10:53,081 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:53,082 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:53,083 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:53,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2eafffde)
2020-08-23 13:10:54,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:54,529 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:54,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:54,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:54,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1076c174)
2020-08-23 13:10:54,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:54,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e3438da)
2020-08-23 13:10:54,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:54,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55715d95)
2020-08-23 13:10:56,552 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:56,555 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:10:56,555 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:10:56,556 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:56,556 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:56,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:56,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ec1426a)
2020-08-23 13:10:58,999 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:10:59,000 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:59,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:59,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1773f256)
2020-08-23 13:10:59,003 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:10:59,008 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:10:59,020 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:10:59,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:59,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29c69293)
2020-08-23 13:10:59,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:59,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@635b9671)
2020-08-23 13:10:59,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:10:59,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43378cd)
2020-08-23 13:11:01,671 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:01,673 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:11:01,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:01,675 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:11:01,676 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:01,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:01,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ed4f84d)
2020-08-23 13:11:04,160 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:11:04,161 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:04,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:04,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@124e1aa)
2020-08-23 13:11:04,169 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:04,172 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:11:04,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:04,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:04,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58ae8b14)
2020-08-23 13:11:04,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:04,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28004641)
2020-08-23 13:11:04,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:04,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70a15188)
2020-08-23 13:11:06,855 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:06,857 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:11:06,858 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:11:06,858 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:06,858 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:06,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:06,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2cdeb1cf)
2020-08-23 13:11:37,187 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:11:37,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:37,190 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:11:37,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:37,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:37,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@481964fd)
2020-08-23 13:11:37,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:37,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c4a6c28)
2020-08-23 13:11:37,240 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:11:37,241 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:37,242 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:11:37,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:37,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:37,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7226622)
2020-08-23 13:11:37,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:37,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64d7e763)
2020-08-23 13:11:46,260 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:11:46,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:46,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:46,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f711b33)
2020-08-23 13:11:46,265 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:46,268 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:11:46,268 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:46,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:46,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49bddf0b)
2020-08-23 13:11:46,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:46,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a3bb239)
2020-08-23 13:11:46,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:46,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@550aa72e)
2020-08-23 13:11:47,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:47,946 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:11:47,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:47,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:47,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d04d278)
2020-08-23 13:11:47,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:47,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d50de02)
2020-08-23 13:11:47,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:47,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c4aeb43)
2020-08-23 13:11:47,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:47,957 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:11:47,958 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:47,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:47,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f53f5fc)
2020-08-23 13:11:47,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:47,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a83f0e4)
2020-08-23 13:11:47,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:47,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d386210)
2020-08-23 13:11:52,231 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:11:52,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:52,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:52,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4bc9b39d)
2020-08-23 13:11:53,822 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:53,824 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:11:53,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:53,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:53,827 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fefa374)
2020-08-23 13:11:53,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:53,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5406f80b)
2020-08-23 13:11:53,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:53,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63204952)
2020-08-23 13:11:56,262 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:56,264 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:11:56,265 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:11:56,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:56,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:56,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:56,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@652fd0d3)
2020-08-23 13:11:58,263 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:11:58,263 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:58,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:58,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:11:58,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a503a17)
2020-08-23 13:11:58,268 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:11:58,269 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:11:58,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:58,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a33fb5c)
2020-08-23 13:11:58,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:58,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5202e1f3)
2020-08-23 13:11:58,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:11:58,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d77d8e6)
2020-08-23 13:12:00,879 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:00,881 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:12:00,882 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:00,883 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:12:00,883 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:00,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:00,885 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29e946d4)
2020-08-23 13:12:03,275 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:12:03,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:03,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:03,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a32560f)
2020-08-23 13:12:03,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:03,284 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:12:03,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:03,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:03,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@767bef63)
2020-08-23 13:12:03,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:03,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d8eb32b)
2020-08-23 13:12:03,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:03,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a83810c)
2020-08-23 13:12:05,298 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:12:05,298 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:05,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:05,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cb1a911)
2020-08-23 13:12:06,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:06,896 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:12:06,897 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:06,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:06,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b51019e)
2020-08-23 13:12:06,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:06,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5424e527)
2020-08-23 13:12:06,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:06,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23723783)
2020-08-23 13:12:08,952 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:08,955 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:12:08,956 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:08,956 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:12:08,957 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:08,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:08,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1854b16)
2020-08-23 13:12:11,135 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:12:11,136 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:11,137 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:11,137 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ed74809)
2020-08-23 13:12:11,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:11,144 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:12:11,145 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:11,146 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:11,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3329e6cd)
2020-08-23 13:12:11,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:11,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@401e2ff3)
2020-08-23 13:12:11,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:11,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6166d979)
2020-08-23 13:12:13,525 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:13,527 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:12:13,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:13,529 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:12:13,529 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:13,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:13,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e8b9165)
2020-08-23 13:12:15,302 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:12:15,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:15,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:15,304 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:15,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61dec023)
2020-08-23 13:12:15,306 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:12:15,307 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:15,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:15,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e95a80f)
2020-08-23 13:12:15,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:15,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c07f33b)
2020-08-23 13:12:15,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:12:15,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6387aceb)
2020-08-23 13:12:19,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:19,391 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:12:19,397 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:12:20,681 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:20,685 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:12:20,685 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:12:24,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:12:24,192 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:12:24,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:12:26,570 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 13:12:26,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 13:12:26,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7dab5f5a)
2020-08-23 13:12:26,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 13:12:26,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@62fbebc)
2020-08-23 13:12:27,614 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:12:27,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 13:12:27,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:12:27,618 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@71fe5432)
2020-08-23 13:12:30,172 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 13:12:30,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 13:12:30,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@391ba8ac)
2020-08-23 13:12:30,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 13:12:30,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2a5dba50)
2020-08-23 13:12:32,116 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 13:12:33,638 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:12:33,639 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 13:12:33,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 13:12:33,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@5bb64119)
2020-08-23 13:12:35,508 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 13:12:35,566 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:13:29,549 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:13:29,550 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:13:29,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:13:29,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d3ae724)
2020-08-23 13:13:29,555 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:13:29,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:13:29,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:13:29,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11b0583b)
2020-08-23 13:13:29,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 13:13:29,885 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:14:44,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 13:14:44,890 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:14:44,891 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:14:44,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:14:44,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d94337f)
2020-08-23 13:14:44,896 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:14:44,897 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:14:44,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:14:44,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a325b7b)
2020-08-23 13:15:08,033 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:15:08,033 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:15:08,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:08,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@583cc52e)
2020-08-23 13:15:08,045 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:15:08,045 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:15:08,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:08,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@317a28d2)
2020-08-23 13:15:08,051 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 13:15:08,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:15:09,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:15:10,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:15:10,650 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:15:10,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:15:10,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:10,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@729f09da)
2020-08-23 13:15:10,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:10,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2770c10f)
2020-08-23 13:15:10,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:10,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@715af22b)
2020-08-23 13:15:15,217 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:15:15,218 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:15:15,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7974f62c)
2020-08-23 13:15:15,223 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:15:15,224 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:15:15,233 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:15:15,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b0c9228)
2020-08-23 13:15:15,236 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:15:15,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:15:15,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@490cca66)
2020-08-23 13:15:15,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7257660c)
2020-08-23 13:15:15,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e777f69)
2020-08-23 13:15:15,248 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:15:15,252 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:15:15,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:15:15,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dcaa108)
2020-08-23 13:15:15,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,255 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dcb11d3)
2020-08-23 13:15:15,255 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:15:15,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d54f3ab)
2020-08-23 13:16:00,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:00,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:00,183 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:00,183 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:00,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:00,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:00,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a3674d)
2020-08-23 13:16:00,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a077f1c)
2020-08-23 13:16:00,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@795fdf7c)
2020-08-23 13:16:00,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e351092)
2020-08-23 13:16:00,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19a06e4)
2020-08-23 13:16:00,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f41ae7c)
2020-08-23 13:16:00,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:16:00,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:00,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bc351e2)
2020-08-23 13:16:00,237 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:16:00,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:00,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:00,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@789c1fec)
2020-08-23 13:16:12,542 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:12,631 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:16:12,636 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:16:14,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 13:16:14,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 13:16:14,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@548936f)
2020-08-23 13:16:14,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 13:16:14,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@39dffbbe)
2020-08-23 13:16:15,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-23 13:16:16,610 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 13:16:16,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 13:16:16,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@e4a20e0)
2020-08-23 13:16:16,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 13:16:16,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@46c002c0)
2020-08-23 13:16:17,322 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:17,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 13:16:17,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:16:17,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@46fefdaa)
2020-08-23 13:16:19,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-23 13:16:19,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-08-23 13:16:19,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@f1b0ac5)
2020-08-23 13:16:19,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-08-23 13:16:19,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@121f8d64)
2020-08-23 13:16:20,850 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:20,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:16:21,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:21,906 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:21,907 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:21,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:21,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a7381ee)
2020-08-23 13:16:21,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:21,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e792510)
2020-08-23 13:16:21,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:21,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9d83f43)
2020-08-23 13:16:50,177 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:50,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:50,183 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:50,184 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:50,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:50,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:50,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c7b8c98)
2020-08-23 13:16:50,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@389b7316)
2020-08-23 13:16:50,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b946dc2)
2020-08-23 13:16:50,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fdec17f)
2020-08-23 13:16:50,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b396ce5)
2020-08-23 13:16:50,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ada9910)
2020-08-23 13:16:50,254 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:16:50,255 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:50,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,257 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@265db37f)
2020-08-23 13:16:50,258 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:16:50,259 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:50,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:50,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@701e686e)
2020-08-23 13:16:55,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:55,579 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:55,580 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:16:55,580 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:55,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:55,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@316c731d)
2020-08-23 13:16:55,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:55,583 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:16:55,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38207cc8)
2020-08-23 13:16:55,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:55,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f9694db)
2020-08-23 13:16:55,583 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:16:55,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:55,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8d23617)
2020-08-23 13:16:55,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:55,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28ec2d2a)
2020-08-23 13:16:55,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:16:55,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67ec0da5)
2020-08-23 13:17:24,224 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:17:24,229 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:17:24,230 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:17:24,240 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:17:24,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2998ab24)
2020-08-23 13:17:24,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12dc422c)
2020-08-23 13:17:24,245 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:17:24,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,246 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:17:24,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d7c567f)
2020-08-23 13:17:24,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d098fef)
2020-08-23 13:17:24,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79892e76)
2020-08-23 13:17:24,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@326fa5cf)
2020-08-23 13:17:24,289 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:17:24,290 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:17:24,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fbb5d1)
2020-08-23 13:17:24,292 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:17:24,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:17:24,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:17:24,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45c4e585)
2020-08-23 13:18:35,332 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:18:35,335 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:18:35,336 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:18:35,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6276a7ab)
2020-08-23 13:18:35,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a28b073)
2020-08-23 13:18:35,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2836bcb7)
2020-08-23 13:18:35,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:18:35,347 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:18:35,348 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:18:35,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3098066e)
2020-08-23 13:18:35,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a322905)
2020-08-23 13:18:35,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36fd685a)
2020-08-23 13:18:35,889 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:18:35,890 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:18:35,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d4ace53)
2020-08-23 13:18:35,900 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:18:35,900 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:18:35,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:35,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44b248fb)
2020-08-23 13:18:43,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:18:43,063 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:18:43,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:18:43,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:43,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c99641a)
2020-08-23 13:18:43,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:43,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54dc7c22)
2020-08-23 13:18:43,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:43,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55eb6b5)
2020-08-23 13:18:43,073 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:18:43,076 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:18:43,077 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:18:43,078 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:43,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13f1205f)
2020-08-23 13:18:43,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:43,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@561dd9ed)
2020-08-23 13:18:43,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:18:43,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27c7a3be)
2020-08-23 13:19:11,527 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:19:11,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:19:11,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:11,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5327580e)
2020-08-23 13:19:11,530 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:19:11,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:19:11,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:11,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@738e7022)
2020-08-23 13:19:12,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:19:12,041 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:19:12,043 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:19:12,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:19:12,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:12,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5649fb85)
2020-08-23 13:19:12,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:12,047 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:19:12,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:19:12,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:12,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21fd9126)
2020-08-23 13:19:12,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:12,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@193fc54b)
2020-08-23 13:19:12,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:12,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63a9392e)
2020-08-23 13:19:12,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69afcdc7)
2020-08-23 13:19:12,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:19:12,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64ee7abb)
2020-08-23 13:22:51,969 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:22:51,970 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:22:51,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:51,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f6a3360)
2020-08-23 13:22:51,976 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:22:51,977 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:22:51,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:51,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dc9acf4)
2020-08-23 13:22:57,103 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:22:57,105 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:22:57,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:22:57,114 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:22:57,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:22:57,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:22:57,125 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:57,126 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60e7518c)
2020-08-23 13:22:57,126 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:57,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@522d80d4)
2020-08-23 13:22:57,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:57,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76b4fce2)
2020-08-23 13:22:57,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:57,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50beba9b)
2020-08-23 13:22:57,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:57,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5825ca36)
2020-08-23 13:22:57,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:22:57,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e39d05)
2020-08-23 13:23:33,230 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:23:33,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:23:33,232 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:23:33,233 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:23:33,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34189ae6)
2020-08-23 13:23:33,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@715fd99d)
2020-08-23 13:23:33,706 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:23:33,709 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:23:33,709 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:23:33,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14fcc0bc)
2020-08-23 13:23:33,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@661183fb)
2020-08-23 13:23:33,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34ef8dba)
2020-08-23 13:23:33,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:23:33,721 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:23:33,721 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:23:33,722 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,723 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@80f6b0e)
2020-08-23 13:23:33,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@758ba95f)
2020-08-23 13:23:33,725 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:23:33,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71811f71)
2020-08-23 13:24:01,839 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:24:01,842 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:24:01,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:24:01,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:01,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18e18a59)
2020-08-23 13:24:01,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:01,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@551e7528)
2020-08-23 13:24:01,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:01,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ee386b3)
2020-08-23 13:24:01,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:24:01,866 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:24:01,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:24:01,871 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:01,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d2fd073)
2020-08-23 13:24:01,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:01,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20af27b7)
2020-08-23 13:24:01,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:01,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ff37731)
2020-08-23 13:24:19,077 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:24:19,077 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:24:19,078 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,080 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:24:19,081 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:24:19,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20a81170)
2020-08-23 13:24:19,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,083 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14855f1a)
2020-08-23 13:24:19,599 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:24:19,601 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:24:19,601 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:24:19,602 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:24:19,603 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:24:19,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,604 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:24:19,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6efc0a73)
2020-08-23 13:24:19,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f43ad27)
2020-08-23 13:24:19,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a9d3e4b)
2020-08-23 13:24:19,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5de9a25e)
2020-08-23 13:24:19,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12134438)
2020-08-23 13:24:19,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:24:19,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2aecd08c)
2020-08-23 13:25:16,020 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:25:16,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:25:16,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:16,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58c519bd)
2020-08-23 13:25:16,100 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:25:16,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:25:16,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:16,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cf29901)
2020-08-23 13:25:21,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:25:21,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:25:21,579 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:25:21,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:25:21,582 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:25:21,582 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:25:21,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:21,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:21,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ac8811f)
2020-08-23 13:25:21,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:21,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a95411a)
2020-08-23 13:25:21,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:21,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@167990d1)
2020-08-23 13:25:21,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:21,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e43e55a)
2020-08-23 13:25:21,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f79d329)
2020-08-23 13:25:21,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:25:21,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c423b4e)
2020-08-23 13:26:00,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:26:00,046 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:26:00,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:26:00,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:26:00,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,049 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:26:00,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e6b5605)
2020-08-23 13:26:00,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:26:00,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c06b091)
2020-08-23 13:26:00,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e2c187f)
2020-08-23 13:26:00,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b8b4026)
2020-08-23 13:26:00,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1366ecd)
2020-08-23 13:26:00,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bd206ad)
2020-08-23 13:26:00,084 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:26:00,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:26:00,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4eb7c736)
2020-08-23 13:26:00,091 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:26:00,092 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:26:00,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:26:00,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1383e90a)
2020-08-23 13:27:09,932 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:27:09,935 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:27:09,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:27:09,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:27:09,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@83820f9)
2020-08-23 13:27:09,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:27:09,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:27:09,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45e536e2)
2020-08-23 13:27:09,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:27:09,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78b5f088)
2020-08-23 13:27:09,946 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:27:09,951 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:27:09,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:27:09,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d1260ca)
2020-08-23 13:27:09,955 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:27:09,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4daa8923)
2020-08-23 13:27:09,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:27:09,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f898b39)
2020-08-23 13:28:28,171 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:28:28,172 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:28:28,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:28,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e654e4d)
2020-08-23 13:28:28,179 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:28:28,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:28:28,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:28,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70c1615e)
2020-08-23 13:28:34,719 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:28:34,722 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:28:34,722 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:28:34,723 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:28:34,725 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:34,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@268f2ba6)
2020-08-23 13:28:34,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:34,727 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59c2e25)
2020-08-23 13:28:34,727 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:34,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fc5d79a)
2020-08-23 13:28:34,746 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:28:34,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:28:34,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:34,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bce9424)
2020-08-23 13:28:34,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:34,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55594c45)
2020-08-23 13:28:34,751 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:28:34,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@368a3cd2)
2020-08-23 13:33:48,982 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:33:48,987 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:33:48,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:33:48,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:33:49,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c7f6da6)
2020-08-23 13:33:48,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c20b4f5)
2020-08-23 13:33:49,565 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:33:49,572 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:33:49,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:33:49,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:33:49,575 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:33:49,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:33:49,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5de6f843)
2020-08-23 13:33:49,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a7d4be9)
2020-08-23 13:33:49,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@693dce9b)
2020-08-23 13:33:49,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1756b703)
2020-08-23 13:33:49,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5efe7648)
2020-08-23 13:33:49,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:33:49,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cc29fea)
2020-08-23 13:35:45,222 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:35:45,223 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:35:45,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:45,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fe87022)
2020-08-23 13:35:45,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:35:45,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:35:45,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:45,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4316fdcd)
2020-08-23 13:35:52,162 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:35:52,164 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:35:52,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:35:52,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:35:52,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:52,167 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:35:52,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73328cec)
2020-08-23 13:35:52,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:52,168 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:35:52,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b52a307)
2020-08-23 13:35:52,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:52,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@392ea10b)
2020-08-23 13:35:52,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:52,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7acca893)
2020-08-23 13:35:52,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:52,172 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@792c5989)
2020-08-23 13:35:52,172 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:35:52,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23287a)
2020-08-23 13:36:16,570 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:16,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:16,574 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:16,575 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:16,576 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:16,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4621e27e)
2020-08-23 13:36:16,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,578 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:16,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63e4f7b1)
2020-08-23 13:36:16,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10651dbb)
2020-08-23 13:36:16,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1de543b2)
2020-08-23 13:36:16,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a4136db)
2020-08-23 13:36:16,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2df92b22)
2020-08-23 13:36:16,701 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:36:16,701 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:16,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40bb024c)
2020-08-23 13:36:16,711 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:36:16,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:16,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:16,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@244eda3d)
2020-08-23 13:36:23,202 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:36:23,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:23,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:23,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70c40962)
2020-08-23 13:36:25,933 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:25,938 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:25,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:25,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:25,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41962802)
2020-08-23 13:36:25,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:25,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@97e066b)
2020-08-23 13:36:25,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:25,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11feb743)
2020-08-23 13:36:28,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:28,785 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:36:28,786 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:36:28,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:28,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:28,790 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:28,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d54c6bb)
2020-08-23 13:36:30,906 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:36:30,907 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:30,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:30,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62d4ac76)
2020-08-23 13:36:30,910 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:30,912 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:30,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:30,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:30,915 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@561c828c)
2020-08-23 13:36:30,915 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:30,915 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71fb656c)
2020-08-23 13:36:30,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:30,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5eca59af)
2020-08-23 13:36:36,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:36,568 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:36:36,577 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:36:37,671 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:37,677 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:37,678 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:37,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:37,680 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@150bb92e)
2020-08-23 13:36:37,680 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:37,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75e11b4b)
2020-08-23 13:36:37,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:37,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30a46888)
2020-08-23 13:36:39,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:39,865 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:36:39,865 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:39,865 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:36:39,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:39,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:39,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ac36bd8)
2020-08-23 13:36:41,218 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:36:41,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:41,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:41,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@443276db)
2020-08-23 13:36:41,222 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:41,224 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:41,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:41,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:41,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@213573db)
2020-08-23 13:36:41,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:41,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b924d6a)
2020-08-23 13:36:41,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:41,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4080cb83)
2020-08-23 13:36:43,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:43,564 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:36:43,564 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:43,564 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:36:43,565 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:43,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:43,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@291a8d58)
2020-08-23 13:36:45,062 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:36:45,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:45,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:45,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ceaa5e8)
2020-08-23 13:36:45,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:45,068 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:45,069 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:45,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:45,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10ccccaa)
2020-08-23 13:36:45,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:45,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18f809bd)
2020-08-23 13:36:45,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:45,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11ad9f66)
2020-08-23 13:36:47,871 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:36:47,872 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:47,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:47,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a75cef8)
2020-08-23 13:36:49,504 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:49,506 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:49,507 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:49,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:49,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15c30652)
2020-08-23 13:36:49,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:49,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78fcdfe0)
2020-08-23 13:36:49,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:49,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75a6b2b5)
2020-08-23 13:36:51,980 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:51,981 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:36:51,982 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:51,982 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:36:51,983 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:51,984 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:51,984 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a6594ba)
2020-08-23 13:36:53,765 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:36:53,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:53,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:53,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e1b10b6)
2020-08-23 13:36:53,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:53,774 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:53,775 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:53,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:53,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@764d09e4)
2020-08-23 13:36:53,782 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:53,782 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6831f21a)
2020-08-23 13:36:53,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:53,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13f965a9)
2020-08-23 13:36:55,805 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:55,808 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:36:55,808 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:36:55,809 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:55,809 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:55,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:55,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ba07215)
2020-08-23 13:36:58,506 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:36:58,507 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:58,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:58,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ab6716a)
2020-08-23 13:36:58,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:36:58,515 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:36:58,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:36:58,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:58,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39fce335)
2020-08-23 13:36:58,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:58,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@789ab587)
2020-08-23 13:36:58,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:36:58,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@587f443b)
2020-08-23 13:37:39,763 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:37:39,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:37:39,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@186b30c7)
2020-08-23 13:37:39,766 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:37:39,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:37:39,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:37:39,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:37:39,779 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:37:39,780 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:37:39,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69b8842a)
2020-08-23 13:37:39,783 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:37:39,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:37:39,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65e56b66)
2020-08-23 13:37:39,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fc23f95)
2020-08-23 13:37:39,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@139d27f8)
2020-08-23 13:37:39,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bb03d0d)
2020-08-23 13:37:39,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,789 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:37:39,789 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44cbe6b9)
2020-08-23 13:37:39,789 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34bf18f8)
2020-08-23 13:38:22,315 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:38:22,316 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:22,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@260817cc)
2020-08-23 13:38:22,325 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:38:22,326 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:22,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@628b34de)
2020-08-23 13:38:22,416 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:38:22,419 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:38:22,420 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:22,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19d17a46)
2020-08-23 13:38:22,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ee7dbd5)
2020-08-23 13:38:22,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4969d06b)
2020-08-23 13:38:22,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:38:22,432 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:38:22,434 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:22,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bbb0d36)
2020-08-23 13:38:22,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5619e4af)
2020-08-23 13:38:22,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:22,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5aa81797)
2020-08-23 13:38:47,362 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:38:47,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:38:47,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 13:38:47,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3c08d803)
2020-08-23 13:38:47,365 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 13:38:47,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:47,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65ecd3c9)
2020-08-23 13:38:47,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b8f5014)
2020-08-23 13:38:47,367 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:38:47,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:47,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@792c320d)
2020-08-23 13:38:47,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31e25eb)
2020-08-23 13:38:47,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fccda)
2020-08-23 13:38:47,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-23 13:38:47,371 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:38:47,372 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:38:47,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 13:38:47,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@9d5c75a)
2020-08-23 13:38:47,374 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 13:38:47,375 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:47,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b168af6)
2020-08-23 13:38:47,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5618052)
2020-08-23 13:38:47,379 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:38:47,380 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 13:38:47,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 13:38:47,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7557c40e)
2020-08-23 13:38:47,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7557c40e, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 13:38:47,382 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-08-23 13:38:47,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7557c40e, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 13:38:47,383 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:38:47,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:38:47,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 13:38:47,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7cbdb9e6)
2020-08-23 13:38:47,385 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 13:38:47,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:47,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b204f74)
2020-08-23 13:38:47,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c4a3f69)
2020-08-23 13:38:47,388 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:38:47,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 13:38:47,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:38:47,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@2f27b282)
2020-08-23 13:38:47,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@2f27b282, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:38:47,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-23 13:38:47,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@2f27b282, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:38:47,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@62db7178, Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,392 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-08-23 13:38:47,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@62db7178, Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,551 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:38:47,551 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:47,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f9760e6)
2020-08-23 13:38:47,667 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:38:47,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:47,669 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:47,669 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6444eed9)
2020-08-23 13:38:51,164 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:38:51,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:51,166 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:51,166 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c6d3f3c)
2020-08-23 13:38:51,167 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:38:51,169 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:38:51,169 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:51,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:51,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d26a7b9)
2020-08-23 13:38:51,172 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:51,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24680d79)
2020-08-23 13:38:51,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:51,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e90d2df)
2020-08-23 13:38:51,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:51,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@224d4591)
2020-08-23 13:38:55,280 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:38:55,282 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:38:55,282 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:55,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:55,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10a03d1b)
2020-08-23 13:38:59,677 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:38:59,677 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:59,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b325214)
2020-08-23 13:38:59,680 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:38:59,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:38:59,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 13:38:59,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4923107e)
2020-08-23 13:38:59,683 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 13:38:59,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:59,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39ea53fc)
2020-08-23 13:38:59,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e872622)
2020-08-23 13:38:59,687 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:38:59,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-23 13:38:59,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 13:38:59,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@77ec7114)
2020-08-23 13:38:59,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@77ec7114, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 13:38:59,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-08-23 13:38:59,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@77ec7114, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-23 13:38:59,692 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:38:59,694 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:38:59,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-23 13:38:59,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=2, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=test, sellerName=test, disclaimer=test}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589128/ehkzd3msvhzcfms3d4m7.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589424/fwoucyhldpsf2z8xfnzp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@261d2f77)
2020-08-23 13:38:59,696 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-23 13:38:59,698 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:59,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d83fdfb)
2020-08-23 13:38:59,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a32745f)
2020-08-23 13:38:59,701 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:38:59,702 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-23 13:38:59,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:38:59,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5ec2c8dc)
2020-08-23 13:38:59,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@5ec2c8dc, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:38:59,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-23 13:38:59,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@5ec2c8dc, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-23 13:38:59,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@5b325214, Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class]
2020-08-23 13:38:59,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@5b325214, Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,762 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:38:59,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:38:59,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:38:59,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f542afa)
2020-08-23 13:39:01,835 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:39:01,836 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:39:01,836 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:39:01,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:39:01,838 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:39:01,839 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:39:01,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b75e56)
2020-08-23 13:39:01,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:39:01,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bb2e454)
2020-08-23 13:39:01,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:39:01,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@137e06f1)
2020-08-23 13:39:01,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:39:01,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2cf416d8)
2020-08-23 13:39:01,843 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:39:01,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21cd94ed)
2020-08-23 13:41:18,645 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:41:18,648 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:41:18,650 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:41:18,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:41:18,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,653 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:41:18,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37311c91)
2020-08-23 13:41:18,654 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:41:18,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@395a25b)
2020-08-23 13:41:18,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4bf6589f)
2020-08-23 13:41:18,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3643146)
2020-08-23 13:41:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cbe333f)
2020-08-23 13:41:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@635ba4c8)
2020-08-23 13:41:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36da6b42)
2020-08-23 13:41:18,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:18,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1867c9c2)
2020-08-23 13:41:19,013 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:41:19,013 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:41:19,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:19,015 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:41:19,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43d57907)
2020-08-23 13:41:19,016 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:41:19,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:41:19,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c354a9b)
2020-08-23 13:42:25,478 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:42:25,482 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:42:25,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:42:25,484 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:42:25,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ca613bc)
2020-08-23 13:42:25,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f65b3ed)
2020-08-23 13:42:25,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c509464)
2020-08-23 13:42:25,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dc41e)
2020-08-23 13:42:25,486 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:42:25,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:42:25,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4139361a)
2020-08-23 13:42:25,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@742f26fa)
2020-08-23 13:42:25,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16ef6c32)
2020-08-23 13:42:25,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:25,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3116935b)
2020-08-23 13:42:26,794 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:42:26,795 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:42:26,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:26,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56f163b)
2020-08-23 13:42:26,798 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:42:26,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:42:26,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:26,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5aae250e)
2020-08-23 13:42:29,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:42:29,009 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:42:29,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:42:55,829 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:42:55,833 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:42:55,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:42:55,834 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:42:55,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2fe766c4)
2020-08-23 13:42:55,837 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:42:55,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79cd4958)
2020-08-23 13:42:55,837 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:42:55,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78fdf267)
2020-08-23 13:42:55,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@421627f0)
2020-08-23 13:42:55,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22e5c3f7)
2020-08-23 13:42:55,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@101d7e3c)
2020-08-23 13:42:55,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5281f12c)
2020-08-23 13:42:55,843 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:42:55,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3deb4185)
2020-08-23 13:42:58,518 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:42:58,520 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:42:58,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:20,978 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:43:20,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:20,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:20,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cb1e9a6)
2020-08-23 13:43:20,990 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:43:20,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:20,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:20,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3854c771)
2020-08-23 13:43:36,260 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:43:36,263 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:43:36,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:36,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@682b54fe)
2020-08-23 13:43:36,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49c1e23e)
2020-08-23 13:43:36,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:43:36,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c0005fe)
2020-08-23 13:43:36,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c1f903)
2020-08-23 13:43:36,272 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:43:36,273 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:36,274 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30fc3d9)
2020-08-23 13:43:36,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3293a10c)
2020-08-23 13:43:36,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e3f65bf)
2020-08-23 13:43:36,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:36,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ced3bfb)
2020-08-23 13:43:40,671 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:43:40,674 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:43:40,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:40,683 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3}} for Document{{}} fields.
2020-08-23 13:43:40,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:40,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:40,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e49e8e7)
2020-08-23 13:43:42,996 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:43:42,997 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:42,999 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:43:42,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:42,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72181f11)
2020-08-23 13:43:43,002 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:43:43,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:43,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:43,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41e3546a)
2020-08-23 13:43:43,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:43,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ad9c794)
2020-08-23 13:43:43,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:43,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f650bc9)
2020-08-23 13:43:43,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:43,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fcf35c)
2020-08-23 13:43:45,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:43:45,737 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:43:45,738 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:43:45,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:43:45,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5510f32e)
2020-08-23 13:46:55,743 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:46:55,744 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:46:55,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:46:55,747 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:46:55,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:46:55,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ffad154)
2020-08-23 13:46:55,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:46:55,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@318138b4)
2020-08-23 13:46:56,025 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:46:56,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:46:56,027 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:46:56,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54d70345)
2020-08-23 13:46:56,040 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:46:56,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:46:56,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:46:56,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5627d3db)
2020-08-23 13:46:59,377 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:46:59,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:46:59,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:46:59,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5054fe15)
2020-08-23 13:46:59,386 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=4}} for Document{{}} fields.
2020-08-23 13:46:59,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:46:59,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:46:59,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58e7a74d)
2020-08-23 13:47:02,567 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-23 13:47:02,568 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:47:02,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:47:02,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d9cf520)
2020-08-23 13:47:02,570 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:47:02,573 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:47:02,574 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:47:02,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:47:02,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42cf5210)
2020-08-23 13:47:02,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:47:02,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24eca63)
2020-08-23 13:47:02,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:47:02,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18c60a37)
2020-08-23 13:47:02,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:47:02,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a49adca)
2020-08-23 13:47:04,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:47:04,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 13:47:04,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 13:47:06,424 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:47:07,945 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:47:07,945 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:47:07,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:47:07,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@47a14c10)
2020-08-23 13:47:07,948 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:47:07,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:47:07,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:47:07,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2607e208)
2020-08-23 13:47:07,950 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:47:07,950 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:47:07,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:47:07,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@38ad7795)
2020-08-23 13:47:07,952 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:47:07,953 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:47:07,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:47:07,955 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2123d52a)
2020-08-23 13:47:07,956 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:47:07,956 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:47:07,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:47:07,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@15c45941)
2020-08-23 13:47:07,960 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:47:07,961 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:47:07,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:47:07,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5838820c)
2020-08-23 13:48:21,308 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:48:21,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:48:21,311 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:48:21,312 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:48:21,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:48:21,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1efb1403)
2020-08-23 13:48:21,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:48:21,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2fa82794)
2020-08-23 13:48:21,356 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:48:21,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:48:21,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:48:21,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3ef8cff8)
2020-08-23 13:48:21,361 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:48:21,362 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:48:21,362 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:48:21,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:48:21,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:48:21,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:48:21,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@138405eb)
2020-08-23 13:48:21,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7376886)
2020-08-23 13:48:21,365 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:48:21,365 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:48:21,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:48:21,368 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:48:21,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:48:21,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@16a04d5a)
2020-08-23 13:48:21,372 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:48:21,373 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:48:21,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:48:21,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5885ea0b)
2020-08-23 13:48:21,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:48:21,376 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:48:21,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4227fd9b)
2020-08-23 13:48:21,377 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:48:21,377 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:48:21,379 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:48:21,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:48:21,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:48:21,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@71bf1369)
2020-08-23 13:48:21,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@76d6b140)
2020-08-23 13:48:21,382 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:48:21,383 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:48:21,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:48:21,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:48:21,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:48:21,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:48:21,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@460862dd)
2020-08-23 13:48:21,386 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:48:21,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4a199444)
2020-08-23 13:48:21,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:48:21,388 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:48:21,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:48:21,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:48:21,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@16d6a45d)
2020-08-23 13:48:21,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:48:21,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ec7dac0)
2020-08-23 13:50:28,656 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 13:50:28,656 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 13:50:28,656 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 13:50:28,929 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 13:50:28,930 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 13:50:28,938 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 13:50:28,939 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 13:50:28,939 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 13:50:28,939 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 13:50:28,940 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 13:50:28,940 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 13:50:28,940 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 13:50:28,940 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 13:50:28,940 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 13:50:28,940 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 13:50:28,941 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 13:50:28,941 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 13:50:28,941 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 13:50:28,941 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 13:50:28,941 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 13:50:28,986 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 13:50:28,986 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 13:50:28,989 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 15 MongoDB repository interfaces.
2020-08-23 13:50:29,286 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 13:50:29,287 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 13:50:29,356 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 13:50:29,357 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 13:50:29,363 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 13:50:29,363 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 13:50:29,365 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 13:50:29,366 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 13:50:29,366 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 13:50:29,367 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 13:50:29,368 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 13:50:29,369 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 13:50:29,369 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 13:50:29,370 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 13:50:29,371 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 13:50:29,372 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 13:50:29,373 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 13:50:29,374 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 13:50:29,375 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 13:50:29,375 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 13:50:29,376 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 13:50:29,376 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 13:50:29,377 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 13:50:29,378 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 13:50:29,378 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 13:50:29,466 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 13:50:29,474 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 13:50:29,483 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 13:50:29,491 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 13:50:29,498 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 13:50:29,507 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 13:50:29,510 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 13:50:29,518 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 13:50:29,542 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 13:50:29,546 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 13:50:29,553 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 13:50:29,557 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 13:50:29,562 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 13:50:29,566 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 13:50:29,570 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 13:50:29,575 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 13:50:29,584 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 13:50:29,590 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 13:50:29,598 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 13:50:29,605 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 13:50:29,612 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 13:50:29,617 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 13:50:29,621 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 13:50:29,625 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 13:50:29,635 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 13:50:29,640 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 13:50:29,646 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 13:50:29,651 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 13:50:29,699 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 13:50:29,702 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 13:50:29,702 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 13:50:29,702 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 13:50:29,739 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 13:50:29,744 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 13:50:30,051 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 13:50:30,059 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 13:50:30,061 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 13:50:30,110 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.485 seconds (JVM running for 16913.01)
2020-08-23 13:50:36,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:50:36,161 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.UserOrderSetList for index information.
2020-08-23 13:50:37,722 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:37,723 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:50:37,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:50:37,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6e18cae8)
2020-08-23 13:50:37,735 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:37,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:50:37,736 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:50:37,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@64340931)
2020-08-23 13:50:37,741 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:50:37,742 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:50:37,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:50:37,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@16cdee60)
2020-08-23 13:50:37,746 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:50:37,748 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:37,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:50:37,752 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@71df38ba)
2020-08-23 13:50:37,753 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:50:37,753 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:50:37,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:50:37,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@505217f0)
2020-08-23 13:50:37,756 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:50:37,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:37,759 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:50:37,759 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@60166ce0)
2020-08-23 13:50:47,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:50:49,377 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:50:49,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:50:49,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:50:49,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@16dc0c02)
2020-08-23 13:50:49,381 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:49,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:50:49,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:50:49,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@181bf0a9)
2020-08-23 13:50:49,383 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:50:49,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:50:49,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:50:49,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1c246772)
2020-08-23 13:50:49,385 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:50:49,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:49,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:50:49,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5926fa92)
2020-08-23 13:50:49,387 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:50:49,387 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:50:49,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:50:49,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2f6c41a8)
2020-08-23 13:50:49,389 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:50:49,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:49,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:50:49,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@68b56254)
2020-08-23 13:50:52,795 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:52,796 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:50:52,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:50:52,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:50:52,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4d10b4b7)
2020-08-23 13:50:52,803 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:52,803 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:50:52,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:50:52,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@c2dbe8c)
2020-08-23 13:50:52,810 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-6] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-23 13:50:52,810 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:50:52,811 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:50:52,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:50:52,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3d6bf017)
2020-08-23 13:50:52,813 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:50:52,814 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:52,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:50:52,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c0241c3)
2020-08-23 13:50:52,817 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:50:52,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:50:52,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:50:52,819 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:52,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2beb457a)
2020-08-23 13:50:52,821 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:50:52,821 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:52,822 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:52,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:50:52,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:52,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@49e2e358)
2020-08-23 13:50:52,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b20b918)
2020-08-23 13:50:52,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:52,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7812fbb1)
2020-08-23 13:50:52,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:52,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1808b31a)
2020-08-23 13:50:52,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:52,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@249582e3)
2020-08-23 13:50:56,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:50:56,574 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:56,574 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:56,578 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:50:56,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42bc9a26)
2020-08-23 13:50:56,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4addc6dc)
2020-08-23 13:50:56,580 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:50:56,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:50:56,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@384ce141)
2020-08-23 13:50:56,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a344bba)
2020-08-23 13:50:56,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e6e2869)
2020-08-23 13:50:56,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@732045fa)
2020-08-23 13:50:56,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ff13832)
2020-08-23 13:50:56,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:50:56,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@205370c5)
2020-08-23 13:51:02,241 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:51:02,242 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:51:02,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:51:02,243 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:51:02,244 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:02,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:51:02,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@726181aa)
2020-08-23 13:51:02,246 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:02,247 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:51:02,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:51:02,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7ca66196)
2020-08-23 13:51:02,249 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:02,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:02,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:02,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7899eada)
2020-08-23 13:51:02,252 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:51:02,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:02,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:51:02,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d9b6bad)
2020-08-23 13:51:02,254 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:02,255 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:02,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:02,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4309d165)
2020-08-23 13:51:02,262 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:51:02,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:02,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:51:02,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5db494e2)
2020-08-23 13:51:07,046 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:07,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:51:07,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:51:07,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@e690854)
2020-08-23 13:51:07,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:51:07,050 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:07,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:51:07,052 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:07,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:51:07,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@40a2fba9)
2020-08-23 13:51:07,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:07,053 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:07,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:07,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a4d1e2b)
2020-08-23 13:51:07,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:07,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@124ecfab)
2020-08-23 13:51:07,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:07,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a4956c0)
2020-08-23 13:51:07,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:07,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:07,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c6c8186)
2020-08-23 13:51:07,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:07,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@62051a19)
2020-08-23 13:51:07,059 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:51:07,060 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:07,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:51:07,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@359df141)
2020-08-23 13:51:07,062 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:07,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:07,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:07,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7370640e)
2020-08-23 13:51:07,066 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:51:07,067 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:07,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:51:07,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@24d8a67a)
2020-08-23 13:51:11,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:51:11,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:51:11,685 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:11,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:11,686 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:11,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:11,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77d7cd8d)
2020-08-23 13:51:11,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f9c952f)
2020-08-23 13:51:11,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5130f61c)
2020-08-23 13:51:11,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47ece541)
2020-08-23 13:51:11,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8b9b4e3)
2020-08-23 13:51:11,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e20a72d)
2020-08-23 13:51:11,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:51:11,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16152db7)
2020-08-23 13:51:11,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9940e1)
2020-08-23 13:51:15,306 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:51:15,306 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:51:15,307 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:51:15,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:51:15,308 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:51:15,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5a030710)
2020-08-23 13:51:15,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:15,309 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:15,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:51:15,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:51:15,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3523a092)
2020-08-23 13:51:15,311 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:15,312 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:15,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:15,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@686e554f)
2020-08-23 13:51:15,319 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:51:15,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:15,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:51:15,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@60e4503b)
2020-08-23 13:51:15,322 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:15,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:15,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:15,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@221df0b0)
2020-08-23 13:51:15,331 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:51:15,332 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:15,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:51:15,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@a12e351)
2020-08-23 13:51:26,420 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:51:27,719 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:51:27,719 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:51:27,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:51:27,721 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@74a44446)
2020-08-23 13:51:27,722 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:51:27,723 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:51:27,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:51:27,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5232d248)
2020-08-23 13:51:27,725 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:27,726 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:27,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:27,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@69dc4593)
2020-08-23 13:51:27,729 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:51:27,730 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:27,731 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:51:27,731 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a213874)
2020-08-23 13:51:27,732 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:51:27,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:51:27,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:51:27,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6cf1cd02)
2020-08-23 13:51:27,733 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:51:27,734 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:51:27,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:51:27,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2815f246)
2020-08-23 13:53:14,933 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:53:16,245 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:53:16,246 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:53:16,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:53:16,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@44aa14c1)
2020-08-23 13:53:16,250 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:53:16,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:53:16,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:53:16,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@761d8e33)
2020-08-23 13:53:16,252 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:53:16,253 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:53:16,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:53:16,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3fa639e4)
2020-08-23 13:53:16,255 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:53:16,256 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:16,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:53:16,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bfc8c3c)
2020-08-23 13:53:16,260 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-08-23 13:53:16,260 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:53:16,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Floyd }})
2020-08-23 13:53:16,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Floyd }}, com.initializers.services.apiservices.model.item.ItemDetails@42d79ccc)
2020-08-23 13:53:16,262 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:53:16,263 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:16,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:53:16,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a05dc26)
2020-08-23 13:53:21,990 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:53:21,991 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:53:21,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:53:21,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Fri Aug 21 19:47:41 IST 2020, totalAmount=500, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@496b5eda)
2020-08-23 13:53:21,994 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:53:21,995 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:53:21,996 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:53:21,998 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:53:21,999 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:21,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:53:22,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1fbdc1fd)
2020-08-23 13:53:22,001 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:53:22,002 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:53:22,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:53:22,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5a667045)
2020-08-23 13:53:22,006 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:53:22,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:22,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:53:22,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1032bda0)
2020-08-23 13:53:22,010 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:53:22,011 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:53:22,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:53:22,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3bcacf2)
2020-08-23 13:53:22,014 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:53:22,015 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:22,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:53:22,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@72ff3751)
2020-08-23 13:53:26,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:53:26,296 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:53:26,297 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:26,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:53:26,304 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:53:26,305 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:31,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:53:31,772 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:53:31,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:31,777 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:53:31,777 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:53:31,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:53:31,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@23eeda0a)
2020-08-23 13:53:31,782 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:53:31,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:53:31,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:53:31,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@103fa49b)
2020-08-23 13:53:31,785 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:53:31,786 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:53:31,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:53:31,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7244e243)
2020-08-23 13:53:31,788 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:53:31,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:31,792 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:53:31,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7544b98f)
2020-08-23 13:53:31,793 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-08-23 13:53:31,794 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:53:31,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, name=Floyd }})
2020-08-23 13:53:31,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, name=Floyd }}, com.initializers.services.apiservices.model.item.ItemDetails@202f03a7)
2020-08-23 13:53:31,795 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:53:31,796 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:53:31,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:53:31,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4dd96045)
2020-08-23 13:54:01,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:54:01,033 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:54:01,034 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:01,137 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:54:01,139 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 13:54:01,140 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:11,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 13:54:11,042 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:54:11,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:11,045 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:54:11,046 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:54:11,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:54:11,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@15973e36)
2020-08-23 13:54:11,049 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:54:11,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:54:11,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:54:11,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5ec16cfe)
2020-08-23 13:54:11,055 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:54:11,055 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:54:11,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:54:11,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@200eaa16)
2020-08-23 13:54:11,058 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:54:11,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:11,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:54:11,063 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@145eb6dd)
2020-08-23 13:54:11,064 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-08-23 13:54:11,065 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:54:11,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Floyd }})
2020-08-23 13:54:11,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Floyd }}, com.initializers.services.apiservices.model.item.ItemDetails@38145cee)
2020-08-23 13:54:11,068 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:54:11,069 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:11,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:54:11,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6de7618e)
2020-08-23 13:54:41,152 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:54:41,153 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:54:41,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:54:41,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2f58249c)
2020-08-23 13:54:41,161 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:54:41,162 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:54:41,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:54:41,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1c0bc1fd)
2020-08-23 13:54:41,165 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:54:41,168 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 13:54:41,169 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:54:41,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:54:41,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=2, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Thu Aug 20 19:47:41 IST 2020, totalAmount=480, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1bf29513)
2020-08-23 13:54:41,173 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:54:41,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:54:41,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:54:41,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1ea8f470)
2020-08-23 13:54:41,176 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:54:41,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:54:41,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:54:41,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7895006b)
2020-08-23 13:54:41,180 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:54:41,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:41,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:54:41,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:54:41,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@17346898)
2020-08-23 13:54:41,184 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:54:41,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:41,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:54:41,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c0eacf2)
2020-08-23 13:54:41,193 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-08-23 13:54:41,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:54:41,198 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:54:41,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@55f247aa)
2020-08-23 13:54:41,199 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-08-23 13:54:41,200 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:54:41,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Floyd }})
2020-08-23 13:54:41,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Floyd }}, com.initializers.services.apiservices.model.item.ItemDetails@5ff9ceec)
2020-08-23 13:54:41,202 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:54:41,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:41,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:54:41,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ee1d14e)
2020-08-23 13:54:41,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Floyd }})
2020-08-23 13:54:41,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Floyd }}, com.initializers.services.apiservices.model.item.ItemDetails@25dccc77)
2020-08-23 13:54:41,215 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:54:41,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:41,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:54:41,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@759a06ff)
2020-08-23 13:54:41,574 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:54:41,574 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:41,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:54:41,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cb90ec3)
2020-08-23 13:54:41,589 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:54:41,590 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:54:41,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:54:41,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42c95b56)
2020-08-23 13:55:16,005 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:55:17,432 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:55:17,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:55:17,434 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:55:17,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@185ad547)
2020-08-23 13:55:17,436 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:55:17,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:55:17,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:55:17,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@48829f02)
2020-08-23 13:55:17,438 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:55:17,438 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:55:17,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:55:17,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@10e89f8e)
2020-08-23 13:55:17,442 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:55:17,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:55:17,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:55:17,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@16350e9e)
2020-08-23 13:55:17,444 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:55:17,444 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:55:17,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:55:17,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@580b11f2)
2020-08-23 13:55:17,446 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:55:17,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:55:17,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:55:17,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@42dff7e)
2020-08-23 13:55:27,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:56:02,896 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:56:02,896 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:56:02,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:56:02,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4dc7dfa5)
2020-08-23 13:56:02,899 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:56:02,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:56:02,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:56:02,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@44f963ca)
2020-08-23 13:56:02,901 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:56:02,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:56:02,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:56:02,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3ba12b91)
2020-08-23 13:56:02,905 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:56:02,906 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:56:02,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:56:02,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c15edd)
2020-08-23 13:56:02,909 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:56:02,910 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:56:02,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:56:02,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@9fa1831)
2020-08-23 13:56:02,912 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:56:02,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:56:02,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:56:02,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bb5473c)
2020-08-23 13:57:02,580 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:57:02,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:02,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:57:02,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a251ca2)
2020-08-23 13:57:02,586 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:57:02,587 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:02,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:57:02,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59412296)
2020-08-23 13:57:02,665 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:02,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:57:02,669 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:57:02,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@53858385)
2020-08-23 13:57:02,672 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:02,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:57:02,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:57:02,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@71d07565)
2020-08-23 13:57:02,680 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:02,681 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:57:02,680 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:02,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:57:02,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:57:02,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:57:02,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3cf20d20)
2020-08-23 13:57:02,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@273e4020)
2020-08-23 13:57:02,686 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:02,686 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:02,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:02,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:02,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:02,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:02,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3469e203)
2020-08-23 13:57:02,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@56fd8021)
2020-08-23 13:57:02,688 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:57:02,688 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:57:02,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:02,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:02,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:57:02,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:57:02,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c13be07)
2020-08-23 13:57:02,691 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:02,692 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:02,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4660c2b6)
2020-08-23 13:57:02,693 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:02,696 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:02,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:02,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@537599ab)
2020-08-23 13:57:02,699 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:57:02,700 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:02,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:02,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@217b2888)
2020-08-23 13:57:02,702 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:57:02,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:02,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:57:02,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:57:02,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@61feca5)
2020-08-23 13:57:02,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@dccba8a)
2020-08-23 13:57:25,194 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:57:25,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:25,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:57:25,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e92b1f7)
2020-08-23 13:57:25,207 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:57:25,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:25,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:57:25,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25574a44)
2020-08-23 13:57:25,339 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:25,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:57:25,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:57:25,343 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:25,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5a226c5e)
2020-08-23 13:57:25,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:57:25,344 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:25,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:57:25,345 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:57:25,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4047d15e)
2020-08-23 13:57:25,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:57:25,346 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:25,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7ec3b1b7)
2020-08-23 13:57:25,347 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:25,348 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:57:25,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:57:25,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@4fff483d)
2020-08-23 13:57:25,353 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:25,353 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:25,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:25,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:25,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1797b5e5)
2020-08-23 13:57:25,355 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:57:25,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:25,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@161dea63)
2020-08-23 13:57:25,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:25,357 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:57:25,357 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:57:25,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:25,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@74baf0a9)
2020-08-23 13:57:25,359 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:25,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:57:25,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:25,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@780d33b)
2020-08-23 13:57:25,361 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:25,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:25,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@484812da)
2020-08-23 13:57:25,362 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:25,362 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:57:25,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:25,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:25,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@79b32fb4)
2020-08-23 13:57:25,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:57:25,364 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:57:25,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@730a4ff1)
2020-08-23 13:57:25,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:25,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:57:25,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cb83e1f)
2020-08-23 13:57:40,791 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:57:40,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:40,792 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:57:40,793 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:40,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:57:40,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dadc75b)
2020-08-23 13:57:40,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:57:40,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50a17c70)
2020-08-23 13:57:40,902 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:40,902 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:40,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:57:40,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:57:40,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:57:40,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:57:40,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@76ce38ca)
2020-08-23 13:57:40,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3c5998cf)
2020-08-23 13:57:40,906 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:40,906 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:57:40,906 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:57:40,906 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:57:40,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:57:40,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:57:40,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@36fb31d7)
2020-08-23 13:57:40,910 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:40,911 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:40,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@d8beac5)
2020-08-23 13:57:40,912 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:40,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:40,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:40,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4e3c60e8)
2020-08-23 13:57:40,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:40,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@72cc821e)
2020-08-23 13:57:40,923 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:57:40,923 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:40,923 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:57:40,926 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:40,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:57:40,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@264c8b4f)
2020-08-23 13:57:40,929 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:40,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:40,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:57:40,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:40,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2143ff24)
2020-08-23 13:57:40,935 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:57:40,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@b4f3226)
2020-08-23 13:57:40,936 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:40,936 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:57:40,937 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:57:40,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:57:40,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ed91752)
2020-08-23 13:57:40,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:57:40,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7ba05c60)
2020-08-23 13:57:40,942 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:57:40,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:57:40,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:57:40,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@29af5c13)
2020-08-23 13:58:26,998 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:58:26,999 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:58:27,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:58:27,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ab7df5)
2020-08-23 13:58:27,004 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:58:27,005 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:58:27,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:58:27,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2408d10f)
2020-08-23 13:58:27,051 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:58:27,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:58:27,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:58:27,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@34179f98)
2020-08-23 13:58:27,055 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:58:27,056 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:58:27,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:58:27,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@597c4c7f)
2020-08-23 13:58:27,058 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:58:27,058 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:58:27,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:58:27,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:58:27,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:58:27,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:58:27,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5998e4e8)
2020-08-23 13:58:27,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@263de20)
2020-08-23 13:58:27,062 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:58:27,062 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:58:27,062 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:58:27,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:58:27,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:58:27,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:58:27,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@394765a7)
2020-08-23 13:58:27,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7a0478ca)
2020-08-23 13:58:27,067 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:58:27,068 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:58:27,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:58:27,069 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:58:27,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:58:27,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:58:27,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3b3f8b16)
2020-08-23 13:58:27,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@72526b92)
2020-08-23 13:58:27,070 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:58:27,071 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:58:27,071 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:58:27,071 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:58:27,072 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:58:27,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c07de5d)
2020-08-23 13:58:27,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:58:27,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5306c7ee)
2020-08-23 13:58:27,075 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:58:27,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:58:27,078 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:58:27,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4da7c6c2)
2020-08-23 13:58:27,079 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:58:27,082 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:58:27,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:58:27,083 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@143c3594)
2020-08-23 13:59:12,829 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:59:12,830 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:12,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:59:12,832 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 13:59:12,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c8b6c48)
2020-08-23 13:59:12,836 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:12,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 13:59:12,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13ddad67)
2020-08-23 13:59:12,907 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:59:12,908 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:59:12,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:59:12,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4cb2ecac)
2020-08-23 13:59:12,911 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:59:12,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:59:12,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:59:12,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6c793fd5)
2020-08-23 13:59:12,914 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:59:12,914 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:59:12,915 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:59:12,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:59:12,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@63cf0541)
2020-08-23 13:59:12,917 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:59:12,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:59:12,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:59:12,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@211bec84)
2020-08-23 13:59:12,920 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:59:12,923 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:59:12,922 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:59:12,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:59:12,926 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:59:12,926 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1f1f9d5c)
2020-08-23 13:59:12,927 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:59:12,927 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:12,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5e8bfef4)
2020-08-23 13:59:12,929 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:59:12,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:12,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:59:12,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@19fa7a6a)
2020-08-23 13:59:12,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:59:12,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d2f7d61)
2020-08-23 13:59:12,934 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:59:12,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:59:12,933 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:59:12,937 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:59:12,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:59:12,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:59:12,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2048119)
2020-08-23 13:59:12,940 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:59:12,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@36a32be4)
2020-08-23 13:59:12,942 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:59:12,941 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:12,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:12,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:59:12,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:59:12,948 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@13813d72)
2020-08-23 13:59:12,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c052211)
2020-08-23 13:59:26,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 13:59:28,017 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:59:28,018 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 13:59:28,019 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 13:59:28,019 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@16717f4)
2020-08-23 13:59:28,020 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 13:59:28,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 13:59:28,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 13:59:28,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2141919d)
2020-08-23 13:59:28,025 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:59:28,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:59:28,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:59:28,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@44548b2f)
2020-08-23 13:59:28,031 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 13:59:28,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:28,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 13:59:28,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c3a46cf)
2020-08-23 13:59:28,034 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 13:59:28,034 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 13:59:28,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 13:59:28,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5db2e0b)
2020-08-23 13:59:28,036 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 13:59:28,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 13:59:28,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 13:59:28,038 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@283b9a54)
2020-08-23 14:00:12,681 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:00:12,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:12,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:00:12,684 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:00:12,685 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:12,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@463c735b)
2020-08-23 14:00:12,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:00:12,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6300f2ec)
2020-08-23 14:00:12,764 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:12,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:00:12,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:00:12,774 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:12,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@32e1b6d8)
2020-08-23 14:00:12,775 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:00:12,775 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:12,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:00:12,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:00:12,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:00:12,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6726217a)
2020-08-23 14:00:12,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7553d27a)
2020-08-23 14:00:12,786 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:12,786 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:12,786 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:12,786 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:00:12,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:12,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5edc347c)
2020-08-23 14:00:12,789 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:00:12,790 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:00:12,790 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:12,790 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@108f4289)
2020-08-23 14:00:12,791 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:12,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:12,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:12,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@63ed078c)
2020-08-23 14:00:12,802 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:00:12,803 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:12,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:00:12,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@8a7f32c)
2020-08-23 14:00:12,805 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:12,806 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:12,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:12,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@43979b88)
2020-08-23 14:00:12,808 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:00:12,808 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:12,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:00:12,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@16081ef0)
2020-08-23 14:00:12,811 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:12,811 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:12,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:00:12,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@76273ea3)
2020-08-23 14:00:12,814 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:12,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7da3ce49)
2020-08-23 14:00:12,815 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:00:12,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:12,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:00:12,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1752407e)
2020-08-23 14:00:50,897 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:00:50,898 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:50,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:00:50,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d55647c)
2020-08-23 14:00:50,903 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:00:50,907 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:50,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:00:50,915 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66503dd3)
2020-08-23 14:00:50,931 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:50,932 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:00:50,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:00:50,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@12fc0da8)
2020-08-23 14:00:50,935 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:50,936 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:00:50,937 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:50,937 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:00:50,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:00:50,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:00:50,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@42eaee3)
2020-08-23 14:00:50,941 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:50,941 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:50,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:50,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1f13b5b0)
2020-08-23 14:00:50,947 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:00:50,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:00:50,943 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2bfd4989)
2020-08-23 14:00:50,949 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:00:50,950 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:50,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:00:50,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@310d9b29)
2020-08-23 14:00:50,953 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:50,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:00:50,954 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:50,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5570b512)
2020-08-23 14:00:50,955 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:50,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:50,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:50,957 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@43ee41ed)
2020-08-23 14:00:50,957 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:00:50,957 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:50,958 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:50,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@73dafaec)
2020-08-23 14:00:50,959 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:00:50,960 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:50,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:00:50,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:00:50,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3246a6c5)
2020-08-23 14:00:50,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@261a5b2c)
2020-08-23 14:00:50,962 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:00:50,962 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:00:50,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:00:50,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2426d46a)
2020-08-23 14:00:50,965 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:00:50,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:00:50,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:00:50,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@742e3dd9)
2020-08-23 14:01:17,694 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:01:17,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:01:17,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:01:17,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@ef3f908)
2020-08-23 14:01:17,698 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:01:17,699 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:01:17,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:01:17,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:01:17,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:01:17,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4856618f)
2020-08-23 14:01:17,704 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:01:17,706 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:01:17,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:01:17,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@26b45a74)
2020-08-23 14:01:17,708 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:01:17,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:01:17,709 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:01:17,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@11ff755b)
2020-08-23 14:01:17,710 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:01:17,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:01:17,711 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:01:17,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@757f1da4)
2020-08-23 14:01:17,712 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:01:17,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:01:17,713 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:01:17,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@336af34f)
2020-08-23 14:01:17,714 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:01:17,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:01:17,715 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:01:17,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1727b612)
2020-08-23 14:01:17,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:01:17,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@22407793)
2020-08-23 14:01:17,715 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:01:17,717 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:01:17,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:01:17,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:01:17,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:01:17,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:01:17,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6bfa1218)
2020-08-23 14:01:17,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@36811e23)
2020-08-23 14:01:17,721 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:01:17,722 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:01:17,721 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:01:17,723 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:01:17,723 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:01:17,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c3ee005)
2020-08-23 14:01:17,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:01:17,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@66e5b0fe)
2020-08-23 14:01:17,740 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:01:17,740 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:01:17,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:01:17,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a09ffa4)
2020-08-23 14:01:17,744 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:01:17,745 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:01:17,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:01:17,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@259397cb)
2020-08-23 14:02:12,972 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:02:18,497 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:02:18,498 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:02:18,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:02:18,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@23607427)
2020-08-23 14:02:18,500 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:02:18,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:02:18,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:02:18,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@39a4c891)
2020-08-23 14:02:18,502 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:02:18,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:02:18,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:02:18,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7e0a0ac1)
2020-08-23 14:02:18,506 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:02:18,508 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:02:18,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:02:18,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@28aaf7f8)
2020-08-23 14:02:18,511 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:02:18,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:02:18,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:02:18,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@8cb6f86)
2020-08-23 14:02:18,513 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:02:18,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:02:18,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:02:18,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1734ce4e)
2020-08-23 14:02:29,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:02:33,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:09:40,826 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:09:40,827 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:09:40,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:09:40,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59a5dd56)
2020-08-23 14:09:40,832 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:09:40,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:09:40,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:09:40,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38aa8046)
2020-08-23 14:09:41,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:10:11,541 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:10:11,833 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:10:11,834 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:11,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:10:11,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f84ef75)
2020-08-23 14:10:11,837 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:10:11,837 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:11,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:10:11,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c08e47f)
2020-08-23 14:10:17,230 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:17,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:10:17,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:10:17,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@46acb78c)
2020-08-23 14:10:17,234 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:17,235 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:10:17,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:10:17,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@24bfadd9)
2020-08-23 14:10:17,237 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:17,237 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:17,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:17,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:10:17,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:10:17,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3d3d47f3)
2020-08-23 14:10:17,240 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:17,241 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:10:17,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:10:17,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@500a3617)
2020-08-23 14:10:17,243 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:17,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:17,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:17,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:17,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@12a6253c)
2020-08-23 14:10:17,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5d775605)
2020-08-23 14:10:17,245 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:10:17,245 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:10:17,246 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:17,246 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:17,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:10:17,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:10:17,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@47fe917)
2020-08-23 14:10:17,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@55fa9e2a)
2020-08-23 14:10:17,248 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:17,248 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:17,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:17,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:17,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:17,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:17,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2af49b9)
2020-08-23 14:10:17,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@10bbe7b9)
2020-08-23 14:10:17,251 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:10:17,251 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:10:17,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:17,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:17,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:10:17,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3147d75)
2020-08-23 14:10:17,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:10:17,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@39e23182)
2020-08-23 14:10:34,800 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:34,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:10:34,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:10:34,803 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:34,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@b7ca014)
2020-08-23 14:10:34,803 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:10:34,803 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:34,804 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:10:34,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:10:34,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5007a42a)
2020-08-23 14:10:34,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:10:34,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1d3eb184)
2020-08-23 14:10:34,806 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:34,806 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:34,808 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:34,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:34,811 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2ea6b19d)
2020-08-23 14:10:34,810 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:10:34,811 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:10:34,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:10:34,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2430563d)
2020-08-23 14:10:34,813 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:34,814 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:34,815 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:34,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:34,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@36274355)
2020-08-23 14:10:34,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:10:34,816 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:10:34,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@10a593d2)
2020-08-23 14:10:34,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:34,817 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:34,818 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:34,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:10:34,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@33e270bd)
2020-08-23 14:10:34,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:34,820 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:34,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3ba96206)
2020-08-23 14:10:34,820 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:34,820 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:10:34,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:34,821 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:34,822 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5ea9a41f)
2020-08-23 14:10:34,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:10:34,823 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:10:34,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@209806b7)
2020-08-23 14:10:34,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:34,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:10:34,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@780e9049)
2020-08-23 14:10:49,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:10:49,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:49,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:10:49,046 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:10:49,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62746ea8)
2020-08-23 14:10:49,046 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:49,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:10:49,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1977842f)
2020-08-23 14:10:49,150 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:49,150 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:10:49,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:10:49,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3624a0ec)
2020-08-23 14:10:49,153 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:49,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:10:49,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:10:49,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@17bdac4a)
2020-08-23 14:10:49,162 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:49,163 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:49,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:49,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@bda1aad)
2020-08-23 14:10:49,170 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:10:49,175 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:49,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:10:49,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@219dfcb8)
2020-08-23 14:10:49,178 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:49,178 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:49,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:10:49,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:49,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:10:49,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@186b7437)
2020-08-23 14:10:49,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:49,182 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:10:49,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:10:49,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:10:49,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3eda0cd)
2020-08-23 14:10:49,186 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:49,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:49,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:49,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@8a728fb)
2020-08-23 14:10:49,190 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:10:49,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:49,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:10:49,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@32918652)
2020-08-23 14:10:49,194 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:10:49,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:10:49,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@322d1ba7)
2020-08-23 14:10:49,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:10:49,198 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:10:49,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@711896fb)
2020-08-23 14:10:49,198 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:49,199 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:10:49,200 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:10:49,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:10:49,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:10:49,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@48882e54)
2020-08-23 14:10:49,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f1dabdd)
2020-08-23 14:11:28,985 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:11:28,985 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:28,989 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:11:28,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:28,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:11:28,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:11:28,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a218690)
2020-08-23 14:11:28,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e21a686)
2020-08-23 14:11:29,024 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:29,024 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:11:29,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:11:29,027 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:29,027 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@20b837ee)
2020-08-23 14:11:29,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:11:29,027 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:29,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:11:29,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5ec29fc5)
2020-08-23 14:11:29,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:11:29,032 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:29,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:11:29,037 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:11:29,038 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2132f61d)
2020-08-23 14:11:29,038 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:29,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:11:29,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@258ef25b)
2020-08-23 14:11:29,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:29,040 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:29,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:29,041 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:29,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@59a88103)
2020-08-23 14:11:29,042 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:11:29,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:29,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:29,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6a475f7c)
2020-08-23 14:11:29,044 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:11:29,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:11:29,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@79f7b096)
2020-08-23 14:11:29,045 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:29,045 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:29,046 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:29,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:11:29,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@42811d97)
2020-08-23 14:11:29,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:29,048 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:29,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1811ff01)
2020-08-23 14:11:29,049 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:11:29,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:29,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:29,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:29,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@8f78eb5)
2020-08-23 14:11:29,052 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:11:29,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:29,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:11:29,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@33985c4e)
2020-08-23 14:11:29,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:11:29,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ab9a9da)
2020-08-23 14:11:36,202 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:36,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:11:36,204 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:36,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:11:36,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:11:36,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2fca38f)
2020-08-23 14:11:36,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:11:36,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@743f49f6)
2020-08-23 14:11:36,207 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:36,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:11:36,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:11:36,210 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:36,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5478b854)
2020-08-23 14:11:36,210 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:11:36,211 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:36,212 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:36,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:36,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@47e26798)
2020-08-23 14:11:36,216 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:11:36,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:36,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:11:36,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3efb9b01)
2020-08-23 14:11:36,219 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:36,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:11:36,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b623bf5)
2020-08-23 14:11:36,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:36,220 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:36,220 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:36,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:36,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4eb2778a)
2020-08-23 14:11:36,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:36,221 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:11:36,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@459cbb96)
2020-08-23 14:11:36,222 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:11:36,222 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:36,222 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:36,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:11:36,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e7f7d55)
2020-08-23 14:11:36,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:11:36,224 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:36,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@54b70169)
2020-08-23 14:11:36,224 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:36,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:36,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@497853ce)
2020-08-23 14:11:36,227 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:11:36,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:36,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:11:36,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bb9ea73)
2020-08-23 14:11:52,019 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:52,020 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:11:52,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:11:52,024 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:52,025 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:11:52,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@19653708)
2020-08-23 14:11:52,030 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:52,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:11:52,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:11:52,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2f1d3452)
2020-08-23 14:11:52,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:11:52,034 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:52,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2739e124)
2020-08-23 14:11:52,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:52,036 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:11:52,037 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:52,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:52,039 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:11:52,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:11:52,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5a87c1ea)
2020-08-23 14:11:52,040 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:11:52,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:11:52,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:52,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d6a1c65)
2020-08-23 14:11:52,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:11:52,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:11:52,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@c2c030e)
2020-08-23 14:11:52,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:52,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c7ec14c)
2020-08-23 14:11:52,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:52,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:52,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:52,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:52,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@60680a7d)
2020-08-23 14:11:52,049 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:11:52,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:52,050 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:11:52,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:52,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7fef069c)
2020-08-23 14:11:52,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:52,050 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:11:52,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:11:52,051 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:52,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@451baca3)
2020-08-23 14:11:52,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:11:52,052 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:11:52,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e4cb835)
2020-08-23 14:11:52,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:11:52,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:11:52,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:11:52,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@41f1400e)
2020-08-23 14:11:52,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2d4355e5)
2020-08-23 14:11:52,056 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:11:52,057 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:11:52,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:11:52,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@419b1730)
2020-08-23 14:12:07,006 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:07,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:07,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:07,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2913c81b)
2020-08-23 14:12:07,009 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:07,012 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:07,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:07,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2c472cf7)
2020-08-23 14:12:07,015 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:07,016 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:07,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:07,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@77371e1c)
2020-08-23 14:12:07,019 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:07,019 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:07,020 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:07,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:07,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:07,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@31e4036c)
2020-08-23 14:12:07,022 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:07,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:07,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@36261770)
2020-08-23 14:12:07,024 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:07,025 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:07,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:07,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@600565b)
2020-08-23 14:12:07,025 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:07,029 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:07,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:07,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@468d5dd6)
2020-08-23 14:12:07,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:07,033 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:07,034 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:07,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:07,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6f37631c)
2020-08-23 14:12:07,037 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:07,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:07,038 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1335e2f8)
2020-08-23 14:12:07,039 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:07,037 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:07,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:07,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:07,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:07,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c61edea)
2020-08-23 14:12:07,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a55b14e)
2020-08-23 14:12:07,044 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:07,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:07,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:07,046 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:07,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:07,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c3dd97c)
2020-08-23 14:12:07,049 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:07,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2a7ae281)
2020-08-23 14:12:07,050 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:07,051 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:07,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:07,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@63579f5)
2020-08-23 14:12:29,483 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:29,484 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:29,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:29,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d72c0)
2020-08-23 14:12:29,489 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:29,490 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:29,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:29,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76ead6a9)
2020-08-23 14:12:30,173 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:30,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:30,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:30,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@740c44c)
2020-08-23 14:12:30,178 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:30,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:30,182 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:30,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:30,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:30,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@e33a07e)
2020-08-23 14:12:30,183 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:30,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:30,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:30,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@10d118b8)
2020-08-23 14:12:30,184 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:30,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:30,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:30,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:30,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7fcab3b8)
2020-08-23 14:12:30,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@254beb17)
2020-08-23 14:12:30,187 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:30,187 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:30,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:30,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:30,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:30,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:30,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@724e0110)
2020-08-23 14:12:30,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@57faff20)
2020-08-23 14:12:30,189 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:30,189 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:30,190 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:30,190 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:30,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:30,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:30,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@73adc9b1)
2020-08-23 14:12:30,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cbc68fa)
2020-08-23 14:12:30,193 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:30,193 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:30,194 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:30,194 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:30,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:30,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:30,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@600eb7ea)
2020-08-23 14:12:30,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4b0b70d)
2020-08-23 14:12:30,196 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:30,197 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:30,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:30,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e59e7df)
2020-08-23 14:12:45,388 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:45,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:45,389 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:45,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:45,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:45,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6180d69c)
2020-08-23 14:12:45,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:45,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@259d514b)
2020-08-23 14:12:45,394 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:45,395 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:45,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:45,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@796600bb)
2020-08-23 14:12:45,402 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:45,402 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:45,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:45,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4ebd9e0f)
2020-08-23 14:12:45,404 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:45,405 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:45,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:45,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5786227f)
2020-08-23 14:12:45,409 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:45,410 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:45,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:45,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@30552a25)
2020-08-23 14:12:45,412 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:45,413 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:45,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:45,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@797f874c)
2020-08-23 14:12:45,422 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:45,422 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:45,423 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:45,423 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:45,429 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:45,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@772f29ab)
2020-08-23 14:12:45,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:45,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@40f26836)
2020-08-23 14:12:45,432 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:45,432 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:45,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:45,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7444c4bb)
2020-08-23 14:12:45,438 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:45,448 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:45,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:45,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@63a44490)
2020-08-23 14:12:45,452 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:45,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:45,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:45,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@173c350e)
2020-08-23 14:12:45,461 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:45,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:45,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:45,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5465225c)
2020-08-23 14:12:45,472 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:45,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:45,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:45,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b07dfb4)
2020-08-23 14:12:54,909 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:54,909 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:54,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:54,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@49e56b8b)
2020-08-23 14:12:54,913 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:54,914 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:54,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:54,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@47bfb387)
2020-08-23 14:12:54,917 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:54,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:54,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:54,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@10ccf17a)
2020-08-23 14:12:54,920 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:54,920 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:54,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:54,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@721779db)
2020-08-23 14:12:54,922 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:54,923 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 14:12:54,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 14:12:54,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@52cec5ac)
2020-08-23 14:12:54,926 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 14:12:54,926 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 14:12:54,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 14:12:54,929 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@71e37ca2)
2020-08-23 14:12:54,929 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:54,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:54,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:54,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@cf0f6f5)
2020-08-23 14:12:54,936 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 14:12:54,937 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:54,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 14:12:54,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2127dc4f)
2020-08-23 14:12:54,939 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:54,940 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:54,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:54,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5e09e62)
2020-08-23 14:12:54,942 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:54,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:54,943 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:54,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:54,922 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 14:12:54,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:54,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f8cf410)
2020-08-23 14:12:54,945 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 14:12:54,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:54,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ada5ca1)
2020-08-23 14:12:54,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 14:12:54,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5c5115fe)
2020-08-23 14:12:54,951 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 14:12:54,952 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:54,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 14:12:54,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6648b678)
2020-08-23 14:12:54,954 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:12:54,954 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:12:54,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:12:54,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@232a88f4)
2020-08-23 14:13:54,425 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:14:19,152 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:14:19,153 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:14:19,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:14:19,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@657160d2)
2020-08-23 14:14:19,164 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:14:19,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:14:19,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:14:19,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f08e7b1)
2020-08-23 14:14:19,803 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:15:08,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:15:08,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:15:08,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:15:08,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7aba1c67)
2020-08-23 14:15:08,519 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:15:08,520 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:15:08,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:15:08,522 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1178dcea)
2020-08-23 14:15:09,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:15:24,101 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:15:24,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:15:24,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:15:24,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a69d0b3)
2020-08-23 14:15:24,108 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:15:24,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:15:24,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:15:24,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7eda14cb)
2020-08-23 14:15:24,782 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:15:58,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:15:58,707 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:15:58,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:15:58,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:15:58,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14fa3a1e)
2020-08-23 14:15:58,714 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-23 14:15:58,714 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 14:15:58,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 14:15:58,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22816d8)
2020-08-23 14:16:02,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 14:16:53,534 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:00:55,782 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:01:14,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:01:32,104 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:01:32,104 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:01:32,108 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:01:32,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:01:32,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:01:32,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:01:32,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@42ee8d98)
2020-08-23 15:01:32,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@327e5c43)
2020-08-23 15:01:32,111 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:01:32,111 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:01:32,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:01:32,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:01:32,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:01:32,113 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1626d86a)
2020-08-23 15:01:32,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:01:32,114 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:01:32,114 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@49cfea78)
2020-08-23 15:01:32,114 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:01:32,114 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:01:32,116 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:01:32,117 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:01:32,117 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:01:32,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7ea41998)
2020-08-23 15:01:32,118 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:01:32,120 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:01:32,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:01:32,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@328b9cc8)
2020-08-23 15:01:32,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@46d86889)
2020-08-23 15:01:32,123 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:01:32,123 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:01:32,124 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:01:32,124 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:01:32,126 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:01:32,126 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:01:32,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3eeafcc4)
2020-08-23 15:01:32,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@43f454c)
2020-08-23 15:01:32,129 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:01:32,129 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:01:32,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:01:32,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:01:32,134 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:01:32,135 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1e7ac48d)
2020-08-23 15:01:32,135 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:01:32,136 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:01:32,137 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:01:32,138 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@28507110)
2020-08-23 15:01:32,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:01:32,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@60dc4a58)
2020-08-23 15:01:43,224 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:01:55,481 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:02:14,811 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:02:53,979 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:03:01,410 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:01,410 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:03:01,410 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:01,411 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:03:01,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:03:01,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@b8deeed)
2020-08-23 15:03:01,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:03:01,413 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:01,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2c380ecd)
2020-08-23 15:03:01,414 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:03:01,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:03:01,415 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:01,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7c221afa)
2020-08-23 15:03:01,417 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:01,417 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:01,417 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:03:01,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:01,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:03:01,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@8987619)
2020-08-23 15:03:01,422 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:03:01,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@35916348)
2020-08-23 15:03:01,425 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:01,426 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:01,426 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:01,427 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:01,428 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@18f2f5cf)
2020-08-23 15:03:01,428 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:03:01,429 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:01,429 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:03:01,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@61584fa2)
2020-08-23 15:03:01,430 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:01,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:01,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:03:01,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5177e399)
2020-08-23 15:03:01,434 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:01,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:01,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:01,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@737bb3e8)
2020-08-23 15:03:01,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:01,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3dd5d11c)
2020-08-23 15:03:01,440 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:03:01,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:01,438 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:03:01,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:01,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:03:01,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:03:01,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@38182b20)
2020-08-23 15:03:01,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e07ecd)
2020-08-23 15:03:50,794 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:50,795 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:03:50,804 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:50,805 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:03:50,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:03:50,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:03:50,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@603a41fe)
2020-08-23 15:03:50,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@702e188b)
2020-08-23 15:03:50,807 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:50,807 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:03:50,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:03:50,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:03:50,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:03:50,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3eb31417)
2020-08-23 15:03:50,809 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:50,811 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:50,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:50,814 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@17357b25)
2020-08-23 15:03:50,815 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:03:50,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:50,811 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:03:50,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@37eeabf)
2020-08-23 15:03:50,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:03:50,818 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:50,819 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:50,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:50,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@18e7dfad)
2020-08-23 15:03:50,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7c543a68)
2020-08-23 15:03:50,821 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:50,821 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:03:50,822 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:50,823 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:50,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:03:50,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c3e8f29)
2020-08-23 15:03:50,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:50,825 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:03:50,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2ab9abe6)
2020-08-23 15:03:50,825 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:03:50,825 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:03:50,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:03:50,826 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:50,827 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4eaa7196)
2020-08-23 15:03:50,827 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:03:50,827 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:03:50,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@16e901c7)
2020-08-23 15:03:50,828 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:03:50,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:03:50,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a7541ee)
2020-08-23 15:04:01,349 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:04:01,349 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:04:01,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:04:01,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3535f1e6)
2020-08-23 15:04:01,354 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:04:01,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:04:01,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:04:01,356 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:04:01,357 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@688687ec)
2020-08-23 15:04:01,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:04:01,357 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:04:01,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:04:01,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:04:01,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@302c4be9)
2020-08-23 15:04:01,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:04:01,359 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:04:01,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@48655549)
2020-08-23 15:04:01,361 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:04:01,361 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:04:01,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:04:01,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@59498df4)
2020-08-23 15:04:01,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:04:01,363 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:04:01,364 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:04:01,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:04:01,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@773c8a61)
2020-08-23 15:04:01,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:04:01,365 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:04:01,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b45920f)
2020-08-23 15:04:01,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:04:01,366 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:04:01,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:04:01,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:04:01,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2fce78d2)
2020-08-23 15:04:01,367 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:04:01,368 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:04:01,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:04:01,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4165e240)
2020-08-23 15:04:01,369 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:04:01,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:04:01,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@73ab3320)
2020-08-23 15:04:01,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:04:01,371 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:04:01,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:04:01,373 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:04:01,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@13c48a86)
2020-08-23 15:04:01,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:04:01,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1186ef01)
2020-08-23 15:09:22,971 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:09:27,088 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:10:26,432 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:10:26,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:10:26,434 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:10:26,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:10:26,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:10:26,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:10:26,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@75b094aa)
2020-08-23 15:10:26,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@cb3bff3)
2020-08-23 15:10:26,439 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:10:26,440 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:10:26,441 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:10:26,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:10:26,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:10:26,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:10:26,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@71789eac)
2020-08-23 15:10:26,443 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:10:26,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5bfa9d07)
2020-08-23 15:10:26,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:10:26,443 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:10:26,444 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:10:26,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:10:26,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@35266f26)
2020-08-23 15:10:26,445 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:10:26,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:10:26,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:10:26,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2242fc73)
2020-08-23 15:10:26,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:10:26,449 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:10:26,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f736db)
2020-08-23 15:10:26,449 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:10:26,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:10:26,450 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:10:26,451 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:10:26,451 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@43b196c6)
2020-08-23 15:10:26,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:10:26,452 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:10:26,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7a16d5b9)
2020-08-23 15:10:26,453 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:10:26,454 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:10:26,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:10:26,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:10:26,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:10:26,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ccfca82)
2020-08-23 15:10:26,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@32d54fde)
2020-08-23 15:10:26,461 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:10:26,462 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:10:26,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:10:26,472 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d48fe26)
2020-08-23 15:12:05,580 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:05,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:12:05,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:12:05,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6ae46ac2)
2020-08-23 15:12:05,587 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:05,587 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:12:05,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:12:05,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@4bdbfe77)
2020-08-23 15:12:05,594 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:05,595 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:05,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:05,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4b08b3fc)
2020-08-23 15:12:05,597 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:12:05,598 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:05,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:12:05,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2811e3e1)
2020-08-23 15:12:05,601 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:05,602 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:05,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:05,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3f9d035e)
2020-08-23 15:12:05,610 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:12:05,611 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:05,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:12:05,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1834f1a7)
2020-08-23 15:12:05,724 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:05,725 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:12:05,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:12:05,727 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6778327)
2020-08-23 15:12:05,728 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:05,729 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:12:05,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:12:05,731 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@71d5ac0c)
2020-08-23 15:12:05,731 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:05,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:05,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:05,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1f4c2794)
2020-08-23 15:12:05,735 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:12:05,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:05,737 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:12:05,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@28eb0e41)
2020-08-23 15:12:05,738 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:05,739 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:05,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:05,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@12bfdec0)
2020-08-23 15:12:05,742 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:12:05,742 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:05,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:12:05,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e56a557)
2020-08-23 15:12:32,442 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:32,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:12:32,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:12:32,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@60640812)
2020-08-23 15:12:32,446 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:32,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:12:32,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:12:32,448 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:32,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:12:32,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@66209c81)
2020-08-23 15:12:32,449 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:32,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:12:32,450 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:32,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6ad92806)
2020-08-23 15:12:32,451 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:32,452 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:12:32,453 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:32,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3862c8e3)
2020-08-23 15:12:32,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:12:32,454 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:12:32,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@35a3f723)
2020-08-23 15:12:32,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:32,455 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:32,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:32,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:12:32,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b7d93c3)
2020-08-23 15:12:32,457 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:32,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:32,459 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:32,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6979708f)
2020-08-23 15:12:32,461 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:12:32,461 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:32,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:32,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:12:32,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a51616f)
2020-08-23 15:12:32,464 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:32,465 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:32,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3b992026)
2020-08-23 15:12:32,468 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:12:32,468 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:32,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:32,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@49ebed3b)
2020-08-23 15:12:32,470 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:12:32,471 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:32,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:12:32,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@593f6740)
2020-08-23 15:12:32,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:12:32,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@635b11ca)
2020-08-23 15:12:40,290 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:40,290 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:12:40,293 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:40,294 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:12:40,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:12:40,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@319d9d56)
2020-08-23 15:12:40,296 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:40,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:12:40,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2875d3c3)
2020-08-23 15:12:40,306 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:12:40,306 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:12:40,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:12:40,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:12:40,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:12:40,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5f202b3c)
2020-08-23 15:12:40,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@20ee1e16)
2020-08-23 15:12:40,311 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:40,311 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:40,312 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:40,312 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:40,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:40,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@315fac7)
2020-08-23 15:12:40,313 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:12:40,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:40,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:40,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4bcf9e2c)
2020-08-23 15:12:40,314 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:12:40,315 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:40,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:12:40,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:12:40,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ab2bf37)
2020-08-23 15:12:40,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@8ae3ec3)
2020-08-23 15:12:40,318 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:40,318 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:12:40,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:40,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:12:40,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:40,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2c5f9a69)
2020-08-23 15:12:40,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:12:40,321 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:12:40,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@558465ad)
2020-08-23 15:12:40,322 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:40,322 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:12:40,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:12:40,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:12:40,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c112f5a)
2020-08-23 15:12:40,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:12:40,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@b23ddea)
2020-08-23 15:15:23,305 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:23,306 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:15:23,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:15:23,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6f6037a9)
2020-08-23 15:15:23,310 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:23,311 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:15:23,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:15:23,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@62319886)
2020-08-23 15:15:23,314 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:23,315 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:23,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:23,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3af50c16)
2020-08-23 15:15:23,318 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:15:23,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:23,320 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:23,321 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:15:23,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:15:23,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@21edb664)
2020-08-23 15:15:23,324 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:23,325 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:15:23,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:15:23,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7d10f43)
2020-08-23 15:15:23,328 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:23,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:23,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:23,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@605062c4)
2020-08-23 15:15:23,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:15:23,331 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:15:23,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@666feaa7)
2020-08-23 15:15:23,332 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:23,332 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:23,332 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:23,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:23,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:15:23,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@274058be)
2020-08-23 15:15:23,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ee9a030)
2020-08-23 15:15:23,334 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:15:23,335 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:23,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:23,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:23,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:15:23,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@354775fc)
2020-08-23 15:15:23,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:23,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@727b7f1f)
2020-08-23 15:15:23,340 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:15:23,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:23,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:15:23,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ddfcd04)
2020-08-23 15:15:46,980 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:46,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:15:46,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:15:46,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@33eab428)
2020-08-23 15:15:46,985 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:46,986 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:15:46,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:15:46,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5800dd33)
2020-08-23 15:15:46,992 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:46,992 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:46,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:46,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@fd0a29e)
2020-08-23 15:15:46,994 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:15:46,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:46,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:15:46,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@30d6d30a)
2020-08-23 15:15:46,997 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:46,998 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:47,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:47,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@56fb7acc)
2020-08-23 15:15:47,002 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:15:47,003 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:47,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:15:47,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@84ccc65)
2020-08-23 15:15:47,195 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:47,196 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:15:47,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:15:47,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@30585b8e)
2020-08-23 15:15:47,199 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:15:47,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:15:47,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:15:47,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@40b1c2c2)
2020-08-23 15:15:47,204 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:47,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:47,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:47,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2c145dca)
2020-08-23 15:15:47,213 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:15:47,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:47,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:15:47,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@57932902)
2020-08-23 15:15:47,219 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:15:47,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:15:47,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:15:47,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@25e58c55)
2020-08-23 15:15:47,225 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:15:47,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:15:47,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:15:47,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b8cedf9)
2020-08-23 15:33:14,509 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:33:14,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:33:14,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:33:14,512 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:33:14,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@746cb549)
2020-08-23 15:33:14,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:33:14,513 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:33:14,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:33:14,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:33:14,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@27cccd8b)
2020-08-23 15:33:14,515 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:33:14,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:33:14,516 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:33:14,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:33:14,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5eeda797)
2020-08-23 15:33:14,518 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:33:14,518 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:33:14,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:33:14,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7c0a7e38)
2020-08-23 15:33:14,521 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:33:14,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:33:14,522 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@51ae655c)
2020-08-23 15:33:14,522 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:33:14,522 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:33:14,523 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:33:14,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@77a51b7e)
2020-08-23 15:33:14,523 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:33:14,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:33:14,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:33:14,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:33:14,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@10cd0e15)
2020-08-23 15:33:14,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5d3a47d3)
2020-08-23 15:33:14,526 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:33:14,526 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:33:14,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:33:14,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:33:14,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:33:14,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:33:14,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ced77c0)
2020-08-23 15:33:14,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f99498a)
2020-08-23 15:33:14,529 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:33:14,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:33:14,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:33:14,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6fd5783f)
2020-08-23 15:33:14,532 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:33:14,532 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:33:14,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:33:14,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d73741c)
2020-08-23 15:38:20,662 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 15:38:20,662 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 15:38:20,662 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 15:38:21,003 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 15:38:21,003 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 15:38:21,009 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 15:38:21,009 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 15:38:21,009 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 15:38:21,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 15:38:21,011 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 15:38:21,011 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 15:38:21,011 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 15:38:21,011 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 15:38:21,050 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 15:38:21,051 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 15:38:21,055 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 51ms. Found 15 MongoDB repository interfaces.
2020-08-23 15:38:21,366 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:38:21,367 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:38:21,541 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:38:21,542 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:38:21,548 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 15:38:21,549 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 15:38:21,550 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 15:38:21,551 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 15:38:21,554 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 15:38:21,555 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 15:38:21,556 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 15:38:21,557 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 15:38:21,558 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 15:38:21,559 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 15:38:21,559 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 15:38:21,560 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 15:38:21,560 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 15:38:21,560 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 15:38:21,561 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 15:38:21,561 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 15:38:21,562 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 15:38:21,562 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 15:38:21,563 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 15:38:21,564 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 15:38:21,564 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 15:38:21,636 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 15:38:21,641 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 15:38:21,648 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 15:38:21,656 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 15:38:21,660 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 15:38:21,667 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 15:38:21,671 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 15:38:21,679 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 15:38:21,717 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 15:38:21,724 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 15:38:21,732 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 15:38:21,738 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 15:38:21,745 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 15:38:21,751 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 15:38:21,758 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 15:38:21,764 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 15:38:21,774 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 15:38:21,780 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 15:38:21,789 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 15:38:21,793 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 15:38:21,801 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 15:38:21,808 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 15:38:21,814 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 15:38:21,821 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 15:38:21,838 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 15:38:21,844 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 15:38:21,851 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 15:38:21,857 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 15:38:21,927 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 15:38:21,929 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:38:21,929 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 15:38:21,929 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:38:21,978 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 15:38:21,983 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 15:38:22,217 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 15:38:22,222 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 15:38:22,224 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 15:38:22,267 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.634 seconds (JVM running for 20833.604)
2020-08-23 15:39:51,796 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:39:51,782 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:39:51,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:39:51,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:39:51,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:39:51,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:39:51,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2cf5fd36)
2020-08-23 15:39:51,831 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:39:51,832 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:39:51,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:39:51,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@76da0977)
2020-08-23 15:39:51,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@101ad51e)
2020-08-23 15:39:51,841 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:39:51,841 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:39:51,842 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:39:51,843 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:39:51,843 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:39:51,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@44490318)
2020-08-23 15:39:51,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:39:51,845 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:39:51,845 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:39:51,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@819ea67)
2020-08-23 15:39:51,852 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:39:51,853 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:39:51,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:39:51,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7c6e7b4)
2020-08-23 15:39:51,862 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:39:51,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:39:51,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:39:51,869 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:39:51,870 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@61cefe1f)
2020-08-23 15:39:51,870 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@536c6cff)
2020-08-23 15:39:51,870 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:39:51,871 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:39:51,873 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:39:51,874 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:39:51,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:39:51,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@755b4654)
2020-08-23 15:39:51,876 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:39:51,876 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:39:51,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:39:51,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1cf1ba88)
2020-08-23 15:39:51,878 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:39:51,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:39:51,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:39:51,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7986ca24)
2020-08-23 15:39:51,881 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:39:51,881 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@76d6863c)
2020-08-23 15:41:39,225 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 15:41:39,225 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 15:41:39,225 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 15:41:39,454 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 15:41:39,454 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 15:41:39,458 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 15:41:39,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 15:41:39,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 15:41:39,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 15:41:39,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 15:41:39,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 15:41:39,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 15:41:39,459 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 15:41:39,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 15:41:39,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 15:41:39,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 15:41:39,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 15:41:39,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 15:41:39,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 15:41:39,460 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 15:41:39,480 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 15:41:39,480 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 15:41:39,484 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 29ms. Found 15 MongoDB repository interfaces.
2020-08-23 15:41:39,687 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:41:39,688 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:41:39,739 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:41:39,739 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:41:39,741 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 15:41:39,741 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 15:41:39,742 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 15:41:39,742 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 15:41:39,742 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 15:41:39,743 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 15:41:39,743 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 15:41:39,743 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 15:41:39,744 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 15:41:39,744 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 15:41:39,744 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 15:41:39,744 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 15:41:39,745 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 15:41:39,745 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 15:41:39,745 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 15:41:39,746 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 15:41:39,746 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 15:41:39,746 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 15:41:39,747 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 15:41:39,747 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 15:41:39,747 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 15:41:39,796 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 15:41:39,800 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 15:41:39,806 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 15:41:39,810 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 15:41:39,814 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 15:41:39,820 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 15:41:39,822 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 15:41:39,827 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 15:41:39,847 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 15:41:39,854 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 15:41:39,860 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 15:41:39,864 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 15:41:39,870 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 15:41:39,874 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 15:41:39,877 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 15:41:39,881 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 15:41:39,888 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 15:41:39,893 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 15:41:39,898 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 15:41:39,902 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 15:41:39,909 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 15:41:39,915 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 15:41:39,921 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 15:41:39,926 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 15:41:39,937 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 15:41:39,943 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 15:41:39,950 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 15:41:39,955 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 15:41:40,005 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 15:41:40,006 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:41:40,006 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 15:41:40,006 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:41:40,023 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 15:41:40,026 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 15:41:40,157 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 15:41:40,162 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 15:41:40,163 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 15:41:40,214 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.008 seconds (JVM running for 21031.55)
2020-08-23 15:43:48,633 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 15:43:48,633 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 15:43:48,633 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 15:43:48,859 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 15:43:48,860 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 15:43:48,864 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 15:43:48,864 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 15:43:48,865 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 15:43:48,866 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 15:43:48,866 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 15:43:48,866 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 15:43:48,866 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 15:43:48,886 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 15:43:48,886 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 15:43:48,887 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 27ms. Found 15 MongoDB repository interfaces.
2020-08-23 15:43:49,047 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:43:49,048 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:43:49,147 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:43:49,148 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:43:49,152 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 15:43:49,153 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 15:43:49,154 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 15:43:49,155 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 15:43:49,155 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 15:43:49,156 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 15:43:49,156 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 15:43:49,157 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 15:43:49,157 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 15:43:49,158 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 15:43:49,159 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 15:43:49,159 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 15:43:49,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 15:43:49,161 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 15:43:49,162 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 15:43:49,163 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 15:43:49,164 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 15:43:49,165 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 15:43:49,166 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 15:43:49,167 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 15:43:49,167 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 15:43:49,269 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 15:43:49,275 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 15:43:49,283 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 15:43:49,289 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 15:43:49,295 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 15:43:49,303 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 15:43:49,306 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 15:43:49,313 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 15:43:49,352 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 15:43:49,359 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 15:43:49,370 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 15:43:49,376 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 15:43:49,381 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 15:43:49,389 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 15:43:49,394 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 15:43:49,400 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 15:43:49,409 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 15:43:49,414 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 15:43:49,424 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 15:43:49,428 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 15:43:49,436 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 15:43:49,443 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 15:43:49,450 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 15:43:49,455 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 15:43:49,464 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 15:43:49,469 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 15:43:49,474 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 15:43:49,478 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 15:43:49,512 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 15:43:49,514 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:43:49,514 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 15:43:49,514 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:43:49,538 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 15:43:49,542 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 15:43:49,714 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 15:43:49,720 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 15:43:49,722 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 15:43:49,772 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.166 seconds (JVM running for 21162.249)
2020-08-23 15:45:15,048 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 36302 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 15:45:15,048 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 15:45:15,048 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 15:45:15,286 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 15:45:15,287 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 15:45:15,300 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 15:45:15,300 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 15:45:15,301 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 15:45:15,302 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 15:45:15,302 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 15:45:15,302 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 15:45:15,317 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 15:45:15,317 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 15:45:15,319 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 32ms. Found 15 MongoDB repository interfaces.
2020-08-23 15:45:15,468 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:45:15,469 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:45:15,523 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:45:15,524 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:45:15,527 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 15:45:15,527 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 15:45:15,527 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 15:45:15,528 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 15:45:15,529 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 15:45:15,529 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 15:45:15,530 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 15:45:15,530 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 15:45:15,530 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 15:45:15,531 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 15:45:15,531 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 15:45:15,531 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 15:45:15,532 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 15:45:15,532 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 15:45:15,532 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 15:45:15,533 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 15:45:15,533 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 15:45:15,534 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 15:45:15,534 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 15:45:15,535 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 15:45:15,535 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 15:45:15,592 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 15:45:15,599 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 15:45:15,603 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 15:45:15,610 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 15:45:15,614 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 15:45:15,619 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 15:45:15,622 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 15:45:15,629 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 15:45:15,651 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 15:45:15,657 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 15:45:15,664 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 15:45:15,670 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 15:45:15,676 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 15:45:15,682 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 15:45:15,687 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 15:45:15,693 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 15:45:15,702 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 15:45:15,708 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 15:45:15,717 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 15:45:15,722 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 15:45:15,730 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 15:45:15,736 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 15:45:15,742 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 15:45:15,747 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 15:45:15,760 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 15:45:15,770 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 15:45:15,779 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 15:45:15,785 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 15:45:15,828 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 15:45:15,830 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:45:15,830 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 15:45:15,830 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:45:15,874 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 15:45:15,879 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 15:45:16,084 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 15:45:16,093 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 15:45:16,094 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 15:45:16,144 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 1.114 seconds (JVM running for 21248.62)
2020-08-23 15:46:28,564 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 53323 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 15:46:28,575 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 15:46:28,576 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 15:46:31,951 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 15:46:31,992 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 15:46:32,021 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 15:46:32,022 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 15:46:32,023 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 15:46:32,024 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 15:46:32,024 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 15:46:32,025 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 15:46:32,025 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 15:46:32,026 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 15:46:32,026 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 15:46:32,027 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 15:46:32,027 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 15:46:32,028 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 15:46:32,029 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 15:46:32,029 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 15:46:32,030 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 15:46:32,237 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 15:46:32,238 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 15:46:32,252 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 258ms. Found 15 MongoDB repository interfaces.
2020-08-23 15:46:37,289 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:46:37,291 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:46:37,725 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:46:37,726 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 15:46:37,838 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 15:46:37,861 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 15:46:37,862 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 15:46:37,863 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 15:46:37,865 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 15:46:37,866 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 15:46:37,867 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 15:46:37,870 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 15:46:37,871 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 15:46:37,873 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 15:46:37,874 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 15:46:37,875 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 15:46:37,876 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 15:46:37,879 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 15:46:37,880 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 15:46:37,883 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 15:46:37,885 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 15:46:37,886 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 15:46:37,887 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 15:46:37,889 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 15:46:37,890 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 15:46:38,842 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 15:46:39,049 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 15:46:39,068 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 15:46:39,088 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 15:46:39,104 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 15:46:39,121 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 15:46:39,132 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 15:46:39,152 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 15:46:39,347 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 15:46:39,366 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 15:46:39,387 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 15:46:39,398 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 15:46:39,412 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 15:46:39,422 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 15:46:39,436 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 15:46:39,445 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 15:46:39,469 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 15:46:39,481 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 15:46:39,501 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 15:46:39,508 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 15:46:39,528 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 15:46:39,540 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 15:46:39,556 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 15:46:39,567 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 15:46:39,597 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 15:46:39,608 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 15:46:39,625 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 15:46:39,634 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 15:46:39,751 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 15:46:39,756 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:46:39,756 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 15:46:39,756 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 15:46:39,957 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 15:46:39,965 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 15:46:42,078 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 15:46:42,107 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 15:46:42,112 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 15:46:42,467 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 15.98 seconds (JVM running for 17.883)
2020-08-23 15:48:03,164 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:48:03,166 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:48:03,205 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:48:03,206 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:48:03,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:48:03,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:48:03,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@33de50af)
2020-08-23 15:48:03,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1639d66c)
2020-08-23 15:48:03,419 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:48:03,422 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:48:03,426 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:48:03,427 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:48:03,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:48:03,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:48:03,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@326a2f58)
2020-08-23 15:48:03,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5db69fe1)
2020-08-23 15:48:03,499 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:48:03,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:48:03,505 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:48:03,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:48:03,508 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:48:03,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:48:03,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6d23c4c6)
2020-08-23 15:48:03,529 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:48:03,534 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:48:03,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@29ca8793)
2020-08-23 15:48:03,540 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:48:03,542 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:48:03,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:48:03,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:48:03,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@15b4ae03)
2020-08-23 15:48:03,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@56ec0907)
2020-08-23 15:48:03,569 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:48:03,569 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:48:03,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:48:03,580 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:48:03,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:48:03,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@259b325)
2020-08-23 15:48:03,586 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:48:03,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:48:03,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@251af2e8)
2020-08-23 15:48:03,595 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:48:03,593 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:48:03,599 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:48:03,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:48:03,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ff98656)
2020-08-23 15:48:03,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:48:03,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@108a8298)
2020-08-23 15:51:03,725 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:51:03,727 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:51:03,737 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:51:03,739 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:51:03,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:51:03,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:51:03,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@697b0d73)
2020-08-23 15:51:03,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@74261836)
2020-08-23 15:51:03,747 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:51:03,748 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:51:03,749 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:51:03,752 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:51:03,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:51:03,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@67bcee2c)
2020-08-23 15:51:03,764 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:51:03,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:51:03,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:51:03,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@63836603)
2020-08-23 15:51:03,776 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:51:03,778 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:51:03,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:51:03,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:51:03,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7ae1f8c2)
2020-08-23 15:51:03,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2681e417)
2020-08-23 15:51:03,786 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:51:03,786 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:51:03,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:51:03,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:51:03,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:51:03,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@17a06521)
2020-08-23 15:51:03,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:51:03,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7ede7346)
2020-08-23 15:51:03,800 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:51:03,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:51:03,803 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:51:03,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:51:03,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:51:03,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@17ed2477)
2020-08-23 15:51:03,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:51:03,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bdcf2f9)
2020-08-23 15:51:03,817 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:51:03,819 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:51:03,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:51:03,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7647c99)
2020-08-23 15:51:03,835 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:51:03,837 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:51:03,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:51:03,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@38c4a15e)
2020-08-23 15:51:45,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:51:45,072 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-9] Analyzing class class com.initializers.services.apiservices.model.UserOrderSetList for index information.
2020-08-23 15:51:48,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:51:50,858 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:51:50,871 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-23 15:51:51,079 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 15:51:51,087 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 15:51:51,094 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-23 15:51:52,379 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:51:52,393 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:51:52,403 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:51:52,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 15:51:52,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Y, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2de56d2e)
2020-08-23 15:51:52,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 15:51:52,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Y, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37c4f2e9)
2020-08-23 15:51:52,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 15:51:52,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@681009b0)
2020-08-23 15:51:52,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-23 15:51:52,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7baa881a)
2020-08-23 15:52:37,949 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:52:38,086 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 15:52:38,094 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 15:52:41,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:52:41,774 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-23 15:52:41,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:52:47,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:52:47,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 15:52:47,620 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 15:52:48,797 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:52:48,803 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 15:52:48,804 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:52:59,234 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:52:59,352 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 15:52:59,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 15:53:01,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:53:01,187 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-23 15:53:01,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:53:03,622 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-23 15:53:04,120 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-23 15:53:04,124 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-23 15:53:47,742 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:53:48,890 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:53:48,891 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:53:48,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:53:48,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@19380170)
2020-08-23 15:53:48,898 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:53:48,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:53:48,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:53:48,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1c9694c2)
2020-08-23 15:53:48,902 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:53:48,903 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:53:48,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:53:48,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@26284a2)
2020-08-23 15:53:48,906 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:53:48,907 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:53:48,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:53:48,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@39606109)
2020-08-23 15:53:48,911 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:53:48,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:53:48,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:53:48,915 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2fb1b513)
2020-08-23 15:53:48,917 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:53:48,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:53:48,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:53:48,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@54b5bf2d)
2020-08-23 15:55:59,988 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:55:59,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:55:59,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:55:59,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3f8ed9e9)
2020-08-23 15:55:59,996 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:55:59,997 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:56:00,003 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:56:00,003 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:56:00,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6e907f9d)
2020-08-23 15:56:00,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:56:00,005 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:56:00,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:56:00,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:56:00,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@55a7333b)
2020-08-23 15:56:00,024 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:56:00,025 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:56:00,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:56:00,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@202cbc42)
2020-08-23 15:56:00,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:56:00,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1681002b)
2020-08-23 15:56:00,031 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:56:00,031 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:56:00,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:56:00,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:56:00,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:56:00,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:56:00,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5f89d283)
2020-08-23 15:56:00,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2b10226c)
2020-08-23 15:56:00,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:56:00,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:56:00,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:56:00,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:56:00,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:56:00,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@626d4317)
2020-08-23 15:56:00,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:56:00,056 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:56:00,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e5af1f9)
2020-08-23 15:56:00,060 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:56:00,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:56:00,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@42a37c9)
2020-08-23 15:56:00,064 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:56:00,065 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:56:00,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:56:00,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@412155a2)
2020-08-23 15:56:00,070 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:56:00,072 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:56:00,074 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:56:00,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b880ca8)
2020-08-23 15:58:46,402 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 15:58:48,075 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:58:48,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:58:48,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:58:48,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2e452e14)
2020-08-23 15:58:48,082 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:58:48,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:58:48,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:58:48,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1624b79c)
2020-08-23 15:58:48,088 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:58:48,089 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:58:48,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:58:48,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6cae9c6d)
2020-08-23 15:58:48,091 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:58:48,092 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:58:48,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:58:48,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@62168b94)
2020-08-23 15:58:48,095 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:58:48,096 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:58:48,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:58:48,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@568fff23)
2020-08-23 15:58:48,099 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:58:48,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:58:48,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:58:48,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4eda4c6b)
2020-08-23 15:58:50,981 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:58:50,984 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:58:50,983 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:58:50,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 15:58:50,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:58:50,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 15:58:50,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5dd7c3f6)
2020-08-23 15:58:50,995 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5ff1fa9d)
2020-08-23 15:58:51,005 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:58:51,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:58:51,003 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 15:58:51,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 15:58:51,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:58:51,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 15:58:51,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@4490c850)
2020-08-23 15:58:51,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7dcad55d)
2020-08-23 15:58:51,016 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:58:51,016 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:58:51,017 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:58:51,019 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:58:51,020 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:58:51,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:58:51,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6bab7c76)
2020-08-23 15:58:51,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4ff511e)
2020-08-23 15:58:51,025 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:58:51,025 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 15:58:51,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:58:51,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:58:51,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:58:51,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ef2c98e)
2020-08-23 15:58:51,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 15:58:51,033 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:58:51,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c9c3567)
2020-08-23 15:58:51,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:58:51,038 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 15:58:51,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 15:58:51,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:58:51,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7d5971d5)
2020-08-23 15:58:51,042 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:58:51,045 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:58:51,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 15:58:51,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2ce90d7b)
2020-08-23 15:58:51,048 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 15:58:51,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:58:51,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f49e466)
2020-08-23 15:58:51,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 15:58:51,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 15:58:51,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7225586)
2020-08-23 15:59:03,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 16:00:02,793 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-23 16:00:08,446 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:00:08,447 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:00:08,448 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:00:08,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:00:08,451 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:00:08,451 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:00:08,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7d73a7dc)
2020-08-23 16:00:08,453 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@25337e01)
2020-08-23 16:00:08,454 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:00:08,455 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:00:08,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:00:08,456 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:00:08,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:00:08,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:00:08,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@c105811)
2020-08-23 16:00:08,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@352541bf)
2020-08-23 16:00:08,467 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:00:08,467 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:00:08,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:00:08,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:00:08,472 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:00:08,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:00:08,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3e22109d)
2020-08-23 16:00:08,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@574d3def)
2020-08-23 16:00:08,478 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:00:08,480 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:00:08,478 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:00:08,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:00:08,482 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:00:08,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@61d5fc64)
2020-08-23 16:00:08,484 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:00:08,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:00:08,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@30fc1798)
2020-08-23 16:00:08,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:00:08,486 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:00:08,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:00:08,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5fc917f4)
2020-08-23 16:00:08,492 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:00:08,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:00:08,494 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:00:08,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:00:08,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@36df378c)
2020-08-23 16:00:08,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:00:08,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@61966248)
2020-08-23 16:00:08,514 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:00:08,516 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:00:08,522 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:00:08,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@70d670e9)
2020-08-23 16:05:29,678 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:29,679 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:05:29,679 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:29,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:05:29,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:05:29,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@792b93dd)
2020-08-23 16:05:29,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:05:29,684 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:29,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@fb17735)
2020-08-23 16:05:29,687 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:29,688 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:05:29,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:05:29,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:05:29,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:05:29,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6481b692)
2020-08-23 16:05:29,695 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:29,696 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:29,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@78771f4)
2020-08-23 16:05:29,698 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:29,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:29,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:29,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:29,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@31e66f08)
2020-08-23 16:05:29,705 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:05:29,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@67edac)
2020-08-23 16:05:29,708 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:05:29,709 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:29,706 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:29,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:05:29,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:05:29,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@157c0643)
2020-08-23 16:05:29,716 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:29,717 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:29,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@417cd786)
2020-08-23 16:05:29,719 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:29,720 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:29,723 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:29,725 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:29,725 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@306cda4a)
2020-08-23 16:05:29,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@45f01843)
2020-08-23 16:05:29,730 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:05:29,729 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:05:29,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:29,733 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:29,737 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:05:29,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:05:29,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5930cff3)
2020-08-23 16:05:29,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7944c9d8)
2020-08-23 16:05:50,124 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:50,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:05:50,131 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:50,132 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:05:50,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:05:50,139 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3f54c62d)
2020-08-23 16:05:50,142 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:05:50,148 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:50,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@13e58cc8)
2020-08-23 16:05:50,154 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:05:50,155 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:05:50,149 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:05:50,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:05:50,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@3736cb47)
2020-08-23 16:05:50,160 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:50,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:05:50,166 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@15d7649b)
2020-08-23 16:05:50,172 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:50,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:50,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:50,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:50,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4fb697f7)
2020-08-23 16:05:50,197 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:05:50,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:50,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:50,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@32431ad0)
2020-08-23 16:05:50,202 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:05:50,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:50,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:05:50,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@56f48f70)
2020-08-23 16:05:50,212 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:50,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:50,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:05:50,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@dff539c)
2020-08-23 16:05:50,224 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:05:50,226 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:05:50,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:50,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4f085e2d)
2020-08-23 16:05:50,230 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:05:50,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:50,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:05:50,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@27a87309)
2020-08-23 16:05:50,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:05:50,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e65c878)
2020-08-23 16:05:50,237 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:05:50,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:05:50,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:05:50,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@9f538db)
2020-08-23 16:06:45,212 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:06:45,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:06:45,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:06:45,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@74395ba)
2020-08-23 16:06:45,222 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:06:45,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:06:45,230 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:06:45,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:06:45,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:06:45,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@72c97c21)
2020-08-23 16:06:45,233 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:06:45,234 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:06:45,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:06:45,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:06:45,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5e5e2096)
2020-08-23 16:06:45,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1f4c69ae)
2020-08-23 16:06:45,238 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:06:45,239 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:06:45,239 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:06:45,240 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 16:06:45,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 16:06:45,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:06:45,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@630cd294)
2020-08-23 16:06:45,245 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:06:45,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@ecebc12)
2020-08-23 16:06:45,249 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:06:45,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:06:45,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:06:45,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:06:45,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:06:45,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1f71d642)
2020-08-23 16:06:45,257 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@41629910)
2020-08-23 16:06:45,262 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:06:45,263 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 16:06:45,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:06:45,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:06:45,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 16:06:45,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f0f8ed)
2020-08-23 16:06:45,270 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 16:06:45,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:06:45,273 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 16:06:45,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@50538e18)
2020-08-23 16:06:45,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 16:06:45,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2d0522b5)
2020-08-23 16:06:45,278 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 16:06:45,279 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 16:06:45,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 16:06:45,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@56d0252b)
2020-08-23 16:17:53,934 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 54628 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 16:17:53,953 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 16:17:53,953 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 16:17:56,827 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 16:17:56,908 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 16:17:56,939 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 16:17:56,941 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 16:17:56,941 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 16:17:56,942 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 16:17:56,942 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 16:17:56,944 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 16:17:56,945 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 16:17:56,945 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 16:17:56,946 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 16:17:56,947 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 16:17:56,947 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 16:17:56,948 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 16:17:56,949 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 16:17:56,950 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 16:17:56,950 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 16:17:57,162 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 16:17:57,164 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 16:17:57,175 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 266ms. Found 15 MongoDB repository interfaces.
2020-08-23 16:18:02,162 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:18:02,164 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:18:02,752 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:18:02,753 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:18:02,917 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 16:18:02,938 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 16:18:02,939 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 16:18:02,940 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 16:18:02,941 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 16:18:02,943 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 16:18:02,944 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 16:18:02,945 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 16:18:02,946 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 16:18:02,951 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 16:18:02,953 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 16:18:02,955 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 16:18:02,957 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 16:18:02,958 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 16:18:02,959 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 16:18:02,960 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 16:18:02,962 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 16:18:02,963 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 16:18:02,965 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 16:18:02,967 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 16:18:02,967 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 16:18:03,838 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 16:18:04,091 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 16:18:04,143 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 16:18:04,193 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 16:18:04,229 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 16:18:04,263 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 16:18:04,279 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 16:18:04,323 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 16:18:04,513 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 16:18:04,534 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 16:18:04,555 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 16:18:04,568 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 16:18:04,582 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 16:18:04,593 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 16:18:04,606 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 16:18:04,616 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 16:18:04,638 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 16:18:04,654 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 16:18:04,678 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 16:18:04,687 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 16:18:04,709 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 16:18:04,721 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 16:18:04,735 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 16:18:04,744 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 16:18:04,773 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 16:18:04,783 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 16:18:04,802 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 16:18:04,813 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 16:18:05,070 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 16:18:05,076 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 16:18:05,076 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 16:18:05,077 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 16:18:05,363 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 16:18:05,374 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 16:18:07,581 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 16:18:07,627 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 16:18:07,636 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 16:18:08,009 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 16.044 seconds (JVM running for 17.591)
2020-08-23 16:19:10,262 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 54628 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 16:19:10,262 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 16:19:10,263 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 16:19:11,398 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 16:19:11,399 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 16:19:11,426 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 16:19:11,427 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 16:19:11,427 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 16:19:11,428 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 16:19:11,438 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 16:19:11,439 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 16:19:11,440 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 16:19:11,440 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 16:19:11,441 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 16:19:11,441 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 16:19:11,442 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 16:19:11,442 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 16:19:11,443 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 16:19:11,443 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 16:19:11,444 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 16:19:11,499 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 16:19:11,501 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 16:19:11,518 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 118ms. Found 15 MongoDB repository interfaces.
2020-08-23 16:19:12,113 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:19:12,115 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:19:12,265 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:19:12,267 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:19:12,274 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 16:19:12,276 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 16:19:12,277 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 16:19:12,279 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 16:19:12,280 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 16:19:12,281 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 16:19:12,282 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 16:19:12,283 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 16:19:12,284 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 16:19:12,285 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 16:19:12,286 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 16:19:12,287 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 16:19:12,288 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 16:19:12,290 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 16:19:12,291 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 16:19:12,292 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 16:19:12,294 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 16:19:12,295 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 16:19:12,296 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 16:19:12,296 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 16:19:12,297 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 16:19:12,482 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 16:19:12,502 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 16:19:12,519 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 16:19:12,542 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 16:19:12,558 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 16:19:12,572 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 16:19:12,581 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 16:19:12,601 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 16:19:12,672 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 16:19:12,705 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 16:19:12,722 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 16:19:12,743 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 16:19:12,758 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 16:19:12,770 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 16:19:12,782 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 16:19:12,790 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 16:19:12,811 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 16:19:12,822 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 16:19:12,850 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 16:19:12,861 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 16:19:12,877 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 16:19:12,893 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 16:19:12,911 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 16:19:12,920 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 16:19:12,980 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 16:19:12,992 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 16:19:13,011 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 16:19:13,019 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 16:19:13,135 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 16:19:13,139 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 16:19:13,139 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 16:19:13,139 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 16:19:13,188 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 16:19:13,196 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 16:19:13,751 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 16:19:13,766 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 16:19:13,771 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 16:19:13,959 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.816 seconds (JVM running for 83.542)
2020-08-23 16:52:57,794 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 56232 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 16:52:57,816 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 16:52:57,817 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 16:53:00,744 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 16:53:00,781 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 16:53:00,840 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 16:53:00,841 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 16:53:00,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 16:53:00,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 16:53:00,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 16:53:00,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 16:53:00,843 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 16:53:00,843 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 16:53:00,844 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 16:53:00,844 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 16:53:00,845 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 16:53:00,845 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 16:53:00,846 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 16:53:00,847 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 16:53:00,847 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 16:53:01,078 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 16:53:01,080 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 16:53:01,096 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 313ms. Found 15 MongoDB repository interfaces.
2020-08-23 16:53:04,844 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:53:04,846 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:53:05,346 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:53:05,348 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 16:53:05,487 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 16:53:05,488 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 16:53:05,510 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 16:53:05,513 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 16:53:05,515 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 16:53:05,519 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 16:53:05,521 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 16:53:05,535 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 16:53:05,542 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 16:53:05,545 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 16:53:05,547 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 16:53:05,549 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 16:53:05,552 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 16:53:05,556 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 16:53:05,557 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 16:53:05,558 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 16:53:05,560 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 16:53:05,564 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 16:53:05,567 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 16:53:05,571 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 16:53:05,573 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 16:53:06,554 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 16:53:06,754 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 16:53:06,785 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 16:53:06,816 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 16:53:06,834 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 16:53:06,850 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 16:53:06,865 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 16:53:06,896 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 16:53:07,060 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 16:53:07,081 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 16:53:07,103 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 16:53:07,121 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 16:53:07,137 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 16:53:07,148 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 16:53:07,159 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 16:53:07,168 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 16:53:07,188 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 16:53:07,198 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 16:53:07,220 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 16:53:07,228 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 16:53:07,247 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 16:53:07,259 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 16:53:07,270 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 16:53:07,284 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 16:53:07,319 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 16:53:07,328 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 16:53:07,340 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 16:53:07,346 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 16:53:07,468 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 16:53:07,472 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 16:53:07,472 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 16:53:07,473 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 16:53:07,732 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 16:53:07,740 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 16:53:09,955 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 16:53:09,984 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 16:53:09,988 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 16:53:10,337 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 13.743 seconds (JVM running for 15.041)
2020-08-23 16:54:08,020 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:54:08,425 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:54:10,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:54:12,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2445f83d)
2020-08-23 16:55:24,365 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:55:24,392 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:55:24,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:55:24,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@47e5125c)
2020-08-23 16:56:05,223 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 16:56:05,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 16:56:05,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:56:05,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 19:47:41 IST 2020, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, totalAmount=520.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@38f6e027)
2020-08-23 16:56:10,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@38f6e027, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 16:56:10,949 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, deliveredBy, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 16:56:11,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@38f6e027, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:03:03,139 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:03:03,160 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:03:03,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:03:03,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@eef47b8)
2020-08-23 17:03:25,065 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:03:25,085 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:03:25,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:03:25,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@461d76e1)
2020-08-23 17:03:43,394 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:03:43,422 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:03:43,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:03:43,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@24e44b5b)
2020-08-23 17:05:51,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@24e44b5b, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:05:51,141 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, deliveredBy, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 17:05:51,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@24e44b5b, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:11:11,667 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 56232 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:11:11,668 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:11:11,668 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:11:12,459 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 17:11:12,461 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 17:11:12,474 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 17:11:12,478 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 17:11:12,479 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 17:11:12,484 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 17:11:12,485 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 17:11:12,487 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 17:11:12,487 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 17:11:12,488 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 17:11:12,488 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 17:11:12,489 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 17:11:12,489 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 17:11:12,490 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 17:11:12,491 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 17:11:12,491 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 17:11:12,492 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 17:11:12,544 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 17:11:12,544 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 17:11:12,566 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 104ms. Found 15 MongoDB repository interfaces.
2020-08-23 17:11:13,083 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:11:13,084 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:11:13,272 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:11:13,279 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:11:13,294 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 17:11:13,294 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 17:11:13,295 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 17:11:13,298 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 17:11:13,299 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 17:11:13,300 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 17:11:13,301 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 17:11:13,302 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 17:11:13,303 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 17:11:13,304 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 17:11:13,305 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 17:11:13,306 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 17:11:13,307 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 17:11:13,308 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 17:11:13,310 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 17:11:13,312 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 17:11:13,314 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 17:11:13,315 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 17:11:13,316 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 17:11:13,317 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 17:11:13,319 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 17:11:13,712 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 17:11:13,732 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 17:11:13,752 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 17:11:13,777 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 17:11:13,791 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 17:11:13,815 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 17:11:13,823 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 17:11:13,852 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 17:11:13,931 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 17:11:13,944 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 17:11:13,960 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 17:11:13,995 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 17:11:14,018 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 17:11:14,030 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 17:11:14,045 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 17:11:14,059 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 17:11:14,106 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 17:11:14,124 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 17:11:14,159 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 17:11:14,167 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 17:11:14,197 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 17:11:14,218 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 17:11:14,251 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 17:11:14,260 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 17:11:14,285 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 17:11:14,295 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 17:11:14,325 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 17:11:14,333 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 17:11:14,422 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 17:11:14,424 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:11:14,424 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 17:11:14,425 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:11:14,472 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 17:11:14,479 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 17:11:14,914 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 17:11:14,940 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 17:11:14,954 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 17:11:15,189 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.609 seconds (JVM running for 1099.893)
2020-08-23 17:11:29,984 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:11:30,037 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:11:30,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:11:32,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@67c481bc)
2020-08-23 17:12:38,741 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:12:38,744 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:12:38,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:12:38,751 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2fa3f60f)
2020-08-23 17:12:38,758 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:12:38,762 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:12:38,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:12:38,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@347acc58)
2020-08-23 17:12:38,799 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:12:38,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:12:38,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:12:38,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@49b66dbb)
2020-08-23 17:12:38,827 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:12:38,829 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:12:38,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:12:38,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@47718afd)
2020-08-23 17:12:38,844 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:12:38,845 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:12:38,848 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:12:38,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:12:38,855 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:12:38,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:12:38,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@e4bfbf1)
2020-08-23 17:12:38,864 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:12:38,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:12:38,868 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@434e06cb)
2020-08-23 17:12:38,869 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:12:38,870 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:12:38,872 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:12:38,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:12:38,882 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@696e4a27)
2020-08-23 17:12:38,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@64c80c6)
2020-08-23 17:12:38,885 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:12:38,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:12:38,889 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:12:38,890 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:12:38,891 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:12:38,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7cedee01)
2020-08-23 17:12:38,895 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:12:38,896 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:12:38,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:12:38,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6d59841f)
2020-08-23 17:12:38,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:12:38,905 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:12:38,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3700a503)
2020-08-23 17:12:38,908 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:12:38,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:12:38,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@676ed7b1)
2020-08-23 17:13:55,954 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:13:55,973 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:13:56,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:13:56,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@179675c7)
2020-08-23 17:17:23,397 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 56232 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:17:23,398 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:17:23,399 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:17:24,248 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 17:17:24,250 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 17:17:24,261 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 17:17:24,261 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 17:17:24,262 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 17:17:24,262 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 17:17:24,263 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 17:17:24,263 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 17:17:24,263 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 17:17:24,264 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 17:17:24,264 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 17:17:24,264 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 17:17:24,265 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 17:17:24,265 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 17:17:24,265 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 17:17:24,266 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 17:17:24,266 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 17:17:24,311 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 17:17:24,311 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 17:17:24,318 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 67ms. Found 15 MongoDB repository interfaces.
2020-08-23 17:17:24,915 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:17:24,918 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:17:25,157 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:17:25,158 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:17:25,170 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 17:17:25,171 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 17:17:25,172 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 17:17:25,173 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 17:17:25,174 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 17:17:25,176 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 17:17:25,177 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 17:17:25,179 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 17:17:25,179 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 17:17:25,181 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 17:17:25,183 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 17:17:25,184 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 17:17:25,185 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 17:17:25,185 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 17:17:25,186 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 17:17:25,187 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 17:17:25,188 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 17:17:25,189 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 17:17:25,190 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 17:17:25,191 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 17:17:25,193 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 17:17:25,360 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 17:17:25,388 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 17:17:25,430 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 17:17:25,448 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 17:17:25,468 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 17:17:25,489 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 17:17:25,505 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 17:17:25,519 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 17:17:25,617 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 17:17:25,636 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 17:17:25,654 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 17:17:25,667 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 17:17:25,682 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 17:17:25,693 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 17:17:25,709 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 17:17:25,719 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 17:17:25,733 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 17:17:25,742 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 17:17:25,757 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 17:17:25,766 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 17:17:25,782 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 17:17:25,791 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 17:17:25,808 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 17:17:25,816 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 17:17:25,834 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 17:17:25,841 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 17:17:25,851 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 17:17:25,857 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 17:17:25,983 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 17:17:25,986 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:17:25,987 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 17:17:25,987 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:17:26,046 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 17:17:26,053 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 17:17:26,383 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 17:17:26,393 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 17:17:26,397 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 17:17:26,535 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.274 seconds (JVM running for 1471.24)
2020-08-23 17:17:37,006 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:17:37,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:17:37,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:17:39,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@59225301)
2020-08-23 17:22:34,289 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 56232 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:22:34,290 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:22:34,293 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:22:35,032 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 17:22:35,033 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 17:22:35,046 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 17:22:35,047 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 17:22:35,047 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 17:22:35,048 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 17:22:35,048 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 17:22:35,048 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 17:22:35,049 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 17:22:35,049 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 17:22:35,049 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 17:22:35,050 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 17:22:35,050 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 17:22:35,050 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 17:22:35,051 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 17:22:35,051 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 17:22:35,051 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 17:22:35,094 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 17:22:35,096 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 17:22:35,109 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 74ms. Found 15 MongoDB repository interfaces.
2020-08-23 17:22:35,701 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:22:35,702 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:22:35,880 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:22:35,881 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:22:35,887 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 17:22:35,888 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 17:22:35,889 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 17:22:35,891 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 17:22:35,892 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 17:22:35,893 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 17:22:35,893 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 17:22:35,895 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 17:22:35,897 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 17:22:35,899 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 17:22:35,901 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 17:22:35,902 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 17:22:35,903 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 17:22:35,904 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 17:22:35,905 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 17:22:35,906 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 17:22:35,908 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 17:22:35,909 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 17:22:35,909 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 17:22:35,911 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 17:22:35,913 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 17:22:36,057 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 17:22:36,074 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 17:22:36,093 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 17:22:36,105 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 17:22:36,117 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 17:22:36,132 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 17:22:36,137 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 17:22:36,149 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 17:22:36,184 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 17:22:36,193 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 17:22:36,206 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 17:22:36,212 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 17:22:36,219 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 17:22:36,227 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 17:22:36,235 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 17:22:36,242 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 17:22:36,254 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 17:22:36,263 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 17:22:36,276 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 17:22:36,283 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 17:22:36,298 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 17:22:36,307 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 17:22:36,319 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 17:22:36,324 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 17:22:36,349 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 17:22:36,357 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 17:22:36,369 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 17:22:36,376 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 17:22:36,450 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 17:22:36,452 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:22:36,452 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 17:22:36,452 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:22:36,483 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 17:22:36,489 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 17:22:36,823 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 17:22:36,837 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 17:22:36,840 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 17:22:36,975 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 2.763 seconds (JVM running for 1781.679)
2020-08-23 17:22:44,240 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:22:44,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:22:44,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:22:46,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7bfe656c)
2020-08-23 17:30:25,781 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 56232 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:30:25,782 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:30:25,783 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:30:29,265 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 58866 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:30:29,274 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:30:29,275 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:30:31,860 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 17:30:31,898 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 17:30:31,945 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 17:30:31,946 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 17:30:31,948 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 17:30:31,949 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 17:30:31,949 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 17:30:31,950 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 17:30:31,950 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 17:30:31,951 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 17:30:31,952 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 17:30:31,953 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 17:30:31,955 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 17:30:31,956 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 17:30:31,958 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 17:30:31,961 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 17:30:31,962 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 17:30:32,199 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 17:30:32,201 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 17:30:32,229 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 329ms. Found 15 MongoDB repository interfaces.
2020-08-23 17:30:35,720 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:30:35,722 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:30:36,074 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:30:36,076 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:30:36,185 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 17:30:36,204 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 17:30:36,205 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 17:30:36,207 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 17:30:36,208 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 17:30:36,210 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 17:30:36,211 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 17:30:36,213 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 17:30:36,218 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 17:30:36,220 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 17:30:36,222 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 17:30:36,224 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 17:30:36,226 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 17:30:36,229 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 17:30:36,230 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 17:30:36,232 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 17:30:36,233 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 17:30:36,233 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 17:30:36,235 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 17:30:36,237 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 17:30:36,240 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 17:30:37,203 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 17:30:37,414 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 17:30:37,448 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 17:30:37,475 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 17:30:37,495 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 17:30:37,516 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 17:30:37,530 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 17:30:37,561 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 17:30:37,784 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 17:30:37,806 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 17:30:37,827 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 17:30:37,843 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 17:30:37,859 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 17:30:37,874 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 17:30:37,889 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 17:30:37,901 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 17:30:37,923 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 17:30:37,936 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 17:30:37,961 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 17:30:37,969 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 17:30:38,001 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 17:30:38,029 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 17:30:38,053 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 17:30:38,068 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 17:30:38,103 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 17:30:38,115 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 17:30:38,132 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 17:30:38,139 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 17:30:38,251 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 17:30:38,254 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:30:38,255 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 17:30:38,255 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:30:38,485 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 17:30:38,491 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 17:30:40,368 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 17:30:40,406 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 17:30:40,411 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 17:30:40,821 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 12.847 seconds (JVM running for 14.011)
2020-08-23 17:31:05,464 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:31:05,892 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:31:08,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:31:10,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6a05c43b)
2020-08-23 17:31:36,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@6a05c43b, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:31:36,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, deliveredBy, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 17:31:36,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@6a05c43b, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:32:02,195 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:32:02,215 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:32:02,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:32:02,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@3d581a5b)
2020-08-23 17:32:38,776 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 58866 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:32:38,779 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:32:38,779 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:32:39,649 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 17:32:39,650 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 17:32:39,662 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 17:32:39,664 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 17:32:39,665 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 17:32:39,666 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 17:32:39,667 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 17:32:39,668 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 17:32:39,669 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 17:32:39,669 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 17:32:39,670 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 17:32:39,671 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 17:32:39,672 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 17:32:39,672 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 17:32:39,673 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 17:32:39,675 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 17:32:39,676 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 17:32:39,732 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 17:32:39,733 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 17:32:39,746 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 95ms. Found 15 MongoDB repository interfaces.
2020-08-23 17:32:40,279 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:32:40,283 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:32:40,435 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:32:40,437 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:32:40,446 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 17:32:40,447 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 17:32:40,449 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 17:32:40,451 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 17:32:40,452 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 17:32:40,453 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 17:32:40,455 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 17:32:40,455 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 17:32:40,457 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 17:32:40,458 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 17:32:40,459 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 17:32:40,460 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 17:32:40,462 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 17:32:40,463 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 17:32:40,464 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 17:32:40,466 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 17:32:40,466 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 17:32:40,468 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 17:32:40,470 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 17:32:40,471 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 17:32:40,473 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 17:32:40,616 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 17:32:40,630 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 17:32:40,648 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 17:32:40,663 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 17:32:40,676 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 17:32:40,687 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 17:32:40,694 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 17:32:40,707 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 17:32:40,756 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 17:32:40,765 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 17:32:40,779 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 17:32:40,790 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 17:32:40,801 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 17:32:40,811 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 17:32:40,823 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 17:32:40,830 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 17:32:40,847 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 17:32:40,863 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 17:32:40,881 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 17:32:40,894 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 17:32:40,916 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 17:32:40,928 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 17:32:40,941 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 17:32:40,953 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 17:32:40,987 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 17:32:40,995 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 17:32:41,028 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 17:32:41,053 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 17:32:41,154 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 17:32:41,157 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:32:41,157 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 17:32:41,157 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:32:41,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 17:32:41,212 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 17:32:41,661 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 17:32:41,678 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 17:32:41,681 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 17:32:41,793 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.124 seconds (JVM running for 134.983)
2020-08-23 17:33:07,820 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:07,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:07,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:07,855 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4e061e60)
2020-08-23 17:33:07,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@4e061e60, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:07,861 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, deliveredBy, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 17:33:07,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@4e061e60, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:08,138 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:08,139 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:08,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:08,144 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5fb386af)
2020-08-23 17:33:08,155 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:08,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:33:08,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:33:08,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@58b84230)
2020-08-23 17:33:08,206 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:08,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:08,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:08,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2e22e40b)
2020-08-23 17:33:08,225 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:33:08,227 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:08,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:33:08,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@a0f599e)
2020-08-23 17:33:08,260 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:08,267 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:08,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:08,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@528f3c80)
2020-08-23 17:33:08,273 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:33:08,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:08,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:33:08,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b43a63c)
2020-08-23 17:33:15,086 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:15,088 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:15,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:15,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2b59c574)
2020-08-23 17:33:15,099 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:15,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:33:15,101 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:15,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:15,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:33:15,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@259e2e6f)
2020-08-23 17:33:15,113 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:15,115 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:15,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:15,117 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@148a1504)
2020-08-23 17:33:15,121 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:15,124 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:33:15,125 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:15,125 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@21a1ae04)
2020-08-23 17:33:15,127 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:33:15,129 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:15,139 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:33:15,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@64a32454)
2020-08-23 17:33:15,141 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:15,142 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:33:15,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@1a4df9e5)
2020-08-23 17:33:15,143 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:15,144 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:15,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:15,155 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:15,155 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1b43fd1)
2020-08-23 17:33:15,157 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:33:15,157 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:15,158 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:15,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1e727e74)
2020-08-23 17:33:15,168 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:33:15,170 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:15,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:33:15,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b70f3de)
2020-08-23 17:33:15,174 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:15,175 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:15,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:33:15,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@558d84de)
2020-08-23 17:33:15,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:15,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1f96ef81)
2020-08-23 17:33:15,180 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:33:15,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:15,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:33:15,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a61af47)
2020-08-23 17:33:22,906 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:22,907 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:22,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:22,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@10146c55)
2020-08-23 17:33:22,950 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.UserOrderServiceImpl.updateUserOrderSet(UserOrderServiceImpl.java:343)
	at com.initializers.services.apiservices.controller.AdminController.updateItemSubCategory(AdminController.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-08-23 17:33:46,456 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:46,456 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:46,458 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:46,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:46,458 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:46,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:46,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@78ecf9d8)
2020-08-23 17:33:46,481 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:46,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1666faf)
2020-08-23 17:33:46,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:33:46,483 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:46,485 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:33:46,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:33:46,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:33:46,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7cd3621d)
2020-08-23 17:33:46,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@fa181f3)
2020-08-23 17:33:46,489 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:46,490 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:46,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:46,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:46,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:46,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@b9e04df)
2020-08-23 17:33:46,498 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:33:46,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:46,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:46,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@179fe5d5)
2020-08-23 17:33:46,504 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:33:46,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:33:46,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e9c8bc8)
2020-08-23 17:33:46,507 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:46,507 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:46,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:33:46,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@59fe0cac)
2020-08-23 17:33:46,519 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:46,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:46,521 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:33:46,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7c358ea3)
2020-08-23 17:33:46,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:33:46,525 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:33:46,526 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:46,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:33:46,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@3127fb0b)
2020-08-23 17:33:46,529 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:33:46,531 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:33:46,538 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:33:46,539 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f9826cf)
2020-08-23 17:33:46,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:33:46,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e7c6d3c)
2020-08-23 17:33:53,052 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:33:53,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:33:53,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:33:53,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@57fc5daa)
2020-08-23 17:33:53,061 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.UserOrderServiceImpl.updateUserOrderSet(UserOrderServiceImpl.java:343)
	at com.initializers.services.apiservices.controller.AdminController.updateItemSubCategory(AdminController.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-08-23 17:34:31,839 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:34:31,840 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:34:31,845 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:34:31,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@1ee55435)
2020-08-23 17:35:26,982 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 58866 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:35:26,983 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:35:26,984 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:35:28,083 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 17:35:28,085 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 17:35:28,097 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 17:35:28,097 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 17:35:28,098 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 17:35:28,098 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 17:35:28,099 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 17:35:28,099 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 17:35:28,099 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 17:35:28,099 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 17:35:28,100 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 17:35:28,100 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 17:35:28,100 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 17:35:28,101 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 17:35:28,101 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 17:35:28,101 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 17:35:28,102 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 17:35:28,143 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 17:35:28,143 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 17:35:28,158 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 71ms. Found 15 MongoDB repository interfaces.
2020-08-23 17:35:28,614 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:35:28,615 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:35:28,747 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:35:28,749 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:35:28,756 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 17:35:28,756 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 17:35:28,758 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 17:35:28,758 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 17:35:28,759 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 17:35:28,761 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 17:35:28,761 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 17:35:28,762 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 17:35:28,763 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 17:35:28,765 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 17:35:28,765 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 17:35:28,766 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 17:35:28,768 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 17:35:28,769 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 17:35:28,770 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 17:35:28,771 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 17:35:28,772 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 17:35:28,773 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 17:35:28,774 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 17:35:28,775 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 17:35:28,777 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 17:35:28,885 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 17:35:28,897 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 17:35:28,915 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 17:35:28,931 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 17:35:28,953 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 17:35:28,967 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 17:35:28,978 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 17:35:28,995 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 17:35:29,105 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 17:35:29,119 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 17:35:29,140 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 17:35:29,171 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 17:35:29,189 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 17:35:29,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 17:35:29,215 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 17:35:29,223 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 17:35:29,240 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 17:35:29,252 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 17:35:29,273 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 17:35:29,280 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 17:35:29,299 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 17:35:29,309 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 17:35:29,318 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 17:35:29,324 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 17:35:29,344 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 17:35:29,351 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 17:35:29,363 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 17:35:29,369 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 17:35:29,459 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 17:35:29,461 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:35:29,461 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 17:35:29,461 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:35:29,503 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 17:35:29,510 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 17:35:29,857 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 17:35:29,885 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 17:35:29,888 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 17:35:30,021 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.131 seconds (JVM running for 303.21)
2020-08-23 17:35:32,317 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:35:32,332 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:35:32,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:35:32,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@20e78844)
2020-08-23 17:35:45,718 ERROR org.springframework.web.servlet.HandlerExecutionChain [http-nio-8080-exec-10] HandlerInterceptor.afterCompletion threw exception
java.lang.NullPointerException: null
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.stopLongTaskTimers(LongTaskTimingHandlerInterceptor.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.afterCompletion(LongTaskTimingHandlerInterceptor.java:79)
	at org.springframework.web.servlet.HandlerExecutionChain.triggerAfterCompletion(HandlerExecutionChain.java:179)
	at org.springframework.web.servlet.DispatcherServlet.triggerAfterCompletion(DispatcherServlet.java:1427)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-08-23 17:35:45,720 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-10] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: null
	at java.util.Objects.requireNonNull(Objects.java:203)
	at io.micrometer.core.instrument.ImmutableTag.<init>(ImmutableTag.java:35)
	at io.micrometer.core.instrument.Tag.of(Tag.java:29)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcTags.method(WebMvcTags.java:74)
	at org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider.getTags(DefaultWebMvcTagsProvider.java:46)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.getTimer(WebMvcMetricsFilter.java:185)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.record(WebMvcMetricsFilter.java:145)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-08-23 17:35:45,732 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-10] Error processing request
java.lang.NullPointerException: null
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:412)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-08-23 17:36:12,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@20e78844, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:36:12,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 17:36:12,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@20e78844, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:36:12,876 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:36:12,877 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:36:12,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:36:12,881 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@732d4387)
2020-08-23 17:36:12,884 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:36:12,885 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:36:12,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:36:12,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@362fc386)
2020-08-23 17:36:12,904 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:36:12,906 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:36:12,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:36:12,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@66edc724)
2020-08-23 17:36:12,917 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:36:12,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:36:12,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:36:12,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@753b565)
2020-08-23 17:36:12,941 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:36:12,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:36:12,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:36:12,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1e7bef73)
2020-08-23 17:36:12,953 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:36:12,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:36:12,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:36:12,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@56003cc9)
2020-08-23 17:36:17,606 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:36:17,608 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:36:17,621 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:36:17,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:36:17,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:36:17,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@26a3b156)
2020-08-23 17:36:17,652 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:36:17,655 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:36:17,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:36:17,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:36:17,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@28645bf2)
2020-08-23 17:36:17,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@52fab8c4)
2020-08-23 17:36:17,660 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:36:17,661 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:36:17,664 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:36:17,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:36:17,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:36:17,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:36:17,668 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2c5bda26)
2020-08-23 17:36:17,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@5c3d5ceb)
2020-08-23 17:36:17,670 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:36:17,672 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:36:17,674 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:36:17,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:36:17,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5802d3b4)
2020-08-23 17:36:17,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:36:17,682 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:36:17,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:36:17,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:36:17,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:36:17,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d0056d0)
2020-08-23 17:36:17,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@695951c9)
2020-08-23 17:36:17,688 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:36:17,688 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:36:17,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:36:17,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:36:17,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:36:17,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1a3bf12c)
2020-08-23 17:36:17,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:36:17,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@52cb74b5)
2020-08-23 17:36:17,697 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:36:17,697 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:36:17,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:36:17,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:36:17,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:36:17,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@587a1ed5)
2020-08-23 17:36:17,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:36:17,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c572c84)
2020-08-23 17:38:19,062 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 58866 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 17:38:19,063 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 17:38:19,063 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 17:38:19,678 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 17:38:19,681 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 17:38:19,691 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 17:38:19,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 17:38:19,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 17:38:19,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 17:38:19,693 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 17:38:19,693 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 17:38:19,693 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 17:38:19,693 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 17:38:19,694 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 17:38:19,694 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 17:38:19,694 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 17:38:19,694 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 17:38:19,695 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 17:38:19,695 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 17:38:19,695 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 17:38:19,730 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 17:38:19,731 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 17:38:19,741 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 59ms. Found 15 MongoDB repository interfaces.
2020-08-23 17:38:20,109 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:38:20,110 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:38:20,270 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:38:20,271 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 17:38:20,276 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 17:38:20,278 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 17:38:20,278 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 17:38:20,279 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 17:38:20,279 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 17:38:20,280 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 17:38:20,281 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 17:38:20,281 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 17:38:20,282 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 17:38:20,283 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 17:38:20,284 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 17:38:20,284 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 17:38:20,285 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 17:38:20,286 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 17:38:20,287 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 17:38:20,288 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 17:38:20,288 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 17:38:20,289 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 17:38:20,290 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 17:38:20,290 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 17:38:20,291 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 17:38:20,402 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 17:38:20,414 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 17:38:20,425 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 17:38:20,433 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 17:38:20,441 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 17:38:20,453 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 17:38:20,458 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 17:38:20,470 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 17:38:20,519 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 17:38:20,524 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 17:38:20,534 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 17:38:20,542 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 17:38:20,549 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 17:38:20,559 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 17:38:20,568 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 17:38:20,578 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 17:38:20,589 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 17:38:20,595 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 17:38:20,604 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 17:38:20,608 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 17:38:20,618 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 17:38:20,625 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 17:38:20,632 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 17:38:20,638 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 17:38:20,656 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 17:38:20,661 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 17:38:20,669 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 17:38:20,673 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 17:38:20,758 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 17:38:20,760 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:38:20,761 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 17:38:20,761 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 17:38:20,802 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 17:38:20,806 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 17:38:21,071 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 17:38:21,079 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 17:38:21,082 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 17:38:21,168 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 2.173 seconds (JVM running for 474.358)
2020-08-23 17:38:38,978 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:38:38,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:38:38,987 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:38:39,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@23bba7b0)
2020-08-23 17:39:30,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@23bba7b0, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:39:30,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, deliveredBy, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 17:39:31,027 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@23bba7b0, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:39:32,445 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:39:32,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:39:32,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:39:32,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6000ae67)
2020-08-23 17:39:32,453 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:39:32,454 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:39:32,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:39:32,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@25022c03)
2020-08-23 17:39:32,469 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:39:32,470 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:39:32,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:39:32,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@9fe85c9)
2020-08-23 17:39:32,483 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:39:32,485 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:39:32,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:39:32,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@146d6c28)
2020-08-23 17:39:32,497 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:39:32,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:39:32,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:39:32,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@717b9b54)
2020-08-23 17:39:32,503 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:39:32,504 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:39:32,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:39:32,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@452dd34c)
2020-08-23 17:40:17,441 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:40:17,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:40:17,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:40:17,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@48a1d4e7)
2020-08-23 17:40:30,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@48a1d4e7, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:40:30,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, deliveredBy, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 17:40:30,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@48a1d4e7, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:40:45,413 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:40:45,415 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:40:45,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:40:45,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7f4440fc)
2020-08-23 17:40:45,428 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:40:45,429 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:40:45,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:40:45,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:40:45,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:40:45,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7183a164)
2020-08-23 17:40:45,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:40:45,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@400a4f3e)
2020-08-23 17:40:45,445 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:40:45,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:40:45,456 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:40:45,457 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:40:45,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:40:45,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@75bc2b8c)
2020-08-23 17:40:45,464 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:40:45,465 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:40:45,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:40:45,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@30beab5f)
2020-08-23 17:40:45,472 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:40:45,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:40:45,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:40:45,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@4ecda94f)
2020-08-23 17:40:45,478 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:40:45,479 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:40:45,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:40:45,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:40:45,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4af2244e)
2020-08-23 17:40:45,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6d204e14)
2020-08-23 17:40:45,487 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:40:45,488 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:40:45,489 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:40:45,489 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:40:45,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:40:45,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@ff0a374)
2020-08-23 17:40:45,496 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:40:45,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:40:45,501 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:40:45,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c45a55)
2020-08-23 17:40:45,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:40:45,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1d116e0b)
2020-08-23 17:40:45,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:40:45,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:40:45,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:40:45,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3eb52b37)
2020-08-23 17:41:00,439 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:41:00,440 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:41:00,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:41:00,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Sun Aug 23 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@41bc5422)
2020-08-23 17:41:52,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.UserOrderSet@41bc5422, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:41:52,610 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, orderList, addressId, status, orderAt, deliveredBy, totalAmount, deliveryCharge, coupenCode, coupenDiscount, _class]
2020-08-23 17:41:52,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.UserOrderSet@41bc5422, Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:41:53,310 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:41:53,311 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 17:41:53,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 17:41:53,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@71d9df8e)
2020-08-23 17:41:53,318 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 17:41:53,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-08-23 17:41:53,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-08-23 17:41:53,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@7f1e2fc5)
2020-08-23 17:41:53,324 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:41:53,325 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:41:53,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:41:53,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7b21b4fe)
2020-08-23 17:41:53,329 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-08-23 17:41:53,330 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:41:53,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-08-23 17:41:53,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e2325fe)
2020-08-23 17:41:53,335 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-23 17:41:53,336 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-23 17:41:53,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-08-23 17:41:53,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@1b9b81b)
2020-08-23 17:41:53,340 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-08-23 17:41:53,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-23 17:41:53,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-08-23 17:41:53,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@fd7dfee)
2020-08-23 18:00:40,040 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 18:00:40,041 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 18:00:40,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 18:00:40,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@36e466ed)
2020-08-23 18:20:27,977 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 61345 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 18:20:28,098 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 18:20:28,106 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 18:20:30,773 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 18:20:30,817 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 18:20:30,846 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 18:20:30,847 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 18:20:30,848 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 18:20:30,849 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 18:20:30,849 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 18:20:30,849 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 18:20:30,850 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 18:20:30,850 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 18:20:30,851 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 18:20:30,852 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 18:20:30,852 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 18:20:30,853 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 18:20:30,854 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 18:20:30,854 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 18:20:30,855 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 18:20:31,045 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 18:20:31,048 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 18:20:31,083 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 264ms. Found 15 MongoDB repository interfaces.
2020-08-23 18:20:34,474 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:20:34,476 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:20:34,793 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:20:34,794 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:20:34,891 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 18:20:34,907 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 18:20:34,909 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 18:20:34,910 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 18:20:34,911 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 18:20:34,913 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 18:20:34,914 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 18:20:34,915 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 18:20:34,916 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 18:20:34,921 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 18:20:34,922 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 18:20:34,922 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 18:20:34,923 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 18:20:34,924 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 18:20:34,925 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 18:20:34,927 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 18:20:34,929 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 18:20:34,930 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 18:20:34,932 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 18:20:34,933 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 18:20:34,934 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 18:20:35,650 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 18:20:35,824 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 18:20:35,845 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 18:20:35,868 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 18:20:35,885 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 18:20:35,905 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 18:20:35,916 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 18:20:35,937 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 18:20:36,134 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 18:20:36,154 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 18:20:36,174 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 18:20:36,188 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 18:20:36,202 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 18:20:36,214 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 18:20:36,227 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 18:20:36,236 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 18:20:36,256 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 18:20:36,268 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 18:20:36,293 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 18:20:36,303 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 18:20:36,326 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 18:20:36,338 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 18:20:36,354 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 18:20:36,363 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 18:20:36,392 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 18:20:36,401 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 18:20:36,420 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 18:20:36,430 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 18:20:36,554 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 18:20:36,557 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 18:20:36,558 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 18:20:36,558 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 18:20:36,766 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 18:20:36,775 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 18:20:38,770 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 18:20:38,808 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 18:20:38,813 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 18:20:39,113 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 12.466 seconds (JVM running for 13.717)
2020-08-23 18:22:07,586 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 18:22:07,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 18:22:07,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 18:22:07,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@2511e12c)
2020-08-23 18:22:26,050 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 61345 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 18:22:26,051 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 18:22:26,051 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 18:22:26,865 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 18:22:26,867 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 18:22:26,888 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 18:22:26,889 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 18:22:26,890 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 18:22:26,890 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 18:22:26,890 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 18:22:26,891 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 18:22:26,891 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 18:22:26,894 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 18:22:26,895 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 18:22:26,896 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 18:22:26,896 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 18:22:26,897 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 18:22:26,897 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 18:22:26,897 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 18:22:26,898 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 18:22:26,963 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 18:22:26,964 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 18:22:26,982 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 114ms. Found 15 MongoDB repository interfaces.
2020-08-23 18:22:27,488 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:22:27,489 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:22:27,681 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:22:27,682 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:22:27,691 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 18:22:27,692 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 18:22:27,694 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 18:22:27,695 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 18:22:27,696 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 18:22:27,697 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 18:22:27,698 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 18:22:27,700 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 18:22:27,700 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 18:22:27,702 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 18:22:27,704 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 18:22:27,705 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 18:22:27,706 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 18:22:27,707 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 18:22:27,708 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 18:22:27,709 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 18:22:27,711 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 18:22:27,711 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 18:22:27,714 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 18:22:27,715 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 18:22:27,716 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 18:22:27,900 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 18:22:27,911 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 18:22:27,930 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 18:22:27,942 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 18:22:27,959 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 18:22:27,976 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 18:22:28,004 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 18:22:28,028 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 18:22:28,101 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 18:22:28,117 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 18:22:28,140 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 18:22:28,153 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 18:22:28,179 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 18:22:28,195 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 18:22:28,211 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 18:22:28,225 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 18:22:28,255 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 18:22:28,270 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 18:22:28,296 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 18:22:28,305 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 18:22:28,331 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 18:22:28,343 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 18:22:28,355 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 18:22:28,363 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 18:22:28,423 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 18:22:28,436 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 18:22:28,459 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 18:22:28,468 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 18:22:28,586 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 18:22:28,590 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 18:22:28,592 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 18:22:28,595 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 18:22:28,655 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 18:22:28,664 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 18:22:29,203 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 18:22:29,217 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 18:22:29,220 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 18:22:29,373 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.398 seconds (JVM running for 123.977)
2020-08-23 18:23:03,458 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-23 18:23:03,468 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-08-23 18:23:03,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-08-23 18:23:03,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=false, delivered=false}}, orderAt=Sat Aug 22 19:47:41 IST 2020, deliveredBy=Mon Aug 24 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@df42d39)
2020-08-23 18:27:56,598 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 61345 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-23 18:27:56,599 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-23 18:27:56,600 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-23 18:27:57,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-23 18:27:57,449 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-23 18:27:57,487 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-23 18:27:57,488 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-23 18:27:57,488 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-23 18:27:57,489 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-23 18:27:57,490 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-23 18:27:57,490 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-23 18:27:57,491 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-23 18:27:57,491 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-23 18:27:57,494 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-23 18:27:57,494 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-23 18:27:57,495 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-23 18:27:57,495 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-23 18:27:57,495 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-23 18:27:57,496 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-23 18:27:57,496 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-23 18:27:57,570 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-23 18:27:57,571 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-23 18:27:57,572 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 122ms. Found 15 MongoDB repository interfaces.
2020-08-23 18:27:57,931 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:27:57,935 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:27:58,176 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:27:58,177 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-23 18:27:58,185 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-23 18:27:58,186 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-23 18:27:58,188 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-23 18:27:58,189 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-23 18:27:58,194 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-23 18:27:58,195 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-23 18:27:58,196 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-23 18:27:58,197 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-23 18:27:58,197 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-23 18:27:58,199 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-23 18:27:58,199 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-23 18:27:58,200 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-23 18:27:58,204 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-23 18:27:58,205 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-23 18:27:58,207 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-23 18:27:58,208 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-23 18:27:58,210 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-23 18:27:58,210 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-23 18:27:58,211 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-23 18:27:58,212 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-23 18:27:58,214 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-23 18:27:58,335 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-23 18:27:58,347 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-23 18:27:58,361 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-23 18:27:58,375 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-23 18:27:58,386 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-23 18:27:58,397 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-23 18:27:58,405 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-23 18:27:58,419 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-23 18:27:58,467 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-23 18:27:58,478 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-23 18:27:58,494 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-23 18:27:58,505 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-23 18:27:58,516 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-23 18:27:58,525 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-23 18:27:58,554 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-23 18:27:58,563 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-23 18:27:58,579 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-23 18:27:58,588 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-23 18:27:58,610 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-23 18:27:58,622 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-23 18:27:58,647 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-23 18:27:58,662 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-23 18:27:58,679 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-23 18:27:58,694 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-23 18:27:58,728 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-23 18:27:58,739 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-23 18:27:58,758 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-23 18:27:58,765 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-23 18:27:58,910 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-23 18:27:58,913 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 18:27:58,914 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-23 18:27:58,914 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-23 18:27:58,975 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-23 18:27:58,983 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-23 18:27:59,501 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-23 18:27:59,522 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-23 18:27:59,526 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-23 18:27:59,617 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.099 seconds (JVM running for 454.222)
