2020-07-06 20:06:01,552 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 2953 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-06 20:06:01,579 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-06 20:06:01,580 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-06 20:06:05,956 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-06 20:06:05,981 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-06 20:06:06,010 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-06 20:06:06,012 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-06 20:06:06,012 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-06 20:06:06,013 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-06 20:06:06,014 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-06 20:06:06,014 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-06 20:06:06,015 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-06 20:06:06,015 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-06 20:06:06,015 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-06 20:06:06,015 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-06 20:06:06,016 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-06 20:06:06,016 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-06 20:06:06,016 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-06 20:06:06,017 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-06 20:06:06,017 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-06 20:06:06,245 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-06 20:06:06,248 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-06 20:06:06,253 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 270ms. Found 15 MongoDB repository interfaces.
2020-07-06 20:06:11,228 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:06:11,229 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:06:11,569 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:06:11,570 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:06:11,659 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-06 20:06:11,675 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-06 20:06:11,676 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-06 20:06:11,682 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-06 20:06:11,683 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-06 20:06:11,684 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-06 20:06:11,685 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-06 20:06:11,686 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-06 20:06:11,688 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-06 20:06:11,690 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-06 20:06:11,692 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-06 20:06:11,693 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-06 20:06:11,694 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-06 20:06:11,697 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-06 20:06:11,700 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-06 20:06:11,702 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-06 20:06:11,703 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-06 20:06:11,705 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-06 20:06:11,706 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-06 20:06:11,707 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-06 20:06:11,708 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-06 20:06:16,703 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-06 20:06:16,849 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-06 20:06:16,866 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-06 20:06:16,898 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-06 20:06:16,912 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-06 20:06:16,928 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-06 20:06:16,936 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-06 20:06:16,953 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-06 20:06:16,972 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-06 20:06:16,981 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-06 20:06:16,997 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-06 20:06:17,012 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-06 20:06:17,026 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-06 20:06:17,037 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-06 20:06:17,048 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-06 20:06:17,055 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-06 20:06:17,071 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-06 20:06:17,082 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-06 20:06:17,094 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-06 20:06:17,109 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-06 20:06:17,117 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-06 20:06:17,131 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-06 20:06:17,146 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-06 20:06:17,155 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-06 20:06:17,193 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-06 20:06:17,203 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-06 20:06:17,221 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-06 20:06:17,237 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-06 20:06:17,432 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-06 20:06:17,434 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-06 20:06:17,435 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-06 20:06:17,435 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-06 20:06:17,669 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-06 20:06:17,677 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-06 20:06:19,557 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-06 20:06:19,595 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-06 20:06:19,602 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-06 20:06:19,938 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 20.349 seconds (JVM running for 23.863)
2020-07-06 20:07:42,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:07:42,033 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:07:42,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:07:42,350 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-06 20:07:42,597 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-06 20:07:57,852 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "name" : { "$in" : ["boost"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:08:00,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "name" : { "$in" : ["boost"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:08:06,404 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:08:09,925 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "13"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:08:12,976 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "133"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:08:16,640 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:08:20,954 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-06 20:08:20,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-06 20:08:20,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@29376130)
2020-07-06 20:08:20,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-06 20:08:20,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@75889490)
2020-07-06 20:08:20,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-06 20:08:20,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@51d39a34)
2020-07-06 20:08:20,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-06 20:08:20,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@24a9ce61)
2020-07-06 20:08:20,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-06 20:08:20,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@36050525)
2020-07-06 20:08:20,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-06 20:08:20,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7983b61)
2020-07-06 20:08:20,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-06 20:08:20,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4ad7139c)
2020-07-06 20:08:20,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-06 20:08:20,981 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@20e71661)
2020-07-06 20:08:23,353 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-07-06 20:08:23,365 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-07-06 20:08:41,265 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-07-06 20:08:44,693 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-07-06 20:09:13,310 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:09:17,423 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:09:17,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:09:17,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:09:17,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@18255d7d)
2020-07-06 20:09:17,744 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:09:17,749 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:09:17,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:09:17,870 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ad3ea1e)
2020-07-06 20:09:17,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:09:17,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@480bf5cd)
2020-07-06 20:09:17,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:09:17,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d383d7)
2020-07-06 20:09:17,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:09:17,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6037cd24)
2020-07-06 20:09:17,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:09:17,881 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75a15826)
2020-07-06 20:09:17,882 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:09:17,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62136ec2)
2020-07-06 20:09:17,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:09:17,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b47946c)
2020-07-06 20:13:15,531 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:13:15,537 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:13:15,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:13:15,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@240b6035)
2020-07-06 20:13:15,543 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:13:15,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:13:15,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:13:15,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@194c2c66)
2020-07-06 20:13:15,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:13:15,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31183c4e)
2020-07-06 20:13:15,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:13:15,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f43bc17)
2020-07-06 20:13:15,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:13:15,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10366302)
2020-07-06 20:13:15,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:13:15,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6861427e)
2020-07-06 20:13:15,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:13:15,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18ebe970)
2020-07-06 20:13:15,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:13:15,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6aba5d7e)
2020-07-06 20:15:15,837 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:15:15,839 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:15:15,855 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:15:15,856 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3a41d40a)
2020-07-06 20:15:15,857 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:15:15,859 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:15:15,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:15:15,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@271c12c5)
2020-07-06 20:15:15,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:15:15,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a7cc411)
2020-07-06 20:15:15,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:15:15,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1db16fa1)
2020-07-06 20:15:15,869 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:15:15,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9982902)
2020-07-06 20:15:15,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:15:15,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a709f97)
2020-07-06 20:15:15,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:15:15,878 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16108a84)
2020-07-06 20:15:15,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:15:15,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ca2380)
2020-07-06 20:17:24,056 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:17:24,057 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:17:24,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:17:24,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@30d9c3e9)
2020-07-06 20:17:24,062 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:17:24,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:18:06,118 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:18:06,120 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:18:06,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:18:06,123 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2c2ba001)
2020-07-06 20:18:06,124 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:18:06,126 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:18:06,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:18:06,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b3414dc)
2020-07-06 20:18:06,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:18:06,130 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f392e34)
2020-07-06 20:18:06,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:18:06,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@708e6d0e)
2020-07-06 20:18:06,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:18:06,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@154f0b6)
2020-07-06 20:18:06,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:18:06,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2aed96b4)
2020-07-06 20:18:06,134 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:18:06,134 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c435553)
2020-07-06 20:18:06,135 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:18:06,135 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f26b7c8)
2020-07-06 20:19:36,680 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:19:36,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:19:36,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:19:36,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@785324fc)
2020-07-06 20:19:36,686 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:19:36,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:19:36,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:36,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2fa8f03f)
2020-07-06 20:19:36,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:36,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d4c6e7f)
2020-07-06 20:19:36,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:36,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c01d689)
2020-07-06 20:19:36,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:36,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d147331)
2020-07-06 20:19:36,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:36,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25554ba4)
2020-07-06 20:19:36,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:36,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1bd4f6e7)
2020-07-06 20:19:36,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:36,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39c3de8a)
2020-07-06 20:19:54,660 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:19:54,662 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:19:54,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:19:54,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@255e37fd)
2020-07-06 20:19:54,670 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:19:54,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:19:54,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:54,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e1957a)
2020-07-06 20:19:54,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:54,680 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1889d7a1)
2020-07-06 20:19:54,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:54,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79aeff4d)
2020-07-06 20:19:54,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:54,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d1bce5a)
2020-07-06 20:19:54,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:54,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@205cc4c6)
2020-07-06 20:19:54,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:54,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@763e2bb3)
2020-07-06 20:19:54,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:19:54,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7864e6ae)
2020-07-06 20:27:29,686 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:27:29,688 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:27:29,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:27:29,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3ed51375)
2020-07-06 20:27:29,692 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:27:29,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:27:29,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:27:29,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f7104ce)
2020-07-06 20:27:29,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:27:29,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b40ed3b)
2020-07-06 20:27:29,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:27:29,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51e4231)
2020-07-06 20:27:29,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:27:29,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a75a94d)
2020-07-06 20:27:29,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:27:29,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dd587b9)
2020-07-06 20:27:29,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:27:29,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21c0880d)
2020-07-06 20:27:29,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:27:29,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@563859ce)
2020-07-06 20:28:27,933 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:28:27,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:28:27,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:28:27,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1ab3e0f7)
2020-07-06 20:28:27,953 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:28:27,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:28:27,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:28:27,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11ed4173)
2020-07-06 20:28:27,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:28:27,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13b3ed99)
2020-07-06 20:28:27,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:28:27,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55bf304b)
2020-07-06 20:28:27,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:28:27,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@596cc040)
2020-07-06 20:28:27,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:28:27,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d5464b6)
2020-07-06 20:28:27,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:28:27,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5319281b)
2020-07-06 20:28:27,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:28:27,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f88675b)
2020-07-06 20:29:56,829 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:29:56,831 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:29:56,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:29:56,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@551cd4b7)
2020-07-06 20:29:56,838 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:29:56,840 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:29:56,843 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:29:56,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50865179)
2020-07-06 20:29:56,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:29:56,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@667efb36)
2020-07-06 20:29:56,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:29:56,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@fc84531)
2020-07-06 20:29:56,850 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:29:56,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c428113)
2020-07-06 20:29:56,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:29:56,853 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ead027b)
2020-07-06 20:29:56,854 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:29:56,855 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f9be5d3)
2020-07-06 20:29:56,855 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:29:56,856 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b7d0dc)
2020-07-06 20:30:20,040 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:30:20,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:30:20,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:30:20,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@bb584c)
2020-07-06 20:30:20,051 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:30:20,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:30:20,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:30:20,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5340674b)
2020-07-06 20:30:20,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:30:20,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c86441c)
2020-07-06 20:30:20,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:30:20,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e5de829)
2020-07-06 20:30:20,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:30:20,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14feb096)
2020-07-06 20:30:20,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:30:20,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4454f77d)
2020-07-06 20:30:20,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:30:20,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4afced4f)
2020-07-06 20:30:20,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:30:20,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bc14899)
2020-07-06 20:32:07,820 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:32:07,914 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:32:07,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:32:15,572 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:32:15,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:32:15,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:32:15,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@49b70d58)
2020-07-06 20:32:15,577 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:32:15,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:32:15,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:32:15,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b27c4a2)
2020-07-06 20:32:15,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:32:15,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c4018df)
2020-07-06 20:32:15,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:32:15,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54a9e984)
2020-07-06 20:32:15,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:32:15,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2585e384)
2020-07-06 20:32:15,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:32:15,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30123142)
2020-07-06 20:32:15,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:32:15,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cf8417f)
2020-07-06 20:32:15,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:32:15,588 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@478676ad)
2020-07-06 20:32:21,073 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:32:21,132 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:32:21,133 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:32:23,210 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2, status=Active}} for Document{{}} fields.
2020-07-06 20:32:23,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:32:23,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, categoryId=13, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:32:23,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, categoryId=13, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2a558380)
2020-07-06 20:32:23,219 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-06 20:32:23,220 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:32:50,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:32:50,642 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:32:50,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:32:53,769 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:32:53,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:32:53,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:32:53,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@64f8707e)
2020-07-06 20:32:53,774 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:32:53,775 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:36:21,873 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:36:21,971 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:36:21,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:36:23,941 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2, status=Active}} for Document{{}} fields.
2020-07-06 20:36:23,942 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:36:23,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, categoryId=13, name=boost1, description=Document{{sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:36:23,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, categoryId=13, name=boost1, description=Document{{sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@30f5393d)
2020-07-06 20:36:23,946 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-06 20:36:23,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:36:30,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:36:30,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:36:30,775 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:36:32,762 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2, status=Active}} for Document{{}} fields.
2020-07-06 20:36:32,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:36:32,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, categoryId=13, name=boost1, description=Document{{sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:36:32,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, categoryId=13, name=boost1, description=Document{{sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@558c75a3)
2020-07-06 20:36:32,769 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-06 20:36:32,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:36:35,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:36:35,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:36:42,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:36:42,613 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:36:42,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:36:43,966 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:36:43,967 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:36:43,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:36:43,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@115d18f2)
2020-07-06 20:36:43,970 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:36:43,971 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:36:43,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:36:43,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70afec0c)
2020-07-06 20:36:43,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:36:43,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dec7b88)
2020-07-06 20:36:43,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:36:43,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@427bdec8)
2020-07-06 20:36:43,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:36:43,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b98d4fd)
2020-07-06 20:36:43,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:36:43,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3458800e)
2020-07-06 20:36:43,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:36:43,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a069d36)
2020-07-06 20:36:43,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:36:43,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46979520)
2020-07-06 20:36:56,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:36:56,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:36:56,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:36:58,202 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2, status=Active}} for Document{{}} fields.
2020-07-06 20:36:58,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:36:58,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, categoryId=13, name=boost1, description=Document{{sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:36:58,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, categoryId=13, name=boost1, description=Document{{sellerName=nescafe, disclaimer=good for all ages}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@13b0229a)
2020-07-06 20:36:58,207 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-06 20:36:58,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:37:06,338 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:37:06,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:37:06,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:38:03,535 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:38:03,663 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:38:03,667 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:38:05,864 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:38:05,865 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:38:05,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:38:05,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@69512fda)
2020-07-06 20:38:05,868 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:38:05,869 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:38:19,322 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:38:19,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:38:19,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:38:19,327 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@d1f91d9)
2020-07-06 20:38:19,328 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:38:19,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:38:19,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:38:19,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ac6d92)
2020-07-06 20:38:19,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:38:19,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73a0daf9)
2020-07-06 20:38:19,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:38:19,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dde0c32)
2020-07-06 20:38:19,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:38:19,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c3edf09)
2020-07-06 20:38:19,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:38:19,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c1ef7e1)
2020-07-06 20:38:19,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:38:19,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@399c9b89)
2020-07-06 20:38:19,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:38:19,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@140eaf14)
2020-07-06 20:38:48,179 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:38:48,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:38:48,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:38:48,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6ab8be6e)
2020-07-06 20:38:48,182 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:38:48,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:39:02,070 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:39:02,072 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:39:02,074 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:39:02,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6cac94db)
2020-07-06 20:39:02,076 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:39:02,077 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:41:55,145 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:41:55,147 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:41:55,150 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:41:55,151 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3bd58e33)
2020-07-06 20:41:55,152 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:41:55,155 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:41:55,227 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:41:55,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:41:55,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:41:55,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@56343830)
2020-07-06 20:41:55,231 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:41:55,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:42:49,710 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:42:49,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:42:49,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:42:49,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2f4f5c72)
2020-07-06 20:42:49,715 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:42:49,716 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:42:49,765 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:42:49,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:42:49,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:42:49,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@295b963a)
2020-07-06 20:42:49,769 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:42:49,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:43:20,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:43:20,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:43:20,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:43:20,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4e92ec0b)
2020-07-06 20:43:20,511 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:43:20,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:43:20,561 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:43:20,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:43:20,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:43:20,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1050b20c)
2020-07-06 20:43:20,565 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:43:20,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:43:26,673 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:43:26,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:43:26,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:43:26,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7241d388)
2020-07-06 20:43:26,687 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:43:26,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:43:26,758 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:43:26,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:43:26,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:43:26,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@45f5707a)
2020-07-06 20:43:26,762 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:43:26,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:43:26,793 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:43:26,794 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:44:29,449 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:44:29,450 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:44:29,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:44:29,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@79706d05)
2020-07-06 20:44:29,453 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:44:29,454 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:44:29,503 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:44:29,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:44:29,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:44:29,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@75a3a4a9)
2020-07-06 20:44:29,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:44:29,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:44:29,533 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:44:29,533 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:44:43,219 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:44:43,220 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:44:43,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:44:43,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@606f073)
2020-07-06 20:44:43,223 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:44:43,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:44:43,278 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:44:43,280 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:44:43,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:44:43,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5d31c2cf)
2020-07-06 20:44:43,284 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:44:43,286 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:45:18,660 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:45:18,661 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:45:18,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:45:18,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3f2a46e9)
2020-07-06 20:45:18,664 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:45:18,667 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:45:18,735 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3, status=Active}} for Document{{}} fields.
2020-07-06 20:45:18,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:45:18,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:45:18,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@40d9c62a)
2020-07-06 20:45:18,741 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-06 20:45:18,742 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:45:18,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:45:18,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:45:30,633 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:45:30,734 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:45:30,734 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:45:32,865 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:45:32,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:45:32,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:45:32,868 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7588abc7)
2020-07-06 20:45:32,869 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:45:32,870 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:45:32,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:45:32,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2895362c)
2020-07-06 20:45:32,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:45:32,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49024a25)
2020-07-06 20:45:32,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:45:32,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10a915ba)
2020-07-06 20:45:32,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:45:32,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@204f42fb)
2020-07-06 20:45:32,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:45:32,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21ea2488)
2020-07-06 20:45:32,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:45:32,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a6211f2)
2020-07-06 20:45:32,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:45:32,878 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22becfc1)
2020-07-06 20:46:13,147 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:46:13,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:46:13,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:46:15,456 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1, status=Active}} for Document{{}} fields.
2020-07-06 20:46:15,457 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:46:15,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:46:15,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@ee66b53)
2020-07-06 20:46:15,460 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:46:15,461 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:46:15,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:46:15,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14a5c364)
2020-07-06 20:46:15,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:46:15,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@282bcc14)
2020-07-06 20:46:15,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:46:15,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@264db7ad)
2020-07-06 20:46:15,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:46:15,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1bccecc4)
2020-07-06 20:46:15,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:46:15,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2148a23a)
2020-07-06 20:46:15,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:46:15,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5775916b)
2020-07-06 20:46:15,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:46:15,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c4ea4f7)
2020-07-06 20:46:19,230 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:46:19,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:46:19,299 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:46:39,558 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=24, status=Active}} for Document{{}} fields.
2020-07-06 20:46:39,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "24"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:46:39,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, categoryId=13, subCategoryId=24, name=groffer mothers sunflower oil, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:46:39,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, categoryId=13, subCategoryId=24, name=groffer mothers sunflower oil, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2ef0e77f)
2020-07-06 20:46:39,562 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=24, available=Y}} for Document{{}} fields.
2020-07-06 20:46:39,563 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "24"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:46:45,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:46:46,001 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:46:46,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:46:49,277 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=30, status=Active}} for Document{{}} fields.
2020-07-06 20:46:49,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "30"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:46:49,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=30, categoryId=13, subCategoryId=24, name=sunfeast dark fantacy, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:46:49,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=30, categoryId=13, subCategoryId=24, name=sunfeast dark fantacy, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@26e1b9bc)
2020-07-06 20:46:49,280 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=30, available=Y}} for Document{{}} fields.
2020-07-06 20:46:49,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "30"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:48:23,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:48:23,336 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:48:23,338 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:48:28,463 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=29, status=Active}} for Document{{}} fields.
2020-07-06 20:48:28,465 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "29"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:48:28,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=29, categoryId=13, subCategoryId=24, name=sunsilk black shine, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 12 months, sellerName=pantene, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:48:28,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=29, categoryId=13, subCategoryId=24, name=sunsilk black shine, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 12 months, sellerName=pantene, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3b25f07f)
2020-07-06 20:48:28,468 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=29, available=Y}} for Document{{}} fields.
2020-07-06 20:48:28,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "29"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:48:39,613 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:48:39,681 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:48:39,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:50:16,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:50:24,500 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=19, status=Active}} for Document{{}} fields.
2020-07-06 20:50:24,501 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "19"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:50:36,157 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=19, status=Active}} for Document{{}} fields.
2020-07-06 20:50:36,158 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "19"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:50:36,221 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=19, status=Active}} for Document{{}} fields.
2020-07-06 20:50:36,222 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "19"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:51:44,810 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=19, status=Active}} for Document{{}} fields.
2020-07-06 20:51:44,811 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "19"}, "status" : "Active"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:51:53,286 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:51:53,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:51:53,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:52:03,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}]}}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:53:32,385 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 2953 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-06 20:53:32,386 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-06 20:53:32,386 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-06 20:53:39,517 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 5365 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-06 20:53:39,540 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-06 20:53:39,541 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-06 20:53:42,594 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-06 20:53:42,644 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-06 20:53:42,723 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-06 20:53:42,725 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-06 20:53:42,726 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-06 20:53:42,727 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-06 20:53:42,728 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-06 20:53:42,729 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-06 20:53:42,732 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-06 20:53:42,733 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-06 20:53:42,735 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-06 20:53:42,735 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-06 20:53:42,738 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-06 20:53:42,749 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-06 20:53:42,750 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-06 20:53:42,751 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-06 20:53:42,751 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-06 20:53:43,023 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-06 20:53:43,024 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-06 20:53:43,032 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 386ms. Found 15 MongoDB repository interfaces.
2020-07-06 20:53:47,443 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:53:47,445 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:53:47,935 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:53:47,936 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-06 20:53:48,049 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-06 20:53:48,051 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-06 20:53:48,052 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-06 20:53:48,073 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-06 20:53:48,075 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-06 20:53:48,076 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-06 20:53:48,077 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-06 20:53:48,078 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-06 20:53:48,079 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-06 20:53:48,080 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-06 20:53:48,081 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-06 20:53:48,083 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-06 20:53:48,084 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-06 20:53:48,085 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-06 20:53:48,089 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-06 20:53:48,091 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-06 20:53:48,092 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-06 20:53:48,097 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-06 20:53:48,098 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-06 20:53:48,099 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-06 20:53:48,101 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-06 20:53:53,258 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-06 20:53:53,395 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-06 20:53:53,416 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-06 20:53:53,461 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-06 20:53:53,489 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-06 20:53:53,519 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-06 20:53:53,550 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-06 20:53:53,586 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-06 20:53:53,652 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-06 20:53:53,674 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-06 20:53:53,702 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-06 20:53:53,730 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-06 20:53:53,760 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-06 20:53:53,784 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-06 20:53:53,808 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-06 20:53:53,818 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-06 20:53:53,841 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-06 20:53:53,854 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-06 20:53:53,887 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-06 20:53:53,928 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-06 20:53:53,952 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-06 20:53:53,980 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-06 20:53:54,006 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-06 20:53:54,014 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-06 20:53:54,071 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-06 20:53:54,087 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-06 20:53:54,108 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-06 20:53:54,131 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-06 20:53:54,434 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-06 20:53:54,437 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-06 20:53:54,438 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-06 20:53:54,438 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-06 20:53:54,617 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-06 20:53:54,625 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-06 20:53:56,421 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-06 20:53:56,454 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-06 20:53:56,458 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-06 20:53:56,761 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 19.381 seconds (JVM running for 22.002)
2020-07-06 20:54:11,167 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=19}} for Document{{}} fields.
2020-07-06 20:54:11,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:54:11,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=19, categoryId=13, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:54:11,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=19, categoryId=13, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@772e876b)
2020-07-06 20:54:11,397 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=19, available=Y}} for Document{{}} fields.
2020-07-06 20:54:11,402 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "19"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:54:22,163 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:54:22,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:54:22,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:54:22,232 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-4] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-06 20:54:22,248 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-06 20:54:59,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:55:02,010 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=18}} for Document{{}} fields.
2020-07-06 20:55:02,012 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:55:02,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=18, categoryId=14, subCategoryId=30, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:55:02,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=18, categoryId=14, subCategoryId=30, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1f8c6231)
2020-07-06 20:55:02,018 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=18, available=Y}} for Document{{}} fields.
2020-07-06 20:55:02,019 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "18"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:55:05,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:55:05,999 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:55:06,005 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:57:10,895 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=30}} for Document{{}} fields.
2020-07-06 20:57:10,896 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "30"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:57:10,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=30, categoryId=13, subCategoryId=24, name=sunfeast dark fantacy, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:57:10,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=30, categoryId=13, subCategoryId=24, name=sunfeast dark fantacy, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@70a192bc)
2020-07-06 20:57:10,902 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=30, available=Y}} for Document{{}} fields.
2020-07-06 20:57:10,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "30"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:57:16,859 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:57:16,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 20:57:16,923 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:57:21,979 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-06 20:57:21,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-06 20:57:21,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1fc5e59)
2020-07-06 20:57:21,994 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-06 20:57:21,995 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5aa6baf3)
2020-07-06 20:57:21,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-06 20:57:21,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@40369207)
2020-07-06 20:57:21,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-06 20:57:21,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@2d8e47ec)
2020-07-06 20:57:22,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-06 20:57:22,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@4e63da92)
2020-07-06 20:57:22,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-06 20:57:22,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@217d908f)
2020-07-06 20:57:22,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-06 20:57:22,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@55af880d)
2020-07-06 20:57:22,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-06 20:57:22,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@a410473)
2020-07-06 20:57:35,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-06 20:57:35,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-06 20:57:35,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6bf59c39)
2020-07-06 20:57:35,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-06 20:57:35,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6858d45d)
2020-07-06 20:57:35,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-06 20:57:35,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1b319134)
2020-07-06 20:57:35,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-06 20:57:35,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@7cebfd6f)
2020-07-06 20:57:35,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-06 20:57:35,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@3bb8b29f)
2020-07-06 20:57:35,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-06 20:57:35,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@15ec7389)
2020-07-06 20:57:35,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-06 20:57:35,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2c3e831)
2020-07-06 20:57:35,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-06 20:57:35,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@29b45f3e)
2020-07-06 20:57:36,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-07-06 20:57:36,922 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-10] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-07-06 20:57:43,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-07-06 20:57:43,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 20:57:45,892 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 20:58:30,568 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=19}} for Document{{}} fields.
2020-07-06 20:58:30,570 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:58:30,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, categoryId=13, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:58:30,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, categoryId=13, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1792f2c0)
2020-07-06 20:58:30,578 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=19, available=Y}} for Document{{}} fields.
2020-07-06 20:58:30,580 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "19"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:58:37,544 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 20:58:37,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 20:58:37,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 20:58:37,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@100ce1c)
2020-07-06 20:58:37,550 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 20:58:37,551 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 20:58:37,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:58:37,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10018d3a)
2020-07-06 20:58:37,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:58:37,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d9f5df1)
2020-07-06 20:58:37,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:58:37,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32bd3406)
2020-07-06 20:58:37,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:58:37,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64c9d201)
2020-07-06 20:58:37,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:58:37,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@783debff)
2020-07-06 20:58:37,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:58:37,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fda51dc)
2020-07-06 20:58:37,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 20:58:37,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@349c4525)
2020-07-06 21:00:24,235 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 21:00:24,236 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 21:00:24,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 21:00:24,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@534d1382)
2020-07-06 21:00:24,240 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 21:00:24,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 21:00:24,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:24,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b296760)
2020-07-06 21:00:24,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:24,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@de23407)
2020-07-06 21:00:24,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:24,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@660c20f9)
2020-07-06 21:00:24,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:24,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5de6feb9)
2020-07-06 21:00:24,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:24,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dd48002)
2020-07-06 21:00:24,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:24,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@618ac1b3)
2020-07-06 21:00:24,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:24,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66862e93)
2020-07-06 21:00:37,321 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 21:00:37,322 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 21:00:37,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 21:00:37,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4d6189a6)
2020-07-06 21:00:37,327 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 21:00:37,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 21:00:37,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:37,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26c201f1)
2020-07-06 21:00:37,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:37,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65bf9769)
2020-07-06 21:00:37,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:37,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5344cfa6)
2020-07-06 21:00:37,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:37,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c5407a3)
2020-07-06 21:00:37,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:37,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78858d33)
2020-07-06 21:00:37,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:37,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61984995)
2020-07-06 21:00:37,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:00:37,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@145493ff)
2020-07-06 21:51:27,724 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 21:51:27,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 21:51:27,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 21:51:27,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5bce400b)
2020-07-06 21:51:27,775 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 21:51:27,778 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 21:51:27,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:51:27,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a87893e)
2020-07-06 21:51:27,782 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:51:27,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b36112c)
2020-07-06 21:51:27,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:51:27,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46b1db29)
2020-07-06 21:51:27,789 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:51:27,790 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@564b6152)
2020-07-06 21:51:27,790 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:51:27,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20f3ccdc)
2020-07-06 21:51:27,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:51:27,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bc7169f)
2020-07-06 21:51:27,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 21:51:27,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63e7e85d)
2020-07-06 22:01:31,584 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:01:31,611 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:01:31,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:01:31,618 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3e9e9745)
2020-07-06 22:01:31,619 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:01:31,622 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:01:31,626 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ad0cd7a)
2020-07-06 22:01:31,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@265b3f6b)
2020-07-06 22:01:31,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,631 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@461dadf0)
2020-07-06 22:01:31,631 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,632 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44652fd4)
2020-07-06 22:01:31,633 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78e2813f)
2020-07-06 22:01:31,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bd492f)
2020-07-06 22:01:31,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ce40605)
2020-07-06 22:01:31,664 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:01:31,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:01:31,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:01:31,668 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@51bc7c6a)
2020-07-06 22:01:31,669 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:01:31,671 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:01:31,673 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,674 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@488f4b85)
2020-07-06 22:01:31,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54909738)
2020-07-06 22:01:31,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@413edead)
2020-07-06 22:01:31,680 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7353b5cc)
2020-07-06 22:01:31,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41321b40)
2020-07-06 22:01:31,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11cb6d09)
2020-07-06 22:01:31,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:01:31,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2637022b)
2020-07-06 22:03:40,627 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-06 22:03:40,768 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-06 22:03:40,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-06 22:03:43,765 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:03:43,767 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:03:43,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:03:43,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7001b26f)
2020-07-06 22:03:43,771 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:03:43,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:03:43,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:03:43,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20ff35f5)
2020-07-06 22:03:43,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:03:43,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6001a1cc)
2020-07-06 22:03:43,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:03:43,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@583137d8)
2020-07-06 22:03:43,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:03:43,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25de647b)
2020-07-06 22:03:43,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:03:43,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c57ada8)
2020-07-06 22:03:43,782 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:03:43,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11b57c2f)
2020-07-06 22:03:43,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:03:43,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40eb0636)
2020-07-06 22:04:38,491 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:04:38,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:04:38,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:04:38,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@39da1d6b)
2020-07-06 22:04:38,497 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:04:38,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:04:38,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51d809f)
2020-07-06 22:04:38,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d62931e)
2020-07-06 22:04:38,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c23436d)
2020-07-06 22:04:38,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45fb32c7)
2020-07-06 22:04:38,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c0b4b9f)
2020-07-06 22:04:38,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4598d763)
2020-07-06 22:04:38,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7396cc96)
2020-07-06 22:04:38,561 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:04:38,563 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:04:38,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:04:38,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@419287c2)
2020-07-06 22:04:38,567 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:04:38,568 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:04:38,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d150db6)
2020-07-06 22:04:38,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@408cdd0a)
2020-07-06 22:04:38,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cd43f30)
2020-07-06 22:04:38,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@192d0dff)
2020-07-06 22:04:38,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c50cbd1)
2020-07-06 22:04:38,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a9221dc)
2020-07-06 22:04:38,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:38,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5752a401)
2020-07-06 22:04:50,476 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:04:50,478 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:04:50,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:04:50,480 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1eefc06d)
2020-07-06 22:04:50,481 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:04:50,482 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:04:50,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@99ab25c)
2020-07-06 22:04:50,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34735602)
2020-07-06 22:04:50,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@621098c4)
2020-07-06 22:04:50,488 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29cd043)
2020-07-06 22:04:50,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e488a1e)
2020-07-06 22:04:50,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70a51493)
2020-07-06 22:04:50,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@169564fb)
2020-07-06 22:04:50,536 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:04:50,537 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:04:50,539 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:04:50,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@68b022f4)
2020-07-06 22:04:50,541 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:04:50,542 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:04:50,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f1e8af9)
2020-07-06 22:04:50,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d102dd7)
2020-07-06 22:04:50,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fa4b913)
2020-07-06 22:04:50,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76ea9f91)
2020-07-06 22:04:50,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d588af7)
2020-07-06 22:04:50,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61ca601e)
2020-07-06 22:04:50,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:50,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b9c3115)
2020-07-06 22:04:59,484 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:04:59,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:04:59,487 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:04:59,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@70f1902b)
2020-07-06 22:04:59,490 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:04:59,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:04:59,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b6a80d3)
2020-07-06 22:04:59,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@291d3c47)
2020-07-06 22:04:59,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21a62202)
2020-07-06 22:04:59,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5daa9ed5)
2020-07-06 22:04:59,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72e9e1ab)
2020-07-06 22:04:59,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@325614b5)
2020-07-06 22:04:59,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22f096cf)
2020-07-06 22:04:59,570 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:04:59,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:04:59,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:04:59,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1069cf1)
2020-07-06 22:04:59,575 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:04:59,579 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:04:59,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f1f5109)
2020-07-06 22:04:59,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@438a692e)
2020-07-06 22:04:59,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ee3e760)
2020-07-06 22:04:59,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bb70159)
2020-07-06 22:04:59,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ea58a3f)
2020-07-06 22:04:59,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ef645dc)
2020-07-06 22:04:59,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:04:59,623 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3faf7d85)
2020-07-06 22:05:08,065 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:05:08,067 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:05:08,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:05:08,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@16c05fec)
2020-07-06 22:05:08,076 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:05:08,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:05:08,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,083 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57bb8a71)
2020-07-06 22:05:08,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d55d0ad)
2020-07-06 22:05:08,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7517a187)
2020-07-06 22:05:08,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@613caff6)
2020-07-06 22:05:08,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a5f49a2)
2020-07-06 22:05:08,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29cc3cfc)
2020-07-06 22:05:08,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@611fabdb)
2020-07-06 22:05:08,196 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:05:08,197 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:05:08,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:05:08,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@556584de)
2020-07-06 22:05:08,203 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:05:08,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:05:08,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@292dc8bc)
2020-07-06 22:05:08,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,208 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1357723)
2020-07-06 22:05:08,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c72d865)
2020-07-06 22:05:08,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,212 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2548f441)
2020-07-06 22:05:08,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6267a07c)
2020-07-06 22:05:08,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48c15f7c)
2020-07-06 22:05:08,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:05:08,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23a07f1)
2020-07-06 22:07:08,242 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:08,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:08,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:08,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6fe7a529)
2020-07-06 22:07:08,252 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:08,255 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:08,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19c64cf9)
2020-07-06 22:07:08,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a66a36d)
2020-07-06 22:07:08,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f513ecb)
2020-07-06 22:07:08,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dcd16e5)
2020-07-06 22:07:08,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26473221)
2020-07-06 22:07:08,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@995804f)
2020-07-06 22:07:08,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fe450d0)
2020-07-06 22:07:08,342 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:08,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:08,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:08,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@266119e1)
2020-07-06 22:07:08,348 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:08,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:08,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cf550bf)
2020-07-06 22:07:08,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17421a3c)
2020-07-06 22:07:08,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55f2d679)
2020-07-06 22:07:08,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b726337)
2020-07-06 22:07:08,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d14b44e)
2020-07-06 22:07:08,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a00d02a)
2020-07-06 22:07:08,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:08,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2982920d)
2020-07-06 22:07:14,003 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:14,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:14,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:14,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@48a43ef4)
2020-07-06 22:07:14,014 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:14,016 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:14,020 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@199dd4bb)
2020-07-06 22:07:14,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,027 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53f451a4)
2020-07-06 22:07:14,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4dcc37ab)
2020-07-06 22:07:14,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2476e378)
2020-07-06 22:07:14,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53b9d341)
2020-07-06 22:07:14,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22b1c1e3)
2020-07-06 22:07:14,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e6ccb71)
2020-07-06 22:07:14,111 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:14,112 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:14,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:14,123 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@726fb0a2)
2020-07-06 22:07:14,124 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:14,126 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:14,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68edcc8b)
2020-07-06 22:07:14,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,135 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@336c8863)
2020-07-06 22:07:14,135 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,136 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c53f3e3)
2020-07-06 22:07:14,136 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,144 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fa64d77)
2020-07-06 22:07:14,144 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5493df93)
2020-07-06 22:07:14,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3eb7af2)
2020-07-06 22:07:14,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:14,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20044d87)
2020-07-06 22:07:22,888 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:22,889 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:22,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:22,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@79282be0)
2020-07-06 22:07:22,900 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:22,901 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:22,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30ee1900)
2020-07-06 22:07:22,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2965593)
2020-07-06 22:07:22,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38b8d84d)
2020-07-06 22:07:22,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f78391)
2020-07-06 22:07:22,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4011bc96)
2020-07-06 22:07:22,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@709b53ca)
2020-07-06 22:07:22,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e1f9724)
2020-07-06 22:07:22,964 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:22,965 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:22,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:22,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@70ce9699)
2020-07-06 22:07:22,968 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:22,969 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:22,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@370f34a1)
2020-07-06 22:07:22,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@753be1d6)
2020-07-06 22:07:22,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@678309ab)
2020-07-06 22:07:22,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63fd319c)
2020-07-06 22:07:22,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d99bb7e)
2020-07-06 22:07:22,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@706da4a)
2020-07-06 22:07:22,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:22,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78375550)
2020-07-06 22:07:28,183 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:28,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:28,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:28,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2c811ee0)
2020-07-06 22:07:28,190 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:28,192 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:28,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ef79d3d)
2020-07-06 22:07:28,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22a3f59a)
2020-07-06 22:07:28,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6624e71e)
2020-07-06 22:07:28,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42769324)
2020-07-06 22:07:28,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@507ae022)
2020-07-06 22:07:28,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d48d092)
2020-07-06 22:07:28,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c95c632)
2020-07-06 22:07:28,365 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:28,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:28,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:28,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@65d8fb11)
2020-07-06 22:07:28,373 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:28,377 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:28,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75daac51)
2020-07-06 22:07:28,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d3945ca)
2020-07-06 22:07:28,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21e470c5)
2020-07-06 22:07:28,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c6179b)
2020-07-06 22:07:28,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@235e9b96)
2020-07-06 22:07:28,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54be8d22)
2020-07-06 22:07:28,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:28,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@565ebd28)
2020-07-06 22:07:41,434 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:41,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:41,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:41,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6032010b)
2020-07-06 22:07:41,450 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:41,452 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:41,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f892931)
2020-07-06 22:07:41,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d71bb03)
2020-07-06 22:07:41,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f263ed3)
2020-07-06 22:07:41,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fec5865)
2020-07-06 22:07:41,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29da2208)
2020-07-06 22:07:41,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59832d93)
2020-07-06 22:07:41,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@474d40d6)
2020-07-06 22:07:41,629 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:07:41,630 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:07:41,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:07:41,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6e2b5482)
2020-07-06 22:07:41,637 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:07:41,638 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:07:41,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5080f0b7)
2020-07-06 22:07:41,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43e077d6)
2020-07-06 22:07:41,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f19caf7)
2020-07-06 22:07:41,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b2212d2)
2020-07-06 22:07:41,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cf05a49)
2020-07-06 22:07:41,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c6edcc6)
2020-07-06 22:07:41,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:07:41,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d71e7ce)
2020-07-06 22:10:18,933 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:10:18,934 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:10:18,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:10:18,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@410127d1)
2020-07-06 22:10:18,937 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:10:18,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:10:18,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:18,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@97f4d7b)
2020-07-06 22:10:18,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:18,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65124dfe)
2020-07-06 22:10:18,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:18,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@583db9ab)
2020-07-06 22:10:18,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:18,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10ca32d2)
2020-07-06 22:10:18,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:18,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@632db125)
2020-07-06 22:10:18,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:18,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14276d03)
2020-07-06 22:10:18,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:18,957 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21e26ecd)
2020-07-06 22:10:19,033 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:10:19,035 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:10:19,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:10:19,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1d9284e7)
2020-07-06 22:10:19,041 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:10:19,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:10:19,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:19,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ac6fcf)
2020-07-06 22:10:19,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:19,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c3e18e0)
2020-07-06 22:10:19,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:19,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44617955)
2020-07-06 22:10:19,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:19,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ddd6882)
2020-07-06 22:10:19,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:19,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2eecb4e1)
2020-07-06 22:10:19,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:19,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@724950c4)
2020-07-06 22:10:19,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:19,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d2d2409)
2020-07-06 22:10:57,994 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:10:57,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:10:57,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:10:57,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6d046105)
2020-07-06 22:10:57,998 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:10:57,999 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:10:58,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,003 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27214471)
2020-07-06 22:10:58,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fc5968d)
2020-07-06 22:10:58,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d2f9487)
2020-07-06 22:10:58,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@336dde6e)
2020-07-06 22:10:58,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e4216be)
2020-07-06 22:10:58,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4de09a05)
2020-07-06 22:10:58,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c6aa492)
2020-07-06 22:10:58,170 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:10:58,171 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:10:58,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:10:58,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3248667d)
2020-07-06 22:10:58,175 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:10:58,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:10:58,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ff099ae)
2020-07-06 22:10:58,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@555f9099)
2020-07-06 22:10:58,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@278b9ba1)
2020-07-06 22:10:58,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56817aa3)
2020-07-06 22:10:58,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d47b434)
2020-07-06 22:10:58,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b5325d)
2020-07-06 22:10:58,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:10:58,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f18f7f9)
2020-07-06 22:11:42,212 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:11:42,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:11:42,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:11:42,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@724cfa1b)
2020-07-06 22:11:42,217 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:11:42,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:11:42,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12eefd67)
2020-07-06 22:11:42,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@238bb1fa)
2020-07-06 22:11:42,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61d4fd0e)
2020-07-06 22:11:42,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@745d5f0d)
2020-07-06 22:11:42,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11bd8124)
2020-07-06 22:11:42,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fc7e688)
2020-07-06 22:11:42,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29bd5af3)
2020-07-06 22:11:42,377 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:11:42,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:11:42,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:11:42,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5a0c9f37)
2020-07-06 22:11:42,387 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:11:42,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:11:42,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d701fa4)
2020-07-06 22:11:42,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@761798d8)
2020-07-06 22:11:42,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7431747e)
2020-07-06 22:11:42,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4afaa8e8)
2020-07-06 22:11:42,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17aa132c)
2020-07-06 22:11:42,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d318859)
2020-07-06 22:11:42,405 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:11:42,405 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@225c8505)
2020-07-06 22:12:20,329 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:12:20,330 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:12:20,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:12:20,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@659712b7)
2020-07-06 22:12:20,333 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:12:20,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:12:20,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3242b7b8)
2020-07-06 22:12:20,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1235fb4f)
2020-07-06 22:12:20,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31a1a3dc)
2020-07-06 22:12:20,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c7e1df5)
2020-07-06 22:12:20,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ba698b5)
2020-07-06 22:12:20,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7674fd0d)
2020-07-06 22:12:20,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a770f5c)
2020-07-06 22:12:20,474 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:12:20,475 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:12:20,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:12:20,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7adf072a)
2020-07-06 22:12:20,478 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:12:20,480 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:12:20,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2eda01b)
2020-07-06 22:12:20,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,485 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42c2ea60)
2020-07-06 22:12:20,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f24591e)
2020-07-06 22:12:20,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d40f587)
2020-07-06 22:12:20,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2426d4c)
2020-07-06 22:12:20,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5786068e)
2020-07-06 22:12:20,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:12:20,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1aa759c9)
2020-07-06 22:19:32,297 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:19:32,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:19:32,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:19:32,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@809fa2)
2020-07-06 22:19:32,337 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:19:32,338 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:19:32,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29259ee7)
2020-07-06 22:19:32,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d53d4cc)
2020-07-06 22:19:32,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e73bb3e)
2020-07-06 22:19:32,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30aad2f0)
2020-07-06 22:19:32,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@357da0a4)
2020-07-06 22:19:32,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bbe773)
2020-07-06 22:19:32,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@657206d1)
2020-07-06 22:19:32,456 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:19:32,458 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:19:32,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:19:32,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@60ff8481)
2020-07-06 22:19:32,471 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:19:32,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:19:32,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ed5a522)
2020-07-06 22:19:32,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4135928e)
2020-07-06 22:19:32,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73131863)
2020-07-06 22:19:32,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fd4410c)
2020-07-06 22:19:32,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,477 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ceb0561)
2020-07-06 22:19:32,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41275390)
2020-07-06 22:19:32,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:19:32,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a1c9bd7)
2020-07-06 22:20:16,757 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:20:16,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:20:16,759 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:20:16,760 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1b92d256)
2020-07-06 22:20:16,761 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:20:16,762 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:20:16,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50923679)
2020-07-06 22:20:16,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@686593df)
2020-07-06 22:20:16,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cbcefb6)
2020-07-06 22:20:16,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31b18a15)
2020-07-06 22:20:16,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70d153a4)
2020-07-06 22:20:16,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34eecd0a)
2020-07-06 22:20:16,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ff4457e)
2020-07-06 22:20:16,886 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:20:16,891 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:20:16,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:20:16,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@11a98ddf)
2020-07-06 22:20:16,906 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:20:16,908 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:20:16,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f508eb2)
2020-07-06 22:20:16,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56a91fef)
2020-07-06 22:20:16,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f7e6f9c)
2020-07-06 22:20:16,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1264c4d9)
2020-07-06 22:20:16,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@95afd39)
2020-07-06 22:20:16,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1712cd9a)
2020-07-06 22:20:16,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:20:16,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b2c426b)
2020-07-06 22:21:51,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:21:51,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:21:51,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:21:51,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3706cdfe)
2020-07-06 22:21:51,240 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:21:51,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:21:51,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:21:51,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a4fde9b)
2020-07-06 22:21:51,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:21:51,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1aec92fc)
2020-07-06 22:21:51,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:21:51,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59452990)
2020-07-06 22:21:51,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:21:51,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@582d767b)
2020-07-06 22:21:51,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:21:51,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c22c0e3)
2020-07-06 22:21:51,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:21:51,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12a7d4e9)
2020-07-06 22:21:51,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:21:51,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62de7684)
2020-07-06 22:22:49,531 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:22:49,533 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:22:49,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:22:49,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3d7ed44e)
2020-07-06 22:22:49,547 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:22:49,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:22:49,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:22:49,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a8a83be)
2020-07-06 22:22:49,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:22:49,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ba8bff6)
2020-07-06 22:22:49,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:22:49,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d1a632b)
2020-07-06 22:22:49,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:22:49,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@268d0662)
2020-07-06 22:22:49,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:22:49,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@834f67e)
2020-07-06 22:22:49,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:22:49,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@660dbf81)
2020-07-06 22:22:49,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:22:49,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58309b50)
2020-07-06 22:23:04,779 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:23:04,781 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:23:04,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:23:04,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@567a3252)
2020-07-06 22:23:04,786 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:23:04,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:23:04,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:04,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29666b18)
2020-07-06 22:23:04,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:04,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@782b67ac)
2020-07-06 22:23:04,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:04,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a549a1a)
2020-07-06 22:23:04,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:04,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d3bc1a0)
2020-07-06 22:23:04,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:04,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@171f55b4)
2020-07-06 22:23:04,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:04,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34aa46fc)
2020-07-06 22:23:04,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:04,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a009e39)
2020-07-06 22:23:16,414 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:23:16,419 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:23:16,429 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:23:16,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@70217bd7)
2020-07-06 22:23:16,431 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:23:16,432 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:23:16,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:16,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61985092)
2020-07-06 22:23:16,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:16,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6cd8859)
2020-07-06 22:23:16,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:16,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2684f058)
2020-07-06 22:23:16,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:16,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d00c89c)
2020-07-06 22:23:16,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:16,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e3f1f6e)
2020-07-06 22:23:16,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:16,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14dadfb0)
2020-07-06 22:23:16,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:16,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15ddeb43)
2020-07-06 22:23:21,044 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:23:21,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:23:21,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:23:21,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@56fedc30)
2020-07-06 22:23:21,055 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:23:21,056 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:23:21,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:21,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28a2e6b4)
2020-07-06 22:23:21,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:21,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6260878a)
2020-07-06 22:23:21,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:21,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cd539f)
2020-07-06 22:23:21,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:21,063 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@207200ea)
2020-07-06 22:23:21,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:21,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fdad516)
2020-07-06 22:23:21,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:21,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79e05db0)
2020-07-06 22:23:21,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:21,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@135ba8b8)
2020-07-06 22:23:51,211 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:23:51,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:23:51,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:23:51,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@32965dd)
2020-07-06 22:23:51,220 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:23:51,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:23:51,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:51,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b899d9c)
2020-07-06 22:23:51,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:51,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d079e1)
2020-07-06 22:23:51,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:51,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7761b3e4)
2020-07-06 22:23:51,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:51,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f2e2758)
2020-07-06 22:23:51,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:51,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28dc285c)
2020-07-06 22:23:51,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:51,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@294243d7)
2020-07-06 22:23:51,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:23:51,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53463b88)
2020-07-06 22:24:32,217 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:24:32,218 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:24:32,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:24:32,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@670d63b9)
2020-07-06 22:24:32,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:24:32,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:24:32,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:32,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1339b234)
2020-07-06 22:24:32,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:32,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6879d810)
2020-07-06 22:24:32,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:32,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@267524eb)
2020-07-06 22:24:32,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:32,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ae99b37)
2020-07-06 22:24:32,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:32,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@749f344c)
2020-07-06 22:24:32,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:32,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5200db97)
2020-07-06 22:24:32,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:32,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dddff40)
2020-07-06 22:24:53,296 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:24:53,298 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:24:53,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:24:53,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@52a88bb7)
2020-07-06 22:24:53,302 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:24:53,305 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:24:53,307 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:53,307 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@281eae35)
2020-07-06 22:24:53,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:53,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a5ab0a1)
2020-07-06 22:24:53,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:53,309 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2748c721)
2020-07-06 22:24:53,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:53,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@312b054c)
2020-07-06 22:24:53,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:53,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c997a5a)
2020-07-06 22:24:53,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:53,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@537910d0)
2020-07-06 22:24:53,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:24:53,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3269a451)
2020-07-06 22:25:42,149 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:25:42,150 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:25:42,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:25:42,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1f5a09db)
2020-07-06 22:25:42,165 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:25:42,166 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:25:42,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:42,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41378c3c)
2020-07-06 22:25:42,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:42,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40c8f79d)
2020-07-06 22:25:42,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:42,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9bedaf5)
2020-07-06 22:25:42,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:42,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46651ec8)
2020-07-06 22:25:42,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:42,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b4e3c54)
2020-07-06 22:25:42,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:42,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c3d40bf)
2020-07-06 22:25:42,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:42,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43ab4cbf)
2020-07-06 22:25:48,867 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:25:48,868 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:25:48,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:25:48,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2291dedb)
2020-07-06 22:25:48,885 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:25:48,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:25:48,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:48,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@326728a9)
2020-07-06 22:25:48,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:48,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1fedd362)
2020-07-06 22:25:48,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:48,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27725859)
2020-07-06 22:25:48,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:48,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@bb92d6a)
2020-07-06 22:25:48,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:48,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@906ed4)
2020-07-06 22:25:48,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:48,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7117db67)
2020-07-06 22:25:48,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:48,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4492e58c)
2020-07-06 22:25:49,018 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:25:49,019 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:25:49,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:25:49,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@51734a0a)
2020-07-06 22:25:49,023 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:25:49,028 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:25:49,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:49,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bacbd1f)
2020-07-06 22:25:49,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:49,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@780341f)
2020-07-06 22:25:49,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:49,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@167b183d)
2020-07-06 22:25:49,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:49,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d9323e2)
2020-07-06 22:25:49,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:49,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1319390a)
2020-07-06 22:25:49,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:49,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15bfd7ba)
2020-07-06 22:25:49,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:49,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bcb8fc0)
2020-07-06 22:25:56,202 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:25:56,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:25:56,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:25:56,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@16402822)
2020-07-06 22:25:56,207 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:25:56,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:25:56,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:56,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39e8ab92)
2020-07-06 22:25:56,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:56,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3292ea99)
2020-07-06 22:25:56,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:56,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e240d80)
2020-07-06 22:25:56,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:56,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7932295e)
2020-07-06 22:25:56,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:56,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fab9d1)
2020-07-06 22:25:56,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:56,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20194dd5)
2020-07-06 22:25:56,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:25:56,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e9f1c5b)
2020-07-06 22:27:21,927 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:27:21,928 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:27:21,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:27:21,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4ec2854c)
2020-07-06 22:27:21,933 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:27:21,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:27:21,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:21,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48802795)
2020-07-06 22:27:21,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:21,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a65466a)
2020-07-06 22:27:21,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:21,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70183396)
2020-07-06 22:27:21,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:21,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2aaa203c)
2020-07-06 22:27:21,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:21,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63df0673)
2020-07-06 22:27:21,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:21,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43a94a74)
2020-07-06 22:27:21,943 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:21,943 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@721c4514)
2020-07-06 22:27:22,008 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:27:22,009 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:27:22,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:27:22,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@239e9f69)
2020-07-06 22:27:22,017 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:27:22,022 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:27:22,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:22,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a258c69)
2020-07-06 22:27:22,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:22,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11534140)
2020-07-06 22:27:22,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:22,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f0325ba)
2020-07-06 22:27:22,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:22,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8b18ce4)
2020-07-06 22:27:22,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:22,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e310f5f)
2020-07-06 22:27:22,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:22,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45630e98)
2020-07-06 22:27:22,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:22,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38bcd7b)
2020-07-06 22:27:26,883 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:27:26,884 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:27:26,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:27:26,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1d9cc25f)
2020-07-06 22:27:26,898 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:27:26,900 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:27:26,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54cb8778)
2020-07-06 22:27:26,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f2c2acd)
2020-07-06 22:27:26,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dd4d6db)
2020-07-06 22:27:26,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76217304)
2020-07-06 22:27:26,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ed9daff)
2020-07-06 22:27:26,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,916 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@702dfdab)
2020-07-06 22:27:26,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b649f7b)
2020-07-06 22:27:26,961 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:27:26,962 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:27:26,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:27:26,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3b0bf7ef)
2020-07-06 22:27:26,967 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:27:26,968 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:27:26,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36bb9996)
2020-07-06 22:27:26,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@623330b5)
2020-07-06 22:27:26,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5026f44c)
2020-07-06 22:27:26,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34f6d528)
2020-07-06 22:27:26,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5eeb9d09)
2020-07-06 22:27:26,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2526a8f9)
2020-07-06 22:27:26,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:26,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4245ac85)
2020-07-06 22:27:35,323 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:27:35,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:27:35,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:27:35,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5b81c635)
2020-07-06 22:27:35,333 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:27:35,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:27:35,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:35,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c6d3cb5)
2020-07-06 22:27:35,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:35,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67095c78)
2020-07-06 22:27:35,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:35,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@183d27e4)
2020-07-06 22:27:35,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:35,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d58eab8)
2020-07-06 22:27:35,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:35,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58c5ff32)
2020-07-06 22:27:35,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:35,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@758282ce)
2020-07-06 22:27:35,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:35,347 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f1999d)
2020-07-06 22:27:44,075 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:27:44,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:27:44,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:27:44,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2dd6895c)
2020-07-06 22:27:44,082 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:27:44,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:27:44,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:44,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67b0ac2e)
2020-07-06 22:27:44,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:44,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31de20df)
2020-07-06 22:27:44,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:44,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28095cef)
2020-07-06 22:27:44,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:44,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@318cacdb)
2020-07-06 22:27:44,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:44,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53bfa718)
2020-07-06 22:27:44,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:44,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13a7bd68)
2020-07-06 22:27:44,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:27:44,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@712b75d7)
2020-07-06 22:28:54,544 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:28:54,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:28:54,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:28:54,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1f033b68)
2020-07-06 22:28:54,556 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:28:54,560 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:28:54,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:28:54,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@450880eb)
2020-07-06 22:28:54,563 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:28:54,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e619df7)
2020-07-06 22:28:54,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:28:54,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29d3b274)
2020-07-06 22:28:54,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:28:54,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f0d045d)
2020-07-06 22:28:54,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:28:54,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e83c68f)
2020-07-06 22:28:54,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:28:54,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@caf688d)
2020-07-06 22:28:54,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:28:54,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38db2b7e)
2020-07-06 22:29:20,536 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-06 22:29:20,537 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-06 22:29:20,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-06 22:29:20,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=13, subCategoryId=24, name=boost1, description=Document{{itemProperties=best for 3 months contains 40% protein, sellerName=nescafe, disclaimer=good for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@68fb00f)
2020-07-06 22:29:20,542 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-06 22:29:20,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-06 22:29:20,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:29:20,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56ebb53e)
2020-07-06 22:29:20,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:29:20,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cf62dd3)
2020-07-06 22:29:20,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:29:20,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a1d93d2)
2020-07-06 22:29:20,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:29:20,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51694156)
2020-07-06 22:29:20,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:29:20,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a205c00)
2020-07-06 22:29:20,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:29:20,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57356a22)
2020-07-06 22:29:20,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-06 22:29:20,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11f0e015)
