2020-07-20 00:00:01,593 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=27}} for Document{{}} fields.
2020-07-20 00:00:01,602 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:01,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:01,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f15a9fc)
2020-07-20 00:00:01,611 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-20 00:00:01,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:01,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:01,619 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11d2546e)
2020-07-20 00:00:01,619 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:01,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15edc28c)
2020-07-20 00:00:01,621 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:01,622 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50ef5e55)
2020-07-20 00:00:10,437 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=6}} for Document{{}} fields.
2020-07-20 00:00:10,451 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:10,485 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:00:10,554 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-5] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-20 00:00:10,580 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-20 00:00:10,582 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:10,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:10,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ac892e2)
2020-07-20 00:00:10,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:10,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ece569a)
2020-07-20 00:00:10,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:10,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52d6b4fc)
2020-07-20 00:00:15,753 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=27}} for Document{{}} fields.
2020-07-20 00:00:15,754 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:15,757 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:15,754 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "27"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:00:15,758 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44f682ec)
2020-07-20 00:00:36,028 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=27}} for Document{{}} fields.
2020-07-20 00:00:36,029 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:36,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:36,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=300.0, discount=10, discountPrice=270.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7947d82e)
2020-07-20 00:00:36,037 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=6}} for Document{{}} fields.
2020-07-20 00:00:36,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-20 00:00:36,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-20 00:00:36,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@77803976)
2020-07-20 00:00:36,045 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-20 00:00:36,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:36,052 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "24"}}, Fields: {}, Sort: {}
2020-07-20 00:00:36,054 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-20 00:00:36,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-20 00:00:36,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@73bfb35e)
2020-07-20 00:00:36,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@73bfb35e, Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-20 00:00:36,060 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-07-20 00:00:36,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@73bfb35e, Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-20 00:00:36,063 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=6}} for Document{{}} fields.
2020-07-20 00:00:36,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-20 00:00:36,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-20 00:00:36,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7c1c7dc)
2020-07-20 00:00:36,070 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-20 00:00:36,071 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:36,074 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-20 00:00:36,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-20 00:00:36,077 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-20 00:00:36,078 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@96ab139)
2020-07-20 00:00:36,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@96ab139, Document{{_id=13, name=cat, description=upto 10% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-20 00:00:36,080 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-07-20 00:00:36,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@96ab139, Document{{_id=13, name=cat, description=upto 10% off, offer=34, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-20 00:00:36,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@7947d82e, Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:36,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class]
2020-07-20 00:00:36,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@7947d82e, Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:36,172 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=27}} for Document{{}} fields.
2020-07-20 00:00:36,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:36,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:36,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e3b1540)
2020-07-20 00:00:41,119 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=6}} for Document{{}} fields.
2020-07-20 00:00:41,121 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:41,127 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:00:41,143 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-07-20 00:00:41,144 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:00:41,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:41,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=25, itemId=6, actualPrice=100.0, discount=5, discountPrice=95.0, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@451063bd)
2020-07-20 00:00:41,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:41,151 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=26, itemId=6, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ae4d6d1)
2020-07-20 00:00:41,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:00:41,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, itemId=6, actualPrice=50.0, discount=10, discountPrice=45.0, value=0.5, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55d8b91c)
2020-07-20 00:01:46,351 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:01:46,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 00:01:46,459 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-5] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-20 00:01:46,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:01:50,838 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-20 00:01:50,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-20 00:01:50,843 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2e6c6c26)
2020-07-20 00:01:50,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-20 00:01:50,844 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@78b4eb19)
2020-07-20 00:01:50,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-20 00:01:50,846 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7329d531)
2020-07-20 00:01:50,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-20 00:01:50,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@495d4aed)
2020-07-20 00:01:50,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-20 00:01:50,850 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@41d12bc)
2020-07-20 00:01:50,851 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-20 00:01:50,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5b2edd05)
2020-07-20 00:01:50,853 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-20 00:01:50,854 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@66931b0c)
2020-07-20 00:01:50,854 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-20 00:01:50,855 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@453a2f11)
2020-07-20 00:01:51,678 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:01:51,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:01:52,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-20 00:01:52,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-20 00:01:52,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2701c753)
2020-07-20 00:01:52,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-20 00:01:52,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@123ee505)
2020-07-20 00:01:52,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-20 00:01:52,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5f029ac1)
2020-07-20 00:01:52,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-20 00:01:52,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@43f8197e)
2020-07-20 00:01:52,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-20 00:01:52,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@6a6a750d)
2020-07-20 00:01:52,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-20 00:01:52,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@f99b388)
2020-07-20 00:01:52,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-20 00:01:52,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4406f428)
2020-07-20 00:01:52,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-20 00:01:52,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@47b6263f)
2020-07-20 00:01:54,161 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-07-20 00:01:54,171 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-07-20 00:01:55,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:01:59,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:01:59,775 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-20 00:01:59,777 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:04,141 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:02:04,161 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 00:02:04,161 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:02:11,247 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:02:11,251 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:02:11,253 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:11,255 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:11,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60d61fc5)
2020-07-20 00:02:11,257 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:11,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53631a64)
2020-07-20 00:02:11,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:11,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bc86c6e)
2020-07-20 00:02:11,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:11,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@440eb322)
2020-07-20 00:02:27,266 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{}} fields.
2020-07-20 00:02:27,268 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:02:27,273 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-20 00:02:27,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:27,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:27,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:27,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10fcf8f7)
2020-07-20 00:02:39,052 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=14}} for Document{{}} fields.
2020-07-20 00:02:39,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:39,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ecde1d9)
2020-07-20 00:02:39,060 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-07-20 00:02:39,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-20 00:02:39,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-20 00:02:39,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@392f5c7c)
2020-07-20 00:02:39,068 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-20 00:02:39,069 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:39,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,074 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28fda1a9)
2020-07-20 00:02:39,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,077 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44d8bd0d)
2020-07-20 00:02:39,078 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bdaa4dc)
2020-07-20 00:02:39,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,081 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38d5db67)
2020-07-20 00:02:39,083 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-20 00:02:39,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-20 00:02:39,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, offer=10, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-20 00:02:39,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, offer=10, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7cd12f49)
2020-07-20 00:02:39,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7cd12f49, Document{{_id=27, categoryId=14, name=shopnow, offer=10, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-20 00:02:39,088 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, name, offer, _class]
2020-07-20 00:02:39,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7cd12f49, Document{{_id=27, categoryId=14, name=shopnow, offer=10, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-20 00:02:39,090 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{}} fields.
2020-07-20 00:02:39,092 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-20 00:02:39,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-20 00:02:39,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5283984b)
2020-07-20 00:02:39,096 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-20 00:02:39,097 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:39,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@449b6f9f)
2020-07-20 00:02:39,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fa9830c)
2020-07-20 00:02:39,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4af748d7)
2020-07-20 00:02:39,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,104 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@478d002)
2020-07-20 00:02:39,107 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-20 00:02:39,108 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-20 00:02:39,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-20 00:02:39,112 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6842f11a)
2020-07-20 00:02:39,113 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@6842f11a, Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-20 00:02:39,113 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-07-20 00:02:39,115 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@6842f11a, Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-20 00:02:39,116 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@7ecde1d9, Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class]
2020-07-20 00:02:39,119 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@7ecde1d9, Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,184 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=14}} for Document{{}} fields.
2020-07-20 00:02:39,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:39,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:39,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bcea7b2)
2020-07-20 00:02:42,217 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-07-20 00:02:42,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:42,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:42,222 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:02:42,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d5042d2)
2020-07-20 00:02:42,228 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:02:42,230 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:42,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:42,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e36ba96)
2020-07-20 00:02:42,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:42,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29902c8a)
2020-07-20 00:02:42,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:42,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@673274db)
2020-07-20 00:02:42,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:42,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d189a59)
2020-07-20 00:02:48,005 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=15}} for Document{{}} fields.
2020-07-20 00:02:48,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "15"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:02:48,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:48,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:48,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bcc2f98)
2020-07-20 00:02:48,017 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "15"}}, Fields: {}, Sort: {}
2020-07-20 00:02:48,019 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:50,149 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{}} fields.
2020-07-20 00:02:50,151 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:50,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:50,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ba998cb)
2020-07-20 00:02:50,158 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:02:50,163 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:02:50,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:02:50,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:50,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ca609b8)
2020-07-20 00:02:50,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:50,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a25f03b)
2020-07-20 00:02:50,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:50,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@413f9178)
2020-07-20 00:02:50,172 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:02:50,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@451d15bc)
2020-07-20 00:03:15,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:15,215 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:03:15,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:15,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cc0df21)
2020-07-20 00:03:15,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@665116ab)
2020-07-20 00:03:15,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@457c8160)
2020-07-20 00:03:15,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ee1a346)
2020-07-20 00:03:15,245 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:15,259 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:03:15,260 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:15,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38e299af)
2020-07-20 00:03:15,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69594f86)
2020-07-20 00:03:15,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b02c48c)
2020-07-20 00:03:15,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@360ce85a)
2020-07-20 00:03:15,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:15,311 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:15,314 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:03:15,316 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:15,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,320 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:03:15,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74ca5cde)
2020-07-20 00:03:15,321 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:15,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3aea26c7)
2020-07-20 00:03:15,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d3bbe57)
2020-07-20 00:03:15,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e570d70)
2020-07-20 00:03:15,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:15,345 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:15,356 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:03:15,358 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:03:15,359 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:15,364 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:15,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49f2ea36)
2020-07-20 00:03:15,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e714537)
2020-07-20 00:03:15,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d9cafb2)
2020-07-20 00:03:15,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:15,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63d93a58)
2020-07-20 00:03:20,714 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:20,723 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:03:20,726 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:20,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55759ddf)
2020-07-20 00:03:20,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45d3905a)
2020-07-20 00:03:20,731 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,732 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e54fd7b)
2020-07-20 00:03:20,732 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3aaeaafd)
2020-07-20 00:03:20,746 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:03:20,760 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:03:20,761 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:03:20,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78a5e0d7)
2020-07-20 00:03:20,765 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@194062ab)
2020-07-20 00:03:20,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c9a8535)
2020-07-20 00:03:20,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:03:20,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5720db80)
2020-07-20 00:04:25,526 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:25,549 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:04:25,556 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:25,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@433cd79)
2020-07-20 00:04:25,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@699d4dcf)
2020-07-20 00:04:25,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7323a9a1)
2020-07-20 00:04:25,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@457d02ca)
2020-07-20 00:04:25,597 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:25,645 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:04:25,648 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:25,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@566298c1)
2020-07-20 00:04:25,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53793d29)
2020-07-20 00:04:25,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@511959d9)
2020-07-20 00:04:25,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39f341a1)
2020-07-20 00:04:25,700 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:25,719 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:04:25,723 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:25,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,727 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@639af033)
2020-07-20 00:04:25,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e990a3c)
2020-07-20 00:04:25,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4511411f)
2020-07-20 00:04:25,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,736 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52c12576)
2020-07-20 00:04:25,762 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:25,767 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:04:25,768 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:25,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6dedac77)
2020-07-20 00:04:25,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50be0ec)
2020-07-20 00:04:25,792 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5673025)
2020-07-20 00:04:25,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:25,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15fffcf1)
2020-07-20 00:04:25,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:25,894 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:04:25,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:25,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:25,955 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:04:25,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:31,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:31,031 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{}} fields.
2020-07-20 00:04:31,033 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:31,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:31,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a9673bf)
2020-07-20 00:04:31,040 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-20 00:04:31,041 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:33,049 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-07-20 00:04:33,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:33,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:04:33,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:33,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@398a2f6e)
2020-07-20 00:04:33,059 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:04:33,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:04:33,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:33,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@166a9a68)
2020-07-20 00:04:33,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:33,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26ef5fd0)
2020-07-20 00:04:33,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:33,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73d16158)
2020-07-20 00:04:33,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:04:33,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b9e4df9)
2020-07-20 00:04:47,060 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:04:47,060 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 00:05:07,798 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-07-20 00:05:07,800 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-20 00:05:07,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-20 00:05:07,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@edd96e0)
2020-07-20 00:05:07,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@edd96e0, Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Fresh, sellerName=thavare, disclaimer=best for 2 weeks}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-20 00:05:07,815 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-20 00:05:07,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@edd96e0, Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Fresh, sellerName=thavare, disclaimer=best for 2 weeks}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-20 00:05:07,819 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-20 00:05:07,821 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:05:07,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:05:07,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62c680ce)
2020-07-20 00:05:07,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:05:07,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ce70e0)
2020-07-20 00:05:07,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:05:07,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@db4d66)
2020-07-20 00:05:07,827 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-20 00:05:07,829 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-20 00:05:07,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-20 00:05:07,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@2f854562)
2020-07-20 00:05:07,833 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-20 00:05:07,834 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-20 00:05:07,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-20 00:05:07,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@791370ac)
2020-07-20 00:05:07,975 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:05:07,980 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:05:07,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:05:07,984 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:05:07,987 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d7eb151)
2020-07-20 00:05:07,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:05:07,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@159863f4)
2020-07-20 00:05:07,989 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:05:07,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78c52e2a)
2020-07-20 00:05:07,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:05:07,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a6ceca5)
2020-07-20 00:05:15,556 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:05:15,620 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 00:05:15,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:05:36,313 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-20 00:05:36,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-20 00:05:36,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4cdbb44c)
2020-07-20 00:05:36,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-20 00:05:36,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@71d258fe)
2020-07-20 00:05:36,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-20 00:05:36,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5c4f038d)
2020-07-20 00:05:36,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-20 00:05:36,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@3456b635)
2020-07-20 00:05:36,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-20 00:05:36,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@25be1d27)
2020-07-20 00:05:36,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-20 00:05:36,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@46c8b4c6)
2020-07-20 00:05:36,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-20 00:05:36,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@623f94f9)
2020-07-20 00:05:36,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-20 00:05:36,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@63596195)
2020-07-20 00:05:37,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:05:37,609 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:05:42,488 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:05:42,494 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-20 00:05:42,495 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:05:50,451 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:05:50,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:05:50,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 00:06:05,694 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:06:24,994 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:06:25,000 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:06:25,002 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:06:25,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:25,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15ca1bd)
2020-07-20 00:06:25,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:25,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26d9c712)
2020-07-20 00:06:25,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:25,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ab4a6d2)
2020-07-20 00:06:25,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:25,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17c98d24)
2020-07-20 00:06:46,597 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:06:46,601 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:06:46,606 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:06:46,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25c1da14)
2020-07-20 00:06:46,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@577378dc)
2020-07-20 00:06:46,613 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73c05c70)
2020-07-20 00:06:46,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@734cad67)
2020-07-20 00:06:46,629 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:06:46,640 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:06:46,645 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:06:46,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@603de1c0)
2020-07-20 00:06:46,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@446d334a)
2020-07-20 00:06:46,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1548234a)
2020-07-20 00:06:46,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:06:46,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2cb9f29)
2020-07-20 00:06:52,714 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:06:52,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 00:06:52,778 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:08:38,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:08:38,709 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 00:08:38,710 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:08:38,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fdba621)
2020-07-20 00:08:38,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5743c19)
2020-07-20 00:08:38,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50f6f276)
2020-07-20 00:08:38,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ddf3b5e)
2020-07-20 00:08:38,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f07746a)
2020-07-20 00:08:38,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4bb71967)
2020-07-20 00:08:38,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2cb53725)
2020-07-20 00:08:38,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@814fc26)
2020-07-20 00:08:38,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:08:38,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ce46d6a)
2020-07-20 00:09:59,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:09:59,280 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:09:59,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:09:59,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:09:59,296 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:09:59,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:09:59,421 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:09:59,430 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:09:59,432 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:09:59,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a8b74a0)
2020-07-20 00:09:59,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4df57480)
2020-07-20 00:09:59,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bdc477a)
2020-07-20 00:09:59,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@657b8c2)
2020-07-20 00:09:59,477 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:09:59,488 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:09:59,490 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:09:59,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@491c7114)
2020-07-20 00:09:59,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bc3d4db)
2020-07-20 00:09:59,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d0ef76b)
2020-07-20 00:09:59,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e898608)
2020-07-20 00:09:59,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:09:59,584 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 00:09:59,585 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:09:59,590 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6248ed1c)
2020-07-20 00:09:59,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e0bf2eb)
2020-07-20 00:09:59,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f72df00)
2020-07-20 00:09:59,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@580d346f)
2020-07-20 00:09:59,605 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,619 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d88127f)
2020-07-20 00:09:59,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cf53b8f)
2020-07-20 00:09:59,621 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,621 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@35d66dce)
2020-07-20 00:09:59,623 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,632 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4499957)
2020-07-20 00:09:59,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39ef784b)
2020-07-20 00:09:59,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:09:59,672 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 00:09:59,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:09:59,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e73e8ed)
2020-07-20 00:09:59,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57f5b735)
2020-07-20 00:09:59,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ca8f772)
2020-07-20 00:09:59,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b04b8b5)
2020-07-20 00:09:59,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a2117b8)
2020-07-20 00:09:59,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30175dd6)
2020-07-20 00:09:59,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b9f3fc1)
2020-07-20 00:09:59,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55a0eb17)
2020-07-20 00:09:59,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:09:59,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17febacc)
2020-07-20 00:10:35,700 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:10:35,705 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:10:35,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:10:35,725 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:10:35,730 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "22"}}, Fields: {}, Sort: {}
2020-07-20 00:10:35,731 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:10:35,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:10:35,868 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:10:35,869 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:10:35,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,882 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71599b52)
2020-07-20 00:10:35,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@295d1c11)
2020-07-20 00:10:35,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b078cbc)
2020-07-20 00:10:35,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37d39fc8)
2020-07-20 00:10:35,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:10:35,925 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 00:10:35,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:10:35,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5969e1df)
2020-07-20 00:10:35,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53da9d14)
2020-07-20 00:10:35,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2730483a)
2020-07-20 00:10:35,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:35,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@126ca582)
2020-07-20 00:10:36,070 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:10:36,076 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 00:10:36,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 00:10:36,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@226a6dbd)
2020-07-20 00:10:36,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d138636)
2020-07-20 00:10:36,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a166404)
2020-07-20 00:10:36,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74537af1)
2020-07-20 00:10:36,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a5e643)
2020-07-20 00:10:36,098 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44c6f2f7)
2020-07-20 00:10:36,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d59882f)
2020-07-20 00:10:36,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b2e387)
2020-07-20 00:10:36,115 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 00:10:36,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@280f9a6c)
2020-07-20 00:11:03,634 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 00:11:03,710 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 00:11:03,719 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 00:11:07,745 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-20 00:11:07,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-20 00:11:07,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@c7315ba)
2020-07-20 00:11:07,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-20 00:11:07,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@acda1e7)
2020-07-20 00:11:07,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-20 00:11:07,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@428612c8)
2020-07-20 00:11:07,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-20 00:11:07,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@e917f3)
2020-07-20 00:11:07,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-20 00:11:07,748 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@14230c91)
2020-07-20 00:11:07,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-20 00:11:07,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7306556b)
2020-07-20 00:11:07,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-20 00:11:07,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1640991)
2020-07-20 00:11:07,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-20 00:11:07,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@497ac0c1)
2020-07-20 00:11:11,944 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-20 00:11:11,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-20 00:11:11,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@75024b42)
2020-07-20 00:11:11,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-20 00:11:11,948 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@31c41dfe)
2020-07-20 00:11:11,948 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-20 00:11:11,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5ad89f3c)
2020-07-20 00:11:11,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-20 00:11:11,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@53fd2f9a)
2020-07-20 00:11:11,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-20 00:11:11,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@344236fc)
2020-07-20 00:11:11,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-20 00:11:11,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@25f8f667)
2020-07-20 00:11:11,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-20 00:11:11,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3bc7bc9b)
2020-07-20 00:11:11,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-20 00:11:11,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@17cd586)
2020-07-20 22:31:06,663 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 2924 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-20 22:31:06,730 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-20 22:31:06,731 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-20 22:31:11,101 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-20 22:31:11,139 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-20 22:31:11,177 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-20 22:31:11,179 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-20 22:31:11,180 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-20 22:31:11,180 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-20 22:31:11,181 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-20 22:31:11,182 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-20 22:31:11,182 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-20 22:31:11,183 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-20 22:31:11,184 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-20 22:31:11,185 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-20 22:31:11,185 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-20 22:31:11,186 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-20 22:31:11,187 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-20 22:31:11,188 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-20 22:31:11,188 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-20 22:31:11,446 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-20 22:31:11,447 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-20 22:31:11,458 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 317ms. Found 15 MongoDB repository interfaces.
2020-07-20 22:31:17,411 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-20 22:31:17,413 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-20 22:31:17,772 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-20 22:31:17,774 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-20 22:31:17,926 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-20 22:31:17,952 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-20 22:31:17,957 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-20 22:31:17,958 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-20 22:31:17,959 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-20 22:31:17,960 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-20 22:31:17,968 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-20 22:31:17,977 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-20 22:31:17,977 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-20 22:31:17,978 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-20 22:31:17,984 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-20 22:31:17,985 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-20 22:31:17,987 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-20 22:31:17,987 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-20 22:31:17,989 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-20 22:31:17,990 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-20 22:31:17,992 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-20 22:31:17,994 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-20 22:31:17,996 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-20 22:31:17,999 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-20 22:31:18,000 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-20 22:31:19,455 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-20 22:31:19,647 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-20 22:31:19,666 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-20 22:31:19,691 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-20 22:31:19,722 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-20 22:31:19,742 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-20 22:31:19,754 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-20 22:31:19,776 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-20 22:31:19,951 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-20 22:31:19,960 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-20 22:31:19,980 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-20 22:31:19,998 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-20 22:31:20,012 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-20 22:31:20,026 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-20 22:31:20,041 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-20 22:31:20,051 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-20 22:31:20,074 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-20 22:31:20,086 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-20 22:31:20,102 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-20 22:31:20,118 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-20 22:31:20,128 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-20 22:31:20,144 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-20 22:31:20,159 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-20 22:31:20,169 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-20 22:31:20,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-20 22:31:20,215 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-20 22:31:20,233 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-20 22:31:20,242 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-20 22:31:20,361 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-20 22:31:20,365 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-20 22:31:20,366 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-20 22:31:20,366 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-20 22:31:20,603 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-20 22:31:20,612 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-20 22:31:23,084 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-20 22:31:23,149 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-20 22:31:23,157 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-20 22:31:23,775 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 18.916 seconds (JVM running for 21.534)
2020-07-20 22:32:48,974 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:32:48,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:32:48,982 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:32:49,273 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-20 22:32:49,466 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-20 22:32:53,946 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:32:54,042 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 22:32:54,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:32:54,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:32:54,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75f0bbc1)
2020-07-20 22:32:54,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:32:54,172 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31052d0b)
2020-07-20 22:32:54,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:32:54,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3125c0e7)
2020-07-20 22:32:54,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:32:54,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70294faf)
2020-07-20 22:33:09,958 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:10,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:33:10,054 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:33:12,337 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:12,343 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 22:33:12,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:33:12,350 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@161b3457)
2020-07-20 22:33:12,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24938ae3)
2020-07-20 22:33:12,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f7de22c)
2020-07-20 22:33:12,357 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,357 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6dc99f17)
2020-07-20 22:33:12,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22bfa775)
2020-07-20 22:33:12,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ac3e553)
2020-07-20 22:33:12,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5aef08a5)
2020-07-20 22:33:12,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bff15c8)
2020-07-20 22:33:12,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:12,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@242491cd)
2020-07-20 22:33:21,201 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:21,265 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:33:21,273 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:33:25,396 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:25,403 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 22:33:25,405 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:33:25,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:25,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@722dd416)
2020-07-20 22:33:25,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:25,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6059a315)
2020-07-20 22:33:25,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:25,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6895dad5)
2020-07-20 22:33:25,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:25,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5eca8549)
2020-07-20 22:33:39,087 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:39,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:33:39,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:33:42,667 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:42,672 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-07-20 22:33:42,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:33:42,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:42,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dacd86f)
2020-07-20 22:33:42,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:33:42,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43eaa4c7)
2020-07-20 22:33:51,490 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:51,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:33:51,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:33:54,058 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:54,064 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-20 22:33:54,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:33:58,857 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:33:58,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:33:58,920 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:34:00,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:34:00,987 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-07-20 22:34:00,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:34:44,215 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:34:44,226 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:34:44,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:34:46,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:34:46,225 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 22:34:46,226 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:34:46,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7029ff11)
2020-07-20 22:34:46,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73b502c6)
2020-07-20 22:34:46,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46b268c9)
2020-07-20 22:34:46,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f4ed7ed)
2020-07-20 22:34:46,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a07662)
2020-07-20 22:34:46,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bd8e782)
2020-07-20 22:34:46,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ef92810)
2020-07-20 22:34:46,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4741679d)
2020-07-20 22:34:46,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:34:46,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44511a71)
2020-07-20 22:35:36,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "21"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:35:36,644 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "21"}}, Fields: {}, Sort: {}
2020-07-20 22:35:36,645 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "21"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:35:36,675 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=21}} for Document{{}} fields.
2020-07-20 22:35:36,693 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "21"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:35:36,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:35:36,736 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59862d3a)
2020-07-20 22:36:04,829 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:36:04,837 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 22:36:04,841 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:36:04,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51b16652)
2020-07-20 22:36:04,850 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,851 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a660156)
2020-07-20 22:36:04,851 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12c593bd)
2020-07-20 22:36:04,852 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,853 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62022ee)
2020-07-20 22:36:04,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c79578e)
2020-07-20 22:36:04,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@266f91e6)
2020-07-20 22:36:04,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1809a6ed)
2020-07-20 22:36:04,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f39d050)
2020-07-20 22:36:04,868 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:04,869 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9ea211e)
2020-07-20 22:36:33,737 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:36:33,742 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 22:36:33,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:36:33,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:33,751 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b788f85)
2020-07-20 22:36:33,752 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:33,752 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d5acd6f)
2020-07-20 22:36:33,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:33,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@335ba983)
2020-07-20 22:36:33,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:36:33,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@705f94c)
2020-07-20 22:41:44,590 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-20 22:41:44,592 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:41:44,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a975671)
2020-07-20 22:41:44,606 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:41:44,618 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 22:41:44,619 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:41:44,622 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,623 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@727eb00a)
2020-07-20 22:41:44,623 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f4b9626)
2020-07-20 22:41:44,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,626 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76c64398)
2020-07-20 22:41:44,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b7b0247)
2020-07-20 22:41:44,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c8217c2)
2020-07-20 22:41:44,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f0b40d2)
2020-07-20 22:41:44,631 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,632 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b151c28)
2020-07-20 22:41:44,632 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,633 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68ff5237)
2020-07-20 22:41:44,633 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:41:44,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@248f64ed)
2020-07-20 22:49:17,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:49:17,375 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:49:17,382 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:49:26,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:49:26,536 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 22:49:26,541 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:49:26,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:49:26,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42a4ac4a)
2020-07-20 22:49:26,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:49:26,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6327c3e4)
2020-07-20 22:49:26,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:49:26,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@170ab91)
2020-07-20 22:49:26,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:49:26,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a61bd78)
2020-07-20 22:52:47,589 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:52:47,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:54:38,516 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:54:38,620 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:54:38,635 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 22:54:59,578 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:55:21,320 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:55:21,332 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-07-20 22:55:21,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 22:55:21,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:55:21,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19683df0)
2020-07-20 22:55:21,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 22:55:21,351 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c208770)
2020-07-20 22:58:47,812 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 22:58:47,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 22:58:47,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:00:02,321 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:00:02,331 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:00:02,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:00:02,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:00:02,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4bdd24d4)
2020-07-20 23:00:02,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:00:02,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25480b27)
2020-07-20 23:00:02,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:00:02,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30d6b432)
2020-07-20 23:00:02,348 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:00:02,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38f6938a)
2020-07-20 23:04:04,867 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:04:04,884 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:04:04,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:04:04,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b4e171e)
2020-07-20 23:04:04,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@493461e7)
2020-07-20 23:04:04,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c3a3068)
2020-07-20 23:04:04,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@caa1b3a)
2020-07-20 23:04:04,908 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:04:04,914 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:04:04,915 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:04:04,918 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e180e6b)
2020-07-20 23:04:04,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@139dc013)
2020-07-20 23:04:04,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72eed336)
2020-07-20 23:04:04,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:04,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f6bfc6d)
2020-07-20 23:04:11,305 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:04:11,311 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:04:11,328 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:04:11,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c51d00d)
2020-07-20 23:04:11,335 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@778e026b)
2020-07-20 23:04:11,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5869f2c0)
2020-07-20 23:04:11,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@398aa923)
2020-07-20 23:04:11,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:04:11,363 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:04:11,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:04:11,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@157bdab)
2020-07-20 23:04:11,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4441fdcc)
2020-07-20 23:04:11,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7babed4c)
2020-07-20 23:04:11,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:11,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@344c55de)
2020-07-20 23:04:28,603 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:04:28,678 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:04:28,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:04:30,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:04:30,700 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 23:04:30,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:04:30,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@289d9ef)
2020-07-20 23:04:30,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53236e50)
2020-07-20 23:04:30,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68396a81)
2020-07-20 23:04:30,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a23ab5d)
2020-07-20 23:04:30,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46a94d57)
2020-07-20 23:04:30,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e30ea3c)
2020-07-20 23:04:30,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d7ee419)
2020-07-20 23:04:30,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a10dba8)
2020-07-20 23:04:30,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:04:30,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@365fea48)
2020-07-20 23:05:18,178 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:18,185 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 23:05:18,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:18,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23981133)
2020-07-20 23:05:18,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3224b754)
2020-07-20 23:05:18,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@567d47aa)
2020-07-20 23:05:18,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@511f707d)
2020-07-20 23:05:18,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32edf2e4)
2020-07-20 23:05:18,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25e47dfa)
2020-07-20 23:05:18,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19983efb)
2020-07-20 23:05:18,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@332e292d)
2020-07-20 23:05:18,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e09977e)
2020-07-20 23:05:18,218 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:18,223 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 23:05:18,226 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:18,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cd62175)
2020-07-20 23:05:18,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66d9de88)
2020-07-20 23:05:18,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,234 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72e0d26a)
2020-07-20 23:05:18,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@638e54a7)
2020-07-20 23:05:18,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ebe1c2a)
2020-07-20 23:05:18,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26bbaeeb)
2020-07-20 23:05:18,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52bc5bd4)
2020-07-20 23:05:18,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43061648)
2020-07-20 23:05:18,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:18,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3da71d4e)
2020-07-20 23:05:24,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:24,437 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:05:24,445 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:05:26,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:26,265 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:05:26,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:26,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:26,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a74bee8)
2020-07-20 23:05:26,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:26,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4abc19ff)
2020-07-20 23:05:26,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:26,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@355848bf)
2020-07-20 23:05:26,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:26,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f933175)
2020-07-20 23:05:29,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:29,362 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:05:29,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:05:31,752 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:31,757 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-07-20 23:05:31,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:31,760 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:31,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=17, itemId=3, actualPrice=75.0, discount=5, discountPrice=72.0, value=300, unit=Grm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64975a86)
2020-07-20 23:05:31,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:05:31,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=18, itemId=3, actualPrice=120.0, discount=8, discountPrice=111.0, value=550, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4df61154)
2020-07-20 23:05:34,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:35,054 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:05:35,054 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:05:37,273 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:37,281 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-07-20 23:05:37,282 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:40,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:40,093 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:05:40,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:05:42,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:42,033 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "7"}}, Fields: {}, Sort: {}
2020-07-20 23:05:42,035 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:45,211 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:45,267 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:05:45,267 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:05:47,376 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:47,380 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-07-20 23:05:47,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:53,868 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:53,924 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:05:53,933 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:05:55,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "17"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:55,942 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "17"}}, Fields: {}, Sort: {}
2020-07-20 23:05:55,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:05:58,498 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:05:58,511 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:05:58,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:06:22,882 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:06:22,886 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-07-20 23:06:22,887 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:06:22,889 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,890 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fc1a17c)
2020-07-20 23:06:22,890 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49cea1e2)
2020-07-20 23:06:22,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@723cf99c)
2020-07-20 23:06:22,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fd460f4)
2020-07-20 23:06:22,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dece633)
2020-07-20 23:06:22,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@211185dd)
2020-07-20 23:06:22,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3474787a)
2020-07-20 23:06:22,895 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@786b6dc0)
2020-07-20 23:06:22,896 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:22,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=21, itemId=1, actualPrice=120.0, discount=5, discountPrice=114.0, value=500, unit=gm, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24cd180)
2020-07-20 23:06:24,239 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:06:24,295 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-20 23:06:24,300 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-20 23:06:25,601 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:06:25,606 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:06:25,607 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:06:25,609 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:25,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4eff5a64)
2020-07-20 23:06:25,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:25,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a2c490d)
2020-07-20 23:06:25,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:25,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dfdcd46)
2020-07-20 23:06:25,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:06:25,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32c6e492)
2020-07-20 23:07:14,850 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:07:14,858 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:07:14,859 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:07:14,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f35307c)
2020-07-20 23:07:14,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7904c115)
2020-07-20 23:07:14,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51885251)
2020-07-20 23:07:14,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73c3323d)
2020-07-20 23:07:14,887 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-20 23:07:14,894 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-07-20 23:07:14,895 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-20 23:07:14,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750.0, unit=g, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d6a67dd)
2020-07-20 23:07:14,898 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@493c7a8)
2020-07-20 23:07:14,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=2, actualPrice=150.0, discount=10, discountPrice=135.0, value=2, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f34bd11)
2020-07-20 23:07:14,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-20 23:07:14,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, itemId=2, actualPrice=120.0, discount=8, discountPrice=111.0, value=100, unit=gm, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47000f50)
