2020-11-02 22:52:18,168 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 7405 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-11-02 22:52:18,180 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-11-02 22:52:18,181 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-11-02 22:52:20,997 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-11-02 22:52:21,017 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-11-02 22:52:21,048 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-11-02 22:52:21,049 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-11-02 22:52:21,050 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-11-02 22:52:21,050 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-11-02 22:52:21,051 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-11-02 22:52:21,052 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-11-02 22:52:21,052 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-11-02 22:52:21,053 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-11-02 22:52:21,053 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-11-02 22:52:21,054 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-11-02 22:52:21,055 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-11-02 22:52:21,056 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-11-02 22:52:21,056 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-11-02 22:52:21,059 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-11-02 22:52:21,059 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-11-02 22:52:21,257 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-11-02 22:52:21,258 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-11-02 22:52:21,264 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 245ms. Found 15 MongoDB repository interfaces.
2020-11-02 22:52:24,261 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-02 22:52:24,262 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-02 22:52:24,580 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-02 22:52:24,582 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-02 22:52:24,643 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-11-02 22:52:24,652 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-11-02 22:52:24,654 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-11-02 22:52:24,656 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-11-02 22:52:24,658 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-11-02 22:52:24,662 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-11-02 22:52:24,664 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-11-02 22:52:24,666 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-11-02 22:52:24,667 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-11-02 22:52:24,668 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-11-02 22:52:24,669 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-11-02 22:52:24,670 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-11-02 22:52:24,671 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-11-02 22:52:24,672 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-11-02 22:52:24,673 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-11-02 22:52:24,674 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-11-02 22:52:24,676 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-11-02 22:52:24,677 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-11-02 22:52:24,678 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-11-02 22:52:24,680 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-11-02 22:52:24,681 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-11-02 22:52:25,186 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-11-02 22:52:25,324 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-11-02 22:52:25,342 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-11-02 22:52:25,393 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-11-02 22:52:25,416 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-11-02 22:52:25,434 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-11-02 22:52:25,448 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-11-02 22:52:25,468 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-11-02 22:52:25,658 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-11-02 22:52:25,677 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-11-02 22:52:25,694 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-11-02 22:52:25,714 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-11-02 22:52:25,729 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-11-02 22:52:25,755 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-11-02 22:52:25,774 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-11-02 22:52:25,784 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-11-02 22:52:25,816 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-11-02 22:52:25,828 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-11-02 22:52:25,849 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-11-02 22:52:25,873 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-11-02 22:52:25,893 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-11-02 22:52:25,910 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-11-02 22:52:25,927 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-11-02 22:52:25,938 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-11-02 22:52:25,969 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-11-02 22:52:25,984 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-11-02 22:52:25,999 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-11-02 22:52:26,011 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-11-02 22:52:26,129 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-11-02 22:52:26,131 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-02 22:52:26,132 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-11-02 22:52:26,133 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-02 22:52:26,396 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-11-02 22:52:26,406 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-11-02 22:52:28,317 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-11-02 22:52:28,363 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-11-02 22:52:28,371 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-11-02 22:52:28,674 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 11.628 seconds (JVM running for 12.524)
2020-11-02 22:53:13,827 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-02 22:53:13,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:13,995 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3c8a447c)
2020-11-02 22:53:13,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:13,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@b939a69)
2020-11-02 22:53:13,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:13,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@416b4bb4)
2020-11-02 22:53:13,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:14,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2a1f8762)
2020-11-02 22:53:14,001 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:14,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@44589ff9)
2020-11-02 22:53:14,003 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:14,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@530f05c9)
2020-11-02 22:53:18,187 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 22:53:18,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 22:53:18,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 22:53:18,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@110452ee)
2020-11-02 22:53:21,233 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-02 22:53:21,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:21,240 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2a21ebc4)
2020-11-02 22:53:21,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:21,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@24e600f0)
2020-11-02 22:53:21,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:21,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@20d980b4)
2020-11-02 22:53:21,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:21,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@65db0acb)
2020-11-02 22:53:21,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:21,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4001b27f)
2020-11-02 22:53:21,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:21,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@54f4cb0f)
2020-11-02 22:53:24,721 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-02 22:53:24,733 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-4] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-11-02 22:53:28,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-02 22:53:28,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:28,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@19c0a678)
2020-11-02 22:53:28,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:28,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@17074b30)
2020-11-02 22:53:28,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:28,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@563a410b)
2020-11-02 22:53:28,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:28,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4a55ded2)
2020-11-02 22:53:28,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:28,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@67265263)
2020-11-02 22:53:28,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:28,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@32a39302)
2020-11-02 22:53:30,624 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-02 22:53:41,291 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-02 22:53:41,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:41,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4a02e115)
2020-11-02 22:53:41,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:41,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@44c50625)
2020-11-02 22:53:41,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:53:41,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@40fa8a65)
2020-11-02 22:53:41,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:41,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5f80c1e)
2020-11-02 22:53:41,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:41,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@582f4ffd)
2020-11-02 22:53:41,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:53:41,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@34b78ef3)
2020-11-02 22:53:49,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 22:53:49,572 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-8] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-11-02 22:53:49,631 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 22:53:49,637 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-9] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-11-02 22:54:03,780 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-02 22:54:10,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 22:54:20,897 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 22:54:20,900 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 22:56:03,603 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 22:56:03,604 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 22:56:03,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 22:56:03,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@7029e34e)
2020-11-02 22:56:03,609 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 22:56:03,611 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 22:56:03,613 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 22:56:03,620 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@10fbccd9)
2020-11-02 22:56:03,638 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-02 22:56:03,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2527d105, Document{{_id=4, categoryId=1, subCategoryId=1, name=Soffola, description=Document{{itemProperties=Soffola active, sellerName=ITC, disclaimer=best for all age}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 22:56:03,694 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-02 22:56:13,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 22:56:13,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 22:56:13,299 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 22:56:21,975 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 22:56:21,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 22:56:36,323 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-02 22:56:36,325 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 22:56:36,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 22:56:36,329 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@b857916)
2020-11-02 22:56:36,331 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 22:56:36,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 22:56:36,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 22:56:36,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1ad5a69)
2020-11-02 22:56:36,342 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-02 22:56:36,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5a7ac4f8, Document{{_id=5, categoryId=2, subCategoryId=1, name=Saffola, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 22:56:36,349 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-02 22:56:40,457 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 22:56:40,558 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 22:56:40,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 22:56:44,147 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-02 22:56:44,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:44,150 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@431625c2)
2020-11-02 22:56:44,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:56:44,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@734a6416)
2020-11-02 22:56:44,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:56:44,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6d3b8850)
2020-11-02 22:56:44,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:44,155 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@450beec9)
2020-11-02 22:56:44,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:44,157 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3741eb9f)
2020-11-02 22:56:44,157 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:44,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@178b53b5)
2020-11-02 22:56:46,099 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-02 22:56:46,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 22:56:46,105 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 22:56:46,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6d55ce5c)
2020-11-02 22:56:49,017 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-02 22:56:49,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:49,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@37d860d5)
2020-11-02 22:56:49,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:56:49,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5b4ac3ff)
2020-11-02 22:56:49,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-02 22:56:49,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6257062)
2020-11-02 22:56:49,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:49,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@235d8dec)
2020-11-02 22:56:49,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:49,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@57f79f9a)
2020-11-02 22:56:49,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-02 22:56:49,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5a2ffba0)
2020-11-02 22:56:50,580 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-02 22:56:53,432 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 22:57:02,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 22:57:02,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 22:57:28,362 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-02 22:57:28,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 22:57:28,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 22:57:28,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1098e56e)
2020-11-02 22:57:28,369 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-02 22:57:28,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 22:57:28,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 22:57:28,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@698effb9)
2020-11-02 22:57:28,377 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-02 22:57:28,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@52ed47e3, Document{{_id=6, categoryId=2, subCategoryId=3, name=S, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 22:57:28,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-02 23:00:20,052 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 23:00:20,188 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:00:20,188 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:00:24,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:00:24,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:00:40,566 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:00:40,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 23:00:40,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:00:40,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5462c358)
2020-11-02 23:00:40,571 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:00:40,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 23:00:40,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:00:40,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2ee93707)
2020-11-02 23:00:40,577 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-02 23:00:40,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@281f7cc3, Document{{_id=7, categoryId=1, subCategoryId=1, name=S, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:00:40,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-02 23:02:55,025 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 23:02:55,112 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:02:55,110 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:02:57,073 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:02:57,086 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:03:06,897 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:03:06,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 23:03:06,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:03:06,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@13a4e269)
2020-11-02 23:03:06,908 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:03:06,909 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 23:03:06,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:03:06,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4540339c)
2020-11-02 23:03:06,914 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-02 23:03:06,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@330ac1c1, Document{{_id=8, categoryId=1, subCategoryId=1, name=sd, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:03:06,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-02 23:03:06,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@330ac1c1, Document{{_id=8, categoryId=1, subCategoryId=1, name=sd, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:03:06,940 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:03:06,942 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:03:06,974 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-02 23:03:06,975 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 23:03:06,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil}})
2020-11-02 23:03:06,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@9470d40)
2020-11-02 23:03:06,981 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-02 23:03:06,983 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 23:03:06,985 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Sunflower}})
2020-11-02 23:03:06,986 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Sunflower}}, com.initializers.services.apiservices.model.item.ItemSubCategory@11c754ae)
2020-11-02 23:03:07,067 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-02 23:03:07,074 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-11-02 23:03:07,075 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:03:07,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:03:07,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:03:07,169 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-02 23:03:07,179 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-11-02 23:03:07,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:03:11,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:03:11,670 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:03:36,241 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=8}} for Document{{}} fields.
2020-11-02 23:03:36,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-02 23:03:36,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=8, categoryId=1, subCategoryId=1, name=sd, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:03:36,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=8, categoryId=1, subCategoryId=1, name=sd, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1805692e)
2020-11-02 23:03:36,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1805692e, Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:03:36,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-11-02 23:03:36,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1805692e, Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:03:36,263 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:03:36,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:03:36,268 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-02 23:03:36,270 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 23:03:36,273 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Oil}})
2020-11-02 23:03:36,274 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@6c9870be)
2020-11-02 23:03:36,274 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-02 23:03:36,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 23:03:36,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Sunflower}})
2020-11-02 23:03:36,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Sunflower}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4521e725)
2020-11-02 23:04:04,663 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=8}} for Document{{}} fields.
2020-11-02 23:04:04,664 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-02 23:04:04,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:04:04,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@77a426e7)
2020-11-02 23:04:04,668 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:04:04,670 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:04,675 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-11-02 23:04:04,676 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:04,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-02 23:04:04,691 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=8}} for Document{{}} fields.
2020-11-02 23:04:04,692 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-02 23:04:04,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:04:04,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@53b9a4cc)
2020-11-02 23:04:04,697 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:04:04,700 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:04,703 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:04:04,708 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 23:04:04,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:04:04,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@76eeb7e0)
2020-11-02 23:04:04,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@76eeb7e0, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:04:04,717 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-02 23:04:04,721 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@76eeb7e0, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:04:04,722 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=8}} for Document{{}} fields.
2020-11-02 23:04:04,724 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-02 23:04:04,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:04:04,727 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4aee883b)
2020-11-02 23:04:04,729 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:04:04,730 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:04,734 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:04:04,735 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 23:04:04,737 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:04:04,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@331a98b6)
2020-11-02 23:04:04,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@331a98b6, Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:04:04,741 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-02 23:04:04,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@331a98b6, Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:04:04,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@d2c90f7, Document{{_id=6, itemId=8, actualPrice=120.0, discount=10, discountPrice=108.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-02 23:04:04,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-02 23:04:11,777 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:04:11,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:04:14,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-02 23:04:14,347 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-02 23:04:14,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-02 23:04:16,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-02 23:04:16,752 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-11-02 23:04:16,753 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:34,171 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=8}} for Document{{}} fields.
2020-11-02 23:04:34,172 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-02 23:04:34,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:04:34,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1234e6c5)
2020-11-02 23:04:34,175 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:04:34,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:34,179 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-11-02 23:04:34,181 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:34,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-02 23:04:34,187 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=8}} for Document{{}} fields.
2020-11-02 23:04:34,188 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-02 23:04:34,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:04:34,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2a95880e)
2020-11-02 23:04:34,193 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:04:34,194 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:34,197 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:04:34,198 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-02 23:04:34,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:04:34,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1f224157)
2020-11-02 23:04:34,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@1f224157, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:04:34,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-02 23:04:34,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@1f224157, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-02 23:04:34,206 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=8}} for Document{{}} fields.
2020-11-02 23:04:34,207 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-02 23:04:34,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-02 23:04:34,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=8, categoryId=1, subCategoryId=1, name=Saffola, description=Document{{itemProperties=Saffola Active, sellerName=ITC, disclaimer=best before 3 months}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@248dddb6)
2020-11-02 23:04:34,213 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-11-02 23:04:34,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-02 23:04:34,218 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-02 23:04:34,218 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-02 23:04:34,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:04:34,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@22dee4d1)
2020-11-02 23:04:34,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@22dee4d1, Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:04:34,221 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-02 23:04:34,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@22dee4d1, Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-02 23:04:34,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@2f7b3124, Document{{_id=7, itemId=8, actualPrice=120.0, discount=10, discountPrice=108.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-02 23:04:34,223 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 14:03:09,706 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on Karthiks-MacBook-Air.local with PID 1326 (/Users/karthikh/git/Thavare_daily/apiservices/target/classes started by karthikh in /Users/karthikh/git/Thavare_daily/apiservices)
2020-11-07 14:03:09,713 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-11-07 14:03:09,714 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: prod
2020-11-07 14:03:11,629 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-11-07 14:03:11,655 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-11-07 14:03:11,715 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-11-07 14:03:11,716 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-11-07 14:03:11,718 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-11-07 14:03:11,721 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-11-07 14:03:11,722 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-11-07 14:03:11,722 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-11-07 14:03:11,723 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-11-07 14:03:11,723 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-11-07 14:03:11,724 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-11-07 14:03:11,725 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-11-07 14:03:11,726 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-11-07 14:03:11,727 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-11-07 14:03:11,748 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-11-07 14:03:11,750 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-11-07 14:03:11,750 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-11-07 14:03:11,992 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-11-07 14:03:11,995 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-11-07 14:03:12,027 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 370ms. Found 15 MongoDB repository interfaces.
2020-11-07 14:03:14,808 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:03:14,810 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:03:15,363 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:03:15,366 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:03:15,469 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-11-07 14:03:15,471 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-11-07 14:03:15,494 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-11-07 14:03:15,496 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-11-07 14:03:15,498 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-11-07 14:03:15,501 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-11-07 14:03:15,505 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-11-07 14:03:15,506 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-11-07 14:03:15,507 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-11-07 14:03:15,508 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-11-07 14:03:15,510 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-11-07 14:03:15,511 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-11-07 14:03:15,513 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-11-07 14:03:15,515 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-11-07 14:03:15,516 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-11-07 14:03:15,517 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-11-07 14:03:15,519 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-11-07 14:03:15,541 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-11-07 14:03:15,543 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-11-07 14:03:15,545 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-11-07 14:03:15,546 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-11-07 14:03:16,188 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-11-07 14:03:16,325 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-11-07 14:03:16,340 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-11-07 14:03:16,358 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-11-07 14:03:16,372 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-11-07 14:03:16,398 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-11-07 14:03:16,410 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-11-07 14:03:16,431 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-11-07 14:03:16,583 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-11-07 14:03:16,600 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-11-07 14:03:16,615 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-11-07 14:03:16,626 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-11-07 14:03:16,639 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-11-07 14:03:16,651 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-11-07 14:03:16,661 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-11-07 14:03:16,668 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-11-07 14:03:16,687 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-11-07 14:03:16,700 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-11-07 14:03:16,716 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-11-07 14:03:16,725 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-11-07 14:03:16,744 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-11-07 14:03:16,755 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-11-07 14:03:16,771 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-11-07 14:03:16,779 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-11-07 14:03:16,808 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-11-07 14:03:16,818 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-11-07 14:03:16,835 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-11-07 14:03:16,842 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-11-07 14:03:16,960 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in prod environment
2020-11-07 14:03:16,963 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-07 14:03:16,966 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-11-07 14:03:16,970 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-07 14:03:17,171 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-11-07 14:03:17,179 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-11-07 14:03:18,652 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-11-07 14:03:18,683 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-11-07 14:03:18,688 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-11-07 14:03:18,935 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 30.125 seconds (JVM running for 30.935)
2020-11-07 14:24:58,256 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on Karthiks-MacBook-Air.local with PID 1574 (/Users/karthikh/git/Thavare_daily/apiservices/target/classes started by karthikh in /Users/karthikh/git/Thavare_daily/apiservices)
2020-11-07 14:24:58,262 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-11-07 14:24:58,263 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: prod
2020-11-07 14:25:00,562 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-11-07 14:25:00,587 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-11-07 14:25:00,619 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-11-07 14:25:00,621 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-11-07 14:25:00,622 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-11-07 14:25:00,623 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-11-07 14:25:00,623 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-11-07 14:25:00,624 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-11-07 14:25:00,625 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-11-07 14:25:00,626 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-11-07 14:25:00,627 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-11-07 14:25:00,629 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-11-07 14:25:00,631 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-11-07 14:25:00,636 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-11-07 14:25:00,638 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-11-07 14:25:00,640 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-11-07 14:25:00,641 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-11-07 14:25:00,833 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-11-07 14:25:00,837 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-11-07 14:25:00,861 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 272ms. Found 15 MongoDB repository interfaces.
2020-11-07 14:25:04,159 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:25:04,161 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:25:05,035 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:25:05,036 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 14:25:05,138 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-11-07 14:25:05,148 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-11-07 14:25:05,151 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-11-07 14:25:05,155 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-11-07 14:25:05,156 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-11-07 14:25:05,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-11-07 14:25:05,162 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-11-07 14:25:05,163 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-11-07 14:25:05,165 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-11-07 14:25:05,166 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-11-07 14:25:05,167 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-11-07 14:25:05,169 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-11-07 14:25:05,172 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-11-07 14:25:05,174 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-11-07 14:25:05,175 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-11-07 14:25:05,176 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-11-07 14:25:05,178 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-11-07 14:25:05,179 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-11-07 14:25:05,181 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-11-07 14:25:05,187 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-11-07 14:25:05,189 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-11-07 14:25:05,779 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-11-07 14:25:05,942 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-11-07 14:25:05,965 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-11-07 14:25:05,998 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-11-07 14:25:06,019 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-11-07 14:25:06,055 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-11-07 14:25:06,065 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-11-07 14:25:06,085 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-11-07 14:25:06,220 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-11-07 14:25:06,235 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-11-07 14:25:06,251 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-11-07 14:25:06,264 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-11-07 14:25:06,276 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-11-07 14:25:06,287 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-11-07 14:25:06,297 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-11-07 14:25:06,308 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-11-07 14:25:06,327 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-11-07 14:25:06,340 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-11-07 14:25:06,368 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-11-07 14:25:06,383 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-11-07 14:25:06,400 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-11-07 14:25:06,414 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-11-07 14:25:06,426 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-11-07 14:25:06,436 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-11-07 14:25:06,460 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-11-07 14:25:06,470 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-11-07 14:25:06,486 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-11-07 14:25:06,495 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-11-07 14:25:06,586 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in prod environment
2020-11-07 14:25:06,591 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-07 14:25:06,591 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-11-07 14:25:06,591 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-07 14:25:06,912 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-11-07 14:25:06,949 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-11-07 14:25:09,064 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-11-07 14:25:09,140 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-11-07 14:25:09,145 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-11-07 14:25:09,473 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 31.931 seconds (JVM running for 32.752)
2020-11-07 14:26:17,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-5000-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "_id", "foreignField" : "categoryId", "as" : "cat_join_subcat"}}, { "$project" : { "_id" : 1, "name" : 1, "description" : 1, "offer" : 1, "imageLink" : 1, "subCategoryID" : "$cat_join_subcat._id"}}, { "$skip" : { "$numberLong" : "0"}}, { "$limit" : { "$numberLong" : "5"}}] in collection item_category
2020-11-07 14:26:19,830 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-5000-exec-2] Analyzing class class com.initializers.services.apiservices.model.ItemCategorySubCategory for index information.
2020-11-07 20:11:08,284 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on Karthiks-MacBook-Air.local with PID 1612 (/Users/karthikh/git/Thavare_daily/apiservices/target/classes started by karthikh in /Users/karthikh/git/Thavare_daily/apiservices)
2020-11-07 20:11:08,291 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-11-07 20:11:08,292 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-11-07 20:11:10,994 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-11-07 20:11:11,025 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-11-07 20:11:11,082 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-11-07 20:11:11,084 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-11-07 20:11:11,084 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-11-07 20:11:11,085 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-11-07 20:11:11,086 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-11-07 20:11:11,086 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-11-07 20:11:11,087 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-11-07 20:11:11,088 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-11-07 20:11:11,089 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-11-07 20:11:11,089 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-11-07 20:11:11,090 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-11-07 20:11:11,091 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-11-07 20:11:11,092 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-11-07 20:11:11,093 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-11-07 20:11:11,094 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/Users/karthikh/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-11-07 20:11:11,348 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-11-07 20:11:11,349 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-11-07 20:11:11,357 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 327ms. Found 15 MongoDB repository interfaces.
2020-11-07 20:11:14,985 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 20:11:14,987 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 20:11:15,428 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 20:11:15,429 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-11-07 20:11:15,569 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-11-07 20:11:15,570 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-11-07 20:11:15,591 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-11-07 20:11:15,593 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-11-07 20:11:15,597 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-11-07 20:11:15,599 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-11-07 20:11:15,601 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-11-07 20:11:15,602 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-11-07 20:11:15,604 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-11-07 20:11:15,607 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-11-07 20:11:15,609 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-11-07 20:11:15,611 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-11-07 20:11:15,612 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-11-07 20:11:15,613 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-11-07 20:11:15,614 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-11-07 20:11:15,615 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-11-07 20:11:15,618 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-11-07 20:11:15,619 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-11-07 20:11:15,620 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-11-07 20:11:15,622 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-11-07 20:11:15,635 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-11-07 20:11:16,396 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-11-07 20:11:16,695 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-11-07 20:11:16,746 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-11-07 20:11:16,854 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-11-07 20:11:16,875 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-11-07 20:11:16,898 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-11-07 20:11:16,912 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-11-07 20:11:16,934 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-11-07 20:11:17,213 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-11-07 20:11:17,232 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-11-07 20:11:17,250 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-11-07 20:11:17,267 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-11-07 20:11:17,292 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-11-07 20:11:17,303 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-11-07 20:11:17,317 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-11-07 20:11:17,336 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-11-07 20:11:17,426 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-11-07 20:11:17,446 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-11-07 20:11:17,465 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-11-07 20:11:17,474 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-11-07 20:11:17,499 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-11-07 20:11:17,523 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-11-07 20:11:17,542 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-11-07 20:11:17,552 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-11-07 20:11:17,618 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-11-07 20:11:17,632 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-11-07 20:11:17,699 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-11-07 20:11:17,710 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-11-07 20:11:17,913 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-11-07 20:11:17,919 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-07 20:11:17,920 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-11-07 20:11:17,920 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-11-07 20:11:18,114 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-11-07 20:11:18,123 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-11-07 20:11:19,840 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-11-07 20:11:19,869 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-11-07 20:11:19,876 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-11-07 20:11:20,156 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 33.103 seconds (JVM running for 34.658)
2020-11-07 20:11:36,148 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "_id", "foreignField" : "categoryId", "as" : "cat_join_subcat"}}, { "$project" : { "_id" : 1, "name" : 1, "description" : 1, "offer" : 1, "imageLink" : 1, "subCategoryID" : "$cat_join_subcat._id"}}, { "$skip" : { "$numberLong" : "0"}}, { "$limit" : { "$numberLong" : "5"}}] in collection item_category
2020-11-07 20:11:36,389 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.ItemCategorySubCategory for index information.
2020-11-07 20:22:01,789 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 20:22:01,822 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-4] Analyzing class class com.initializers.services.apiservices.model.UserOrderSetList for index information.
2020-11-07 20:22:18,488 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:22:18,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 20:22:18,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 20:22:18,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@79694c71)
2020-11-07 20:22:18,555 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:22:18,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 20:22:18,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 20:22:18,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@6f0491d3)
2020-11-07 20:22:18,612 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:22:18,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:22:18,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 20:22:18,668 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@a1317d5)
2020-11-07 20:22:18,670 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 20:22:18,681 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:22:18,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 20:22:18,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@16eb02c8)
2020-11-07 20:22:18,704 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:22:18,705 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:22:18,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 20:22:18,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@454027f)
2020-11-07 20:22:18,710 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 20:22:18,711 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:22:18,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 20:22:18,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e14d704)
2020-11-07 20:22:18,724 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:22:18,725 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 20:22:18,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 20:22:18,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@7b9debcd)
2020-11-07 20:22:18,734 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:22:18,736 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 20:22:18,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 20:22:18,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@755a0ace)
2020-11-07 20:22:18,780 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:22:18,780 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:22:18,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 20:22:18,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@716580bd)
2020-11-07 20:22:18,787 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 20:22:18,789 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:22:18,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 20:22:18,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@346700f5)
2020-11-07 20:22:18,804 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:22:18,805 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:22:18,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 20:22:18,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@20b04637)
2020-11-07 20:22:18,876 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 20:22:18,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:22:18,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 20:22:18,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5193495)
2020-11-07 20:22:27,639 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 20:22:29,492 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-11-07 20:22:29,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 20:22:29,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=4, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Tue Aug 25 05:30:00 IST 2020, deliveredBy=Thu Aug 27 05:30:00 IST 2020, totalAmount=520, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 20:22:29,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=4, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Tue Aug 25 05:30:00 IST 2020, deliveredBy=Thu Aug 27 05:30:00 IST 2020, totalAmount=520, deliveryCharge=10, coupenCode=SUND10, coupenDiscount=10, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@215db567)
2020-11-07 20:22:29,501 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:22:29,502 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 20:22:29,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 20:22:29,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@2f9a4f3c)
2020-11-07 20:22:29,510 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:22:29,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:22:29,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 20:22:29,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@2ba5de17)
2020-11-07 20:22:29,516 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-11-07 20:22:29,517 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:22:29,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-11-07 20:22:29,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ea74507)
2020-11-07 20:22:29,522 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:22:29,525 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:22:29,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 20:22:29,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@229d2339)
2020-11-07 20:22:29,528 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 20:22:29,530 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:22:29,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 20:22:29,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f036bf9)
2020-11-07 20:22:37,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 20:22:40,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:22:40,064 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-10] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-11-07 20:22:40,212 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:22:40,212 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:22:40,218 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-11-07 20:22:43,818 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:22:43,833 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-11-07 20:22:43,835 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:22:45,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:22:45,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:22:45,819 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:22:47,534 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:22:47,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:23:07,197 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:23:07,198 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:23:07,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:23:07,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@68c176a7)
2020-11-07 20:23:07,207 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:23:07,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:23:07,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:23:07,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@210fd8e2)
2020-11-07 20:23:07,233 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:23:07,305 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1368af14, Document{{_id=9, categoryId=1, subCategoryId=1, name=Test Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:23:07,307 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:23:07,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1368af14, Document{{_id=9, categoryId=1, subCategoryId=1, name=Test Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:23:07,401 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-11-07 20:23:07,403 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:23:07,412 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:23:07,414 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:23:07,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil}})
2020-11-07 20:23:07,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@4a1abc7e)
2020-11-07 20:23:07,419 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 20:23:07,421 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:23:07,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Sunflower}})
2020-11-07 20:23:07,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Sunflower}}, com.initializers.services.apiservices.model.item.ItemSubCategory@be712dd)
2020-11-07 20:23:07,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:23:07,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:23:07,670 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:23:07,764 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:23:07,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:23:07,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:23:07,791 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:23:07,793 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:23:11,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:23:11,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:23:11,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:23:20,253 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 20:23:27,851 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:23:29,748 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 20:23:31,422 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 20:23:31,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:31,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4427f028)
2020-11-07 20:23:31,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 20:23:31,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@36b63760)
2020-11-07 20:23:31,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 20:23:31,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@66a30c7e)
2020-11-07 20:23:31,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:31,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@70f39dc8)
2020-11-07 20:23:31,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:31,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@bae954e)
2020-11-07 20:23:31,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:31,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@c24ae6c)
2020-11-07 20:23:34,789 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:23:34,881 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:23:36,444 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 20:23:36,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:36,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6e21e3aa)
2020-11-07 20:23:36,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 20:23:36,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4d62bd09)
2020-11-07 20:23:36,451 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 20:23:36,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5e678fa5)
2020-11-07 20:23:36,452 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:36,453 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1ba45ce9)
2020-11-07 20:23:36,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:36,454 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7a79c084)
2020-11-07 20:23:36,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:36,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@22abb037)
2020-11-07 20:23:40,132 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:23:40,134 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:23:40,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:23:40,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@30f850cf)
2020-11-07 20:23:41,959 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 20:23:41,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:41,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7707cd02)
2020-11-07 20:23:41,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 20:23:41,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@e9b2a3c)
2020-11-07 20:23:41,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 20:23:41,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@24fe8bf8)
2020-11-07 20:23:41,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:41,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3786bb23)
2020-11-07 20:23:41,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:41,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7ea00f0c)
2020-11-07 20:23:41,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 20:23:41,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@29bd002e)
2020-11-07 20:23:42,982 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:23:42,992 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-6] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-11-07 20:23:46,948 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:23:46,957 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:23:47,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:23:47,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@45760a4a)
2020-11-07 20:24:17,248 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:24:17,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:24:17,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:24:17,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6ea3ee36)
2020-11-07 20:24:21,166 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6ea3ee36, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604760860/d7wia106xmnld59qxlw8.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:24:21,167 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:24:21,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6ea3ee36, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604760860/d7wia106xmnld59qxlw8.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:24:22,972 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:24:23,029 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:24:24,538 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:24:24,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:24:24,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:24:24,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4de0d4c6)
2020-11-07 20:25:58,300 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:25:58,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:25:59,677 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:25:59,679 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:25:59,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:25:59,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@679a5592)
2020-11-07 20:26:09,381 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:26:09,382 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:26:09,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:09,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1e835323)
2020-11-07 20:26:12,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@1e835323, Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604760972/dwjceixxejsbu7zsr2wz.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:12,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:26:12,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@1e835323, Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, offer=0, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604760972/dwjceixxejsbu7zsr2wz.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:13,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:26:13,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:26:16,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:26:33,266 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:26:33,267 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:26:33,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:26:33,273 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@780f043f)
2020-11-07 20:26:33,275 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:26:33,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:26:33,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:26:33,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@7c876b1d)
2020-11-07 20:26:33,287 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:26:33,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4599b791, Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:33,295 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-11-07 20:26:33,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4599b791, Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:33,349 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-11-07 20:26:33,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:26:33,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:33,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@32b5ff45)
2020-11-07 20:26:33,407 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-11-07 20:26:33,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:26:33,408 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:26:33,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:33,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6d2014c)
2020-11-07 20:26:37,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:26:37,968 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:26:48,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:26:59,065 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:26:59,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:26:59,074 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:26:59,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@51d4baaa)
2020-11-07 20:26:59,076 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:26:59,077 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:26:59,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:26:59,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3c64ab36)
2020-11-07 20:26:59,096 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:26:59,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7f09084f, Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:59,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-11-07 20:26:59,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7f09084f, Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:59,146 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-11-07 20:26:59,147 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:26:59,148 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:59,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@630c0da2)
2020-11-07 20:26:59,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:26:59,200 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-11-07 20:26:59,201 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:26:59,208 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:26:59,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@281f3bc)
2020-11-07 20:27:02,055 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:27:02,108 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:27:13,348 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:27:25,256 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:27:25,258 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:27:25,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:27:25,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@4f16b68c)
2020-11-07 20:27:25,268 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:27:25,269 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:27:25,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:27:25,273 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3542f835)
2020-11-07 20:27:25,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:27:25,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@43afaa48, Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:25,283 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-11-07 20:27:25,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@43afaa48, Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:25,349 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "7"}}, Fields: {}, Sort: {}
2020-11-07 20:27:25,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:27:25,412 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:27:25,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:25,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@17bd1d98)
2020-11-07 20:27:25,523 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "7"}}, Fields: {}, Sort: {}
2020-11-07 20:27:25,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:27:25,547 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:25,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4612bd06)
2020-11-07 20:27:27,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:27:27,301 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:27:30,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:27:58,857 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:27:58,859 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:27:58,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:27:58,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@11678a86)
2020-11-07 20:27:58,867 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 20:27:58,868 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:27:58,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:27:58,878 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@7ec3dc1)
2020-11-07 20:27:58,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:27:58,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@1a552827, Document{{_id=8, categoryId=1, name=Canola and other vegetable oils, description=More than 50% off, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:58,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-11-07 20:27:58,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@1a552827, Document{{_id=8, categoryId=1, name=Canola and other vegetable oils, description=More than 50% off, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:58,968 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-11-07 20:27:58,969 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:27:58,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=8, categoryId=1, name=Canola and other vegetable oils, description=More than 50% off, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:58,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=8, categoryId=1, name=Canola and other vegetable oils, description=More than 50% off, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6953ab4a)
2020-11-07 20:27:59,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:27:59,013 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "8"}}, Fields: {}, Sort: {}
2020-11-07 20:27:59,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:27:59,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=8, categoryId=1, name=Canola and other vegetable oils, description=More than 50% off, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:27:59,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=8, categoryId=1, name=Canola and other vegetable oils, description=More than 50% off, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@8dbadc1)
2020-11-07 20:28:01,193 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:28:01,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:28:14,207 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:28:19,141 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-11-07 20:28:19,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:28:19,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:28:19,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@705fbe37)
2020-11-07 20:29:04,008 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-11-07 20:29:04,009 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:29:04,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:29:04,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4c382847)
2020-11-07 20:29:08,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4c382847, Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761147/e6ihjb4diq6r1chulhhh.webp, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:29:08,437 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, name, description, imageLink, _class]
2020-11-07 20:29:08,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4c382847, Document{{_id=5, categoryId=1, name=Extra-virgin olive oil, description=Healthy & Tasty, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761147/e6ihjb4diq6r1chulhhh.webp, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:29:10,080 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:29:10,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:29:15,643 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:29:17,862 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-11-07 20:29:17,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:29:17,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:29:17,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7331492e)
2020-11-07 20:29:55,382 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "6"}}, Fields: {}, Sort: {}
2020-11-07 20:29:55,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:29:55,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:29:55,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@570be320)
2020-11-07 20:29:57,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@570be320, Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761197/fbxl0qq3kv2hgpaczgi2.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:29:57,743 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, name, description, imageLink, _class]
2020-11-07 20:29:57,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@570be320, Document{{_id=6, categoryId=1, name=Light olive oil, description=Always healty, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761197/fbxl0qq3kv2hgpaczgi2.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:29:59,352 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:29:59,410 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:30:04,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:30:20,791 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "7"}}, Fields: {}, Sort: {}
2020-11-07 20:30:20,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:30:20,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:30:20,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@123a479d)
2020-11-07 20:31:09,098 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "7"}}, Fields: {}, Sort: {}
2020-11-07 20:31:09,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:31:09,101 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:31:09,102 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2f9c71ce)
2020-11-07 20:31:11,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@2f9c71ce, Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761270/flsd3ynb7rodxbm5mfno.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:31:11,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, name, description, imageLink, _class]
2020-11-07 20:31:11,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@2f9c71ce, Document{{_id=7, categoryId=1, name=Coconut oil, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761270/flsd3ynb7rodxbm5mfno.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:31:12,639 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:31:12,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:31:22,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "6"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:31:28,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:32:03,757 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-11-07 20:32:03,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:32:03,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:32:03,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6168bcb5)
2020-11-07 20:32:11,562 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-11-07 20:32:11,563 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:32:11,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:32:11,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@66e00573)
2020-11-07 20:32:14,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@66e00573, Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761334/aoel0ntonp3xo3g9euqo.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:32:14,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, name, description, imageLink, _class]
2020-11-07 20:32:14,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@66e00573, Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761334/aoel0ntonp3xo3g9euqo.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:32:15,361 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:32:15,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:32:22,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:32:24,291 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:33:22,783 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:33:22,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:33:22,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:33:22,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@597eb9f6)
2020-11-07 20:33:22,796 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:33:22,797 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:33:22,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:33:22,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@76dc0349)
2020-11-07 20:33:22,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:33:22,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@50891682, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:33:22,805 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-11-07 20:33:22,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@50891682, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:33:22,861 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:33:22,862 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:33:22,870 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:33:22,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7f0c2506)
2020-11-07 20:33:22,900 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:33:22,902 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:33:22,902 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:33:23,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:33:23,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@22411f4d)
2020-11-07 20:33:25,122 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:33:25,188 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:33:30,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:33:31,826 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:33:31,827 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:33:31,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:33:31,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@214e84ef)
2020-11-07 20:33:33,813 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:33:33,852 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:33:56,244 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:33:58,299 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:33:58,301 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:33:58,303 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:33:58,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@33496bc1)
2020-11-07 20:34:42,931 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:34:42,932 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:34:42,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:34:42,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@113332d0)
2020-11-07 20:34:45,604 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@113332d0, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:34:45,604 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, name, description, imageLink, _class]
2020-11-07 20:34:45,606 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@113332d0, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:34:46,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:34:46,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:34:52,239 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "6"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:34:56,852 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:35:23,551 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:35:40,608 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:36:03,934 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:36:04,112 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:36:04,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:37:13,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:37:17,359 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:37:17,359 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:38:57,388 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:38:57,389 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:38:57,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:38:57,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@648da236)
2020-11-07 20:38:57,400 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:38:57,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@332ac3f3, Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:38:57,404 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Inserting Document containing fields: [_id, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:38:57,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@332ac3f3, Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:38:57,408 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:38:57,410 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:38:57,413 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-11-07 20:38:57,416 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:38:57,428 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=3}} for Document{{name=3}} fields.
2020-11-07 20:38:57,429 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{name=3}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:38:57,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, name=Biscuts}})
2020-11-07 20:38:57,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, name=Biscuts}}, com.initializers.services.apiservices.model.item.ItemSubCategory@45d44ff7)
2020-11-07 20:38:57,542 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:38:57,628 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:38:57,630 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:38:57,638 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:38:57,639 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:38:57,647 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:38:57,654 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:38:57,656 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:39:01,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:39:01,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:39:01,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:39:07,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:39:09,661 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:39:09,671 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:39:09,672 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:39:21,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:39:21,794 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:39:37,622 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:39:37,623 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:39:37,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:39:37,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@11be7e16)
2020-11-07 20:39:44,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@11be7e16, Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:39:44,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:39:44,248 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@11be7e16, Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:12,380 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:12,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:40:12,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:12,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2a23da0e)
2020-11-07 20:40:12,389 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:40:12,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:12,396 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:40:12,397 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:12,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:40:12,411 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:12,412 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:40:12,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:12,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@14b94904)
2020-11-07 20:40:12,418 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:40:12,419 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:12,421 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:40:12,422 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:40:12,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:40:12,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6e2de8e2)
2020-11-07 20:40:12,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6e2de8e2, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:40:12,425 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:40:12,427 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6e2de8e2, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:40:12,428 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:12,429 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:40:12,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:12,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@30826d4a)
2020-11-07 20:40:12,433 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:40:12,434 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:12,436 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : null}, Fields: {}, Sort: {}
2020-11-07 20:40:12,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : null} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:40:16,234 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:40:16,235 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:16,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:16,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:40:16,276 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:40:16,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:16,295 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:40:16,301 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:40:16,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:17,977 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:40:17,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:40:21,379 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:21,380 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:40:21,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:21,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@30c8754)
2020-11-07 20:40:21,388 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:40:21,389 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:40:21,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:40:21,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@77da2232)
2020-11-07 20:40:21,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@30c8754, Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:21,393 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:40:21,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@30c8754, Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:21,397 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:40:21,398 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:21,401 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:40:21,402 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:40:21,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:40:21,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@3943ac27)
2020-11-07 20:40:21,405 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{name=3}} fields.
2020-11-07 20:40:21,406 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{name=3}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:40:21,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, name=Biscuts}})
2020-11-07 20:40:21,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, name=Biscuts}}, com.initializers.services.apiservices.model.item.ItemSubCategory@5e92aa7c)
2020-11-07 20:40:21,448 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:40:21,452 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:40:21,452 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:39,455 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:39,456 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:40:39,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:39,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@ced482f)
2020-11-07 20:40:39,462 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:40:39,463 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:39,465 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:40:39,465 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:39,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:40:39,471 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:39,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:40:39,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:39,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5a4b5a6b)
2020-11-07 20:40:39,478 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:40:39,479 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:39,481 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:40:39,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:40:39,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:40:39,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@63ba738a)
2020-11-07 20:40:39,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@63ba738a, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:40:39,495 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:40:39,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@63ba738a, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:40:39,498 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:39,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:40:39,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:40:39,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, categoryId=2, subCategoryId=3, name=unibic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761780/k8iwlcapckyxvxotdzxy.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@18cfec4e)
2020-11-07 20:40:39,506 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-11-07 20:40:39,507 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:39,525 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:40:39,526 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:40:39,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:40:39,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@7e057348)
2020-11-07 20:40:39,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@7e057348, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:40:39,531 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:40:39,538 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@7e057348, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:40:39,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@7e1de6e1, Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:40:39,541 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:40:39,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@7e1de6e1, Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:40:39,636 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=9}} for Document{{}} fields.
2020-11-07 20:40:39,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:39,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:40:39,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d23eb14)
2020-11-07 20:40:39,783 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=9}} for Document{{}} fields.
2020-11-07 20:40:39,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:39,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:40:39,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d0eb5d4)
2020-11-07 20:40:41,258 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:40:41,259 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:41,259 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:40:41,290 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "10"}}, Fields: {}, Sort: {}
2020-11-07 20:40:41,291 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:40:41,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:40:41,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=10, actualPrice=200.0, discount=10, discountPrice=180.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69f8278a)
2020-11-07 20:40:46,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:40:46,539 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:40:46,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:40:51,778 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:42:23,949 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:42:23,949 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:43:30,117 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:43:30,119 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:43:30,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:43:30,123 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@133643cb)
2020-11-07 20:43:30,124 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:43:30,126 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:43:30,127 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:43:30,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1b3defff)
2020-11-07 20:43:30,129 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:43:30,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6666ea51, Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:43:30,131 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:43:30,133 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6666ea51, Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:43:30,133 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=11, available=Y}} for Document{{}} fields.
2020-11-07 20:43:30,134 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "11"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:43:30,137 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:43:30,138 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:43:30,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:43:30,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@115dbce5)
2020-11-07 20:43:30,141 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=3}} for Document{{name=3}} fields.
2020-11-07 20:43:30,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{name=3}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:43:30,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, name=Biscuts}})
2020-11-07 20:43:30,144 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, name=Biscuts}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4e8cd763)
2020-11-07 20:43:30,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:43:30,223 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-11-07 20:43:30,224 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:43:30,283 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:43:30,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:43:30,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:43:30,308 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-11-07 20:43:30,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:06,253 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=11}} for Document{{}} fields.
2020-11-07 20:44:06,254 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:44:06,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:44:06,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6fea575b)
2020-11-07 20:44:06,260 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=11, available=Y}} for Document{{}} fields.
2020-11-07 20:44:06,262 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "11"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:06,267 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-11-07 20:44:06,268 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:06,272 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:44:06,275 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=11}} for Document{{}} fields.
2020-11-07 20:44:06,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:44:06,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:44:06,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4c20dfbc)
2020-11-07 20:44:06,280 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=11, available=Y}} for Document{{}} fields.
2020-11-07 20:44:06,282 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "11"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:06,284 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:44:06,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:44:06,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:44:06,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6268b404)
2020-11-07 20:44:06,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6268b404, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:44:06,291 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:44:06,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6268b404, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:44:06,295 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=11}} for Document{{}} fields.
2020-11-07 20:44:06,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:44:06,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:44:06,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@79f6ae86)
2020-11-07 20:44:06,298 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=11, available=Y}} for Document{{}} fields.
2020-11-07 20:44:06,299 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "11"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:06,301 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:44:06,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:44:06,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:44:06,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@441b7e6c)
2020-11-07 20:44:06,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@441b7e6c, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:44:06,315 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:44:06,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@441b7e6c, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:44:06,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@e0c846c, Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:44:06,321 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:44:06,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@e0c846c, Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:44:06,376 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:44:06,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:06,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:44:06,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dc118f2)
2020-11-07 20:44:06,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=10}} for Document{{}} fields.
2020-11-07 20:44:06,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:06,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:44:06,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b7221f2)
2020-11-07 20:44:10,013 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:44:10,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:44:14,440 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:44:14,511 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:44:14,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:44:21,993 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:44:23,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:44:23,032 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "11"}}, Fields: {}, Sort: {}
2020-11-07 20:44:23,033 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:44:23,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:44:23,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=11, actualPrice=20.0, discount=5, discountPrice=19.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@773e555)
2020-11-07 20:44:31,572 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=11}} for Document{{}} fields.
2020-11-07 20:44:31,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:44:31,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:44:31,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2963d93d)
2020-11-07 20:44:34,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2963d93d, Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762074/ctg4iyjfaykoghap8jsh.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:44:34,947 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:44:34,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2963d93d, Document{{_id=11, categoryId=2, subCategoryId=3, name=Good Day, description=Document{{itemProperties=, sellerName=Britania, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762074/ctg4iyjfaykoghap8jsh.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:44:40,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:44:40,395 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:44:40,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:44:42,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:44:42,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:47:06,409 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:47:06,410 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:47:06,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:47:06,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@7a2f19d0)
2020-11-07 20:47:06,418 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:47:06,419 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:47:06,427 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:47:06,428 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@9abfaf0)
2020-11-07 20:47:06,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:47:06,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@caeeaf0, Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:47:06,434 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:47:06,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@caeeaf0, Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:47:06,442 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=12, available=Y}} for Document{{}} fields.
2020-11-07 20:47:06,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "12"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:06,445 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:47:06,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:47:06,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:47:06,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@1939129a)
2020-11-07 20:47:06,449 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{name=3}} fields.
2020-11-07 20:47:06,450 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{name=3}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:47:06,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, name=Biscuts}})
2020-11-07 20:47:06,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, name=Biscuts}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7401c83b)
2020-11-07 20:47:06,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "12"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:47:06,635 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "12"}}, Fields: {}, Sort: {}
2020-11-07 20:47:06,636 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:06,670 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:47:06,671 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:47:06,681 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "12"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:47:06,685 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "12"}}, Fields: {}, Sort: {}
2020-11-07 20:47:06,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:28,954 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=12}} for Document{{}} fields.
2020-11-07 20:47:28,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:47:28,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:47:28,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2c304d7a)
2020-11-07 20:47:28,962 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=12, available=Y}} for Document{{}} fields.
2020-11-07 20:47:28,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "12"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:28,965 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "12"}}, Fields: {}, Sort: {}
2020-11-07 20:47:28,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:28,968 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:47:28,969 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=12}} for Document{{}} fields.
2020-11-07 20:47:28,971 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:47:28,981 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:47:28,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@8fcde70)
2020-11-07 20:47:28,983 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=12, available=Y}} for Document{{}} fields.
2020-11-07 20:47:28,985 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "12"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:28,991 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:47:28,992 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:47:28,996 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:47:28,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3e42215e)
2020-11-07 20:47:28,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3e42215e, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:47:28,998 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:47:28,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3e42215e, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:47:29,000 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=12}} for Document{{}} fields.
2020-11-07 20:47:29,000 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:47:29,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:47:29,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@79c21614)
2020-11-07 20:47:29,003 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=12, available=Y}} for Document{{}} fields.
2020-11-07 20:47:29,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "12"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:29,009 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:47:29,009 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:47:29,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:47:29,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5737dfcb)
2020-11-07 20:47:29,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@5737dfcb, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:47:29,012 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:47:29,014 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@5737dfcb, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:47:29,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@39569403, Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:47:29,015 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:47:29,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@39569403, Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:47:29,058 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=11}} for Document{{}} fields.
2020-11-07 20:47:29,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:29,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:47:29,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15d4e200)
2020-11-07 20:47:29,097 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=11}} for Document{{}} fields.
2020-11-07 20:47:29,097 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:29,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:47:29,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76e4408c)
2020-11-07 20:47:30,616 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:47:30,616 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:47:32,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:47:32,124 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:47:32,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:47:37,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:47:37,911 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "12"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:47:37,915 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "12"}}, Fields: {}, Sort: {}
2020-11-07 20:47:37,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:47:37,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:47:37,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=12, actualPrice=10.0, discount=5, discountPrice=10.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ee9f7e0)
2020-11-07 20:48:01,950 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=12}} for Document{{}} fields.
2020-11-07 20:48:01,951 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:48:01,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:48:01,952 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@16311aa6)
2020-11-07 20:48:06,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@16311aa6, Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762285/ihhxq18mxzivxeoh5yen.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:48:06,294 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:48:06,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@16311aa6, Document{{_id=12, categoryId=2, subCategoryId=3, name=Marie Gold , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762285/ihhxq18mxzivxeoh5yen.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:48:09,236 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:48:09,338 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:48:09,340 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:48:13,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:48:28,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:48:28,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:48:53,990 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:48:53,991 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:48:53,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:48:53,993 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@404c0715)
2020-11-07 20:48:53,994 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:48:53,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:48:53,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:48:53,997 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7382dcb8)
2020-11-07 20:48:53,999 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:48:54,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@3253c3ee, Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:48:54,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:48:54,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@3253c3ee, Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:48:54,009 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=13, available=Y}} for Document{{}} fields.
2020-11-07 20:48:54,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "13"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:48:54,015 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:48:54,016 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:48:54,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:48:54,019 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@10f17209)
2020-11-07 20:48:54,020 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{name=3}} fields.
2020-11-07 20:48:54,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{name=3}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:48:54,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, name=Biscuts}})
2020-11-07 20:48:54,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, name=Biscuts}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4184651f)
2020-11-07 20:48:54,080 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "13"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:48:54,083 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-11-07 20:48:54,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:48:54,152 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:48:54,158 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:48:54,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "13"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:48:54,249 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-11-07 20:48:54,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:08,015 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=13}} for Document{{}} fields.
2020-11-07 20:49:08,024 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:49:08,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:49:08,074 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@78f41980)
2020-11-07 20:49:08,074 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=13, available=Y}} for Document{{}} fields.
2020-11-07 20:49:08,075 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "13"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:08,173 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-11-07 20:49:08,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:08,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:49:08,178 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=13}} for Document{{}} fields.
2020-11-07 20:49:08,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:49:08,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:49:08,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5e05e6dc)
2020-11-07 20:49:08,182 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=13, available=Y}} for Document{{}} fields.
2020-11-07 20:49:08,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "13"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:08,185 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:49:08,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:49:08,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:49:08,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3d2f930b)
2020-11-07 20:49:08,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3d2f930b, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:49:08,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:49:08,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3d2f930b, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:49:08,191 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=13}} for Document{{}} fields.
2020-11-07 20:49:08,192 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:49:08,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:49:08,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7b3c4f9)
2020-11-07 20:49:08,194 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=13, available=Y}} for Document{{}} fields.
2020-11-07 20:49:08,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "13"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:08,196 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:49:08,197 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:49:08,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:49:08,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5f53e596)
2020-11-07 20:49:08,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@5f53e596, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:49:08,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:49:08,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@5f53e596, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:49:08,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@2e91cba6, Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:49:08,202 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:49:08,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@2e91cba6, Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:49:08,253 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=12}} for Document{{}} fields.
2020-11-07 20:49:08,254 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:08,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:49:08,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13c11821)
2020-11-07 20:49:08,295 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=12}} for Document{{}} fields.
2020-11-07 20:49:08,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:08,336 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:49:08,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11be8d71)
2020-11-07 20:49:09,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:49:09,652 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:49:10,634 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:49:10,744 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:49:10,744 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:49:14,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:49:15,393 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "13"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:49:15,399 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-11-07 20:49:15,400 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:49:15,402 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:49:15,403 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=13, actualPrice=20.0, discount=10, discountPrice=18.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f6ec8b)
2020-11-07 20:49:37,877 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=13}} for Document{{}} fields.
2020-11-07 20:49:37,877 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:49:37,878 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:49:37,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6fe7b2b4)
2020-11-07 20:49:40,722 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6fe7b2b4, Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762380/e7z5rmgzkervwofch5xi.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:49:40,723 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:49:40,726 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6fe7b2b4, Document{{_id=13, categoryId=2, subCategoryId=3, name=Nutrie Choice , description=Document{{itemProperties=, sellerName=Britannia , disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762380/e7z5rmgzkervwofch5xi.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:49:43,254 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:49:43,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:49:43,368 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:49:46,161 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:49:46,162 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:50:05,295 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:50:05,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:50:05,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:50:05,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@213d1926)
2020-11-07 20:50:05,299 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:50:05,300 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:50:05,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:50:05,305 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@bc58330)
2020-11-07 20:50:05,307 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:50:05,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@115f0322, Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:05,310 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:50:05,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@115f0322, Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:05,312 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-11-07 20:50:05,313 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:05,314 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:50:05,315 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:50:05,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:50:05,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@5862dc06)
2020-11-07 20:50:05,319 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3}} for Document{{name=3}} fields.
2020-11-07 20:50:05,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{name=3}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:50:05,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, name=Biscuts}})
2020-11-07 20:50:05,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, name=Biscuts}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7f191839)
2020-11-07 20:50:05,382 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:50:05,385 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-11-07 20:50:05,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:05,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:50:05,478 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:50:05,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:50:05,614 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-11-07 20:50:05,616 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:22,898 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{}} fields.
2020-11-07 20:50:22,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:50:22,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:22,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3e3397ed)
2020-11-07 20:50:22,912 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-11-07 20:50:22,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:22,916 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-11-07 20:50:22,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:22,920 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:50:22,922 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{}} fields.
2020-11-07 20:50:22,924 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:50:22,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:22,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@f6c2a92)
2020-11-07 20:50:22,929 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-11-07 20:50:22,930 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:22,932 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-11-07 20:50:22,933 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:50:22,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:50:22,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7aff2bd8)
2020-11-07 20:50:22,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7aff2bd8, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:50:22,936 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:50:22,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@7aff2bd8, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, offer=10, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589390/xfgv3mmgxrh7ba856rfa.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:50:22,937 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{}} fields.
2020-11-07 20:50:22,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:50:22,941 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:22,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@9801557)
2020-11-07 20:50:22,943 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-11-07 20:50:22,944 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:22,945 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:50:22,946 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:50:22,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:50:22,948 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@2bae7775)
2020-11-07 20:50:22,948 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@2bae7775, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:50:22,949 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:50:22,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@2bae7775, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:50:22,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@45f8f028, Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:50:22,952 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:50:22,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@45f8f028, Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:50:23,000 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=13}} for Document{{}} fields.
2020-11-07 20:50:23,001 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:23,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:50:23,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fc89ce7)
2020-11-07 20:50:23,071 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=13}} for Document{{}} fields.
2020-11-07 20:50:23,072 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:23,257 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:50:23,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@590a85a6)
2020-11-07 20:50:26,114 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:50:26,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:50:27,738 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:50:27,848 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:50:27,851 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:50:31,830 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:50:33,351 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:50:33,353 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-11-07 20:50:33,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:50:33,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:50:33,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=14, actualPrice=25.0, discount=5, discountPrice=24.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ea53fd0)
2020-11-07 20:50:54,582 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{}} fields.
2020-11-07 20:50:54,583 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:50:54,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:54,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@15cf25be)
2020-11-07 20:50:57,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@15cf25be, Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762456/giccntf6r5omc0brnv29.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:57,040 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:50:57,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@15cf25be, Document{{_id=14, categoryId=2, subCategoryId=3, name=Oreo , description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762456/giccntf6r5omc0brnv29.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:50:59,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:51:00,008 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:51:00,012 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:51:03,951 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "3"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:51:09,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 20:53:36,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:53:37,872 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:53:37,877 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:53:57,970 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:53:57,971 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:53:57,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:53:57,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@526641b3)
2020-11-07 20:53:57,979 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:53:57,980 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:53:57,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:53:57,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@61daccd4)
2020-11-07 20:53:57,983 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:53:57,985 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@492925eb, Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:53:57,986 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:53:57,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@492925eb, Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:53:57,989 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=15, available=Y}} for Document{{}} fields.
2020-11-07 20:53:57,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "15"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:53:57,992 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:53:57,993 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:53:57,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:53:58,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@2df6964e)
2020-11-07 20:53:58,001 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=9}} for Document{{name=9}} fields.
2020-11-07 20:53:58,002 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{name=9}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:53:58,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, name=Soaps & Detergents}})
2020-11-07 20:53:58,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, name=Soaps & Detergents}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1cfc1931)
2020-11-07 20:53:58,094 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "15"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:53:58,143 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "15"}}, Fields: {}, Sort: {}
2020-11-07 20:53:58,144 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:53:58,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:53:58,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:53:58,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "15"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:53:58,213 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "15"}}, Fields: {}, Sort: {}
2020-11-07 20:53:58,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:21,537 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=15}} for Document{{}} fields.
2020-11-07 20:54:21,539 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:54:21,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:54:21,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5f0dc77c)
2020-11-07 20:54:21,545 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=15, available=Y}} for Document{{}} fields.
2020-11-07 20:54:21,546 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "15"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:21,550 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "15"}}, Fields: {}, Sort: {}
2020-11-07 20:54:21,552 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:21,554 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:54:21,556 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=15}} for Document{{}} fields.
2020-11-07 20:54:21,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:54:21,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:54:21,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@756e6dd5)
2020-11-07 20:54:21,561 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=15, available=Y}} for Document{{}} fields.
2020-11-07 20:54:21,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "15"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:21,564 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:54:21,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:54:21,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:54:21,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6840ffc5)
2020-11-07 20:54:21,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6840ffc5, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:54:21,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:54:21,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6840ffc5, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:54:21,571 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=15}} for Document{{}} fields.
2020-11-07 20:54:21,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:54:21,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:54:21,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@45247e48)
2020-11-07 20:54:21,574 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=15, available=Y}} for Document{{}} fields.
2020-11-07 20:54:21,575 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "15"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:21,578 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:54:21,578 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:54:21,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:54:21,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@742367b7)
2020-11-07 20:54:21,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@742367b7, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:54:21,582 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:54:21,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@742367b7, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:54:21,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@72a5ac23, Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:54:21,588 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:54:21,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@72a5ac23, Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:54:21,668 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=14}} for Document{{}} fields.
2020-11-07 20:54:21,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:21,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:54:21,736 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ca10042)
2020-11-07 20:54:21,741 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{}} fields.
2020-11-07 20:54:21,741 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:21,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:54:21,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@324f75bf)
2020-11-07 20:54:24,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:54:24,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:54:26,398 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:54:26,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:54:26,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:54:31,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:54:52,997 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "15"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:54:53,006 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "15"}}, Fields: {}, Sort: {}
2020-11-07 20:54:53,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:54:53,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:54:53,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=15, actualPrice=825.0, discount=12, discountPrice=726.0, value=6.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ae3806a)
2020-11-07 20:55:01,117 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=15}} for Document{{}} fields.
2020-11-07 20:55:01,118 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:55:01,122 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:55:01,123 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@47cd6131)
2020-11-07 20:55:05,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@47cd6131, Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762704/nn3zsgy3tykuesksgyyx.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:55:05,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:55:05,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@47cd6131, Document{{_id=15, categoryId=2, subCategoryId=9, name=Ariel Matic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762704/nn3zsgy3tykuesksgyyx.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:55:06,645 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:55:06,760 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:55:06,761 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:55:13,284 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:55:13,284 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:55:52,403 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:55:52,404 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:55:52,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:55:52,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6671f754)
2020-11-07 20:55:52,412 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:55:52,413 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:55:52,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:55:52,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1b4fba89)
2020-11-07 20:55:52,415 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:55:52,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@407c6507, Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:55:52,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:55:52,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@407c6507, Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:55:52,420 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=16, available=Y}} for Document{{}} fields.
2020-11-07 20:55:52,422 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "16"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:55:52,427 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:55:52,428 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:55:52,434 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:55:52,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@5f85b98f)
2020-11-07 20:55:52,436 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=9}} for Document{{name=9}} fields.
2020-11-07 20:55:52,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{name=9}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:55:52,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, name=Soaps & Detergents}})
2020-11-07 20:55:52,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, name=Soaps & Detergents}}, com.initializers.services.apiservices.model.item.ItemSubCategory@28c1a38b)
2020-11-07 20:55:52,482 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "16"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:55:52,488 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "16"}}, Fields: {}, Sort: {}
2020-11-07 20:55:52,494 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:55:52,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:55:52,544 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:55:52,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "16"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:55:52,646 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "16"}}, Fields: {}, Sort: {}
2020-11-07 20:55:52,647 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:31,985 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=16}} for Document{{}} fields.
2020-11-07 20:56:31,986 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:56:31,989 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:56:31,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@32847865)
2020-11-07 20:56:31,991 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=16, available=Y}} for Document{{}} fields.
2020-11-07 20:56:31,993 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "16"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:31,997 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "16"}}, Fields: {}, Sort: {}
2020-11-07 20:56:31,998 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:32,001 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:56:32,003 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=16}} for Document{{}} fields.
2020-11-07 20:56:32,003 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:56:32,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:56:32,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3297c925)
2020-11-07 20:56:32,006 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=16, available=Y}} for Document{{}} fields.
2020-11-07 20:56:32,007 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "16"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:32,009 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:56:32,011 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:56:32,015 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:56:32,016 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3a6f47a4)
2020-11-07 20:56:32,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3a6f47a4, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:56:32,019 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:56:32,020 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3a6f47a4, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:56:32,020 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=16}} for Document{{}} fields.
2020-11-07 20:56:32,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:56:32,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:56:32,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@18f0f98)
2020-11-07 20:56:32,023 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=16, available=Y}} for Document{{}} fields.
2020-11-07 20:56:32,024 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "16"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:32,025 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:56:32,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:56:32,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:56:32,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1059089c)
2020-11-07 20:56:32,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@1059089c, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:56:32,029 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:56:32,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@1059089c, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:56:32,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@1c0b3553, Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:56:32,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:56:32,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@1c0b3553, Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:56:32,082 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=15}} for Document{{}} fields.
2020-11-07 20:56:32,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:32,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:56:32,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a5500a8)
2020-11-07 20:56:32,198 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=15}} for Document{{}} fields.
2020-11-07 20:56:32,198 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:32,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:56:32,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dc92a0c)
2020-11-07 20:56:34,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:56:34,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:56:35,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:56:35,338 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:56:35,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:56:40,495 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:56:41,440 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "16"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:56:41,451 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "16"}}, Fields: {}, Sort: {}
2020-11-07 20:56:41,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:56:41,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:56:41,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=16, actualPrice=227.0, discount=10, discountPrice=205.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@194f6d2)
2020-11-07 20:57:03,874 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=16}} for Document{{}} fields.
2020-11-07 20:57:03,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:57:03,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:03,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@794dfd74)
2020-11-07 20:57:07,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@794dfd74, Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762826/yp8adkr6dtfhxkfmormy.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:07,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:57:07,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@794dfd74, Document{{_id=16, categoryId=2, subCategoryId=9, name=Harpic, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762826/yp8adkr6dtfhxkfmormy.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:08,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:57:08,906 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:57:08,924 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:57:17,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:57:19,353 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:57:19,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:57:35,162 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:57:35,163 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:57:35,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:57:35,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3565351c)
2020-11-07 20:57:35,246 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:57:35,247 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:57:35,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:57:35,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4adaa2cf)
2020-11-07 20:57:35,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:57:35,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6573b696, Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:35,272 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:57:35,307 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6573b696, Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:35,308 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=17, available=Y}} for Document{{}} fields.
2020-11-07 20:57:35,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "17"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:35,314 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:57:35,315 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:57:35,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:57:35,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@45c93b24)
2020-11-07 20:57:35,318 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=9}} for Document{{name=9}} fields.
2020-11-07 20:57:35,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{name=9}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:57:35,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, name=Soaps & Detergents}})
2020-11-07 20:57:35,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, name=Soaps & Detergents}}, com.initializers.services.apiservices.model.item.ItemSubCategory@59182b54)
2020-11-07 20:57:35,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "17"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:57:35,541 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "17"}}, Fields: {}, Sort: {}
2020-11-07 20:57:35,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:35,644 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:57:35,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:57:35,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "17"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:57:35,680 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "17"}}, Fields: {}, Sort: {}
2020-11-07 20:57:35,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:55,625 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:57:55,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:57:55,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:55,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4ef63ee2)
2020-11-07 20:57:55,630 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=17, available=Y}} for Document{{}} fields.
2020-11-07 20:57:55,631 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "17"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:55,645 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "17"}}, Fields: {}, Sort: {}
2020-11-07 20:57:55,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:55,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:57:55,651 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:57:55,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:57:55,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:55,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@11fcf7bb)
2020-11-07 20:57:55,659 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=17, available=Y}} for Document{{}} fields.
2020-11-07 20:57:55,660 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "17"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:55,662 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:57:55,663 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:57:55,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:57:55,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=12, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3ee267d5)
2020-11-07 20:57:55,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3ee267d5, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:57:55,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:57:55,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3ee267d5, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:57:55,667 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:57:55,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:57:55,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:57:55,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@60a5db9a)
2020-11-07 20:57:55,673 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=17, available=Y}} for Document{{}} fields.
2020-11-07 20:57:55,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "17"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:55,675 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:57:55,675 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:57:55,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:57:55,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=15, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1f5be842)
2020-11-07 20:57:55,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@1f5be842, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:57:55,679 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:57:55,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@1f5be842, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:57:55,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@696c853d, Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:57:55,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:57:55,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@696c853d, Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:57:55,790 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=16}} for Document{{}} fields.
2020-11-07 20:57:55,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:55,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:57:55,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7fe62fa2)
2020-11-07 20:57:55,872 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=16}} for Document{{}} fields.
2020-11-07 20:57:55,873 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:57:55,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:57:55,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@552f8e3c)
2020-11-07 20:58:11,135 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=16}} for Document{{}} fields.
2020-11-07 20:58:11,136 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "16"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:58:11,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:58:11,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=16, itemId=17, actualPrice=35.0, discount=32, discountPrice=24.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5493f18b)
2020-11-07 20:58:11,142 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:58:11,143 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:58:11,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:58:11,146 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7455e261)
2020-11-07 20:58:11,147 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=17, available=Y}} for Document{{}} fields.
2020-11-07 20:58:11,148 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "17"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:58:11,150 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:58:11,151 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:58:11,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:58:11,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4698c309)
2020-11-07 20:58:11,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4698c309, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:58:11,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:58:11,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4698c309, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:58:11,161 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:58:11,162 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:58:11,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:58:11,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4221399e)
2020-11-07 20:58:11,164 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=17, available=Y}} for Document{{}} fields.
2020-11-07 20:58:11,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "17"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:58:11,166 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:58:11,167 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:58:11,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:58:11,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@68806880)
2020-11-07 20:58:11,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@68806880, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:58:11,170 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:58:11,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@68806880, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:58:11,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@5493f18b, Document{{_id=16, itemId=17, actualPrice=35.0, discount=5, discountPrice=34.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:58:11,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class]
2020-11-07 20:58:11,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@5493f18b, Document{{_id=16, itemId=17, actualPrice=35.0, discount=5, discountPrice=34.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:58:15,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:58:15,308 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:58:17,840 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:58:17,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:58:17,992 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:58:22,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:58:23,869 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "17"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:58:23,877 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "17"}}, Fields: {}, Sort: {}
2020-11-07 20:58:23,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:58:23,879 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=16, itemId=17, actualPrice=35.0, discount=5, discountPrice=34.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:58:23,880 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=16, itemId=17, actualPrice=35.0, discount=5, discountPrice=34.0, value=1.0, unit=Bar, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@512ba14e)
2020-11-07 20:58:46,387 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:58:46,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:58:46,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:58:46,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@136a697e)
2020-11-07 20:58:50,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@136a697e, Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762929/krknx7ybehmahgazj66y.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:58:50,395 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 20:58:50,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@136a697e, Document{{_id=17, categoryId=2, subCategoryId=9, name=Tide Bar, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604762929/krknx7ybehmahgazj66y.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:58:51,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:58:51,826 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:58:51,828 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:58:55,706 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:58:58,462 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:58:58,465 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:59:20,521 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:59:20,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:59:20,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:59:20,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5f013a5f)
2020-11-07 20:59:20,530 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:59:20,531 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:59:20,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:59:20,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7d252666)
2020-11-07 20:59:20,536 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:59:20,538 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4304d7d5, Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:59:20,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 20:59:20,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4304d7d5, Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:59:20,542 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=18, available=Y}} for Document{{}} fields.
2020-11-07 20:59:20,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "18"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:20,552 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 20:59:20,553 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:59:20,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 20:59:20,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@1581ce28)
2020-11-07 20:59:20,557 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=9}} for Document{{name=9}} fields.
2020-11-07 20:59:20,558 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{name=9}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:59:20,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, name=Soaps & Detergents}})
2020-11-07 20:59:20,563 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, name=Soaps & Detergents}}, com.initializers.services.apiservices.model.item.ItemSubCategory@41c3cce8)
2020-11-07 20:59:20,616 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "18"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:59:20,628 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "18"}}, Fields: {}, Sort: {}
2020-11-07 20:59:20,630 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:20,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:59:20,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:59:20,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "18"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:59:20,775 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "18"}}, Fields: {}, Sort: {}
2020-11-07 20:59:20,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:37,146 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=18}} for Document{{}} fields.
2020-11-07 20:59:37,148 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:59:37,155 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:59:37,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@507fce17)
2020-11-07 20:59:37,156 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=18, available=Y}} for Document{{}} fields.
2020-11-07 20:59:37,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "18"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:37,159 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "18"}}, Fields: {}, Sort: {}
2020-11-07 20:59:37,160 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:37,171 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 20:59:37,173 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=18}} for Document{{}} fields.
2020-11-07 20:59:37,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:59:37,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:59:37,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6861f25d)
2020-11-07 20:59:37,177 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=18, available=Y}} for Document{{}} fields.
2020-11-07 20:59:37,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "18"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:37,183 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 20:59:37,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 20:59:37,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:59:37,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2a3c0b94)
2020-11-07 20:59:37,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@2a3c0b94, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:59:37,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 20:59:37,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@2a3c0b94, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 20:59:37,189 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=18}} for Document{{}} fields.
2020-11-07 20:59:37,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 20:59:37,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 20:59:37,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4113a23b)
2020-11-07 20:59:37,191 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=18, available=Y}} for Document{{}} fields.
2020-11-07 20:59:37,192 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "18"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:37,193 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 20:59:37,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 20:59:37,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:59:37,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6f32c378)
2020-11-07 20:59:37,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@6f32c378, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:59:37,197 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 20:59:37,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@6f32c378, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 20:59:37,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@8a637d9, Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:59:37,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 20:59:37,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@8a637d9, Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:59:37,255 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:59:37,256 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:37,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:59:37,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d4aa582)
2020-11-07 20:59:37,362 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=17}} for Document{{}} fields.
2020-11-07 20:59:37,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "17"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:37,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:59:37,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71c3ca52)
2020-11-07 20:59:39,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:59:39,120 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:59:40,762 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:59:40,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 20:59:40,895 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 20:59:44,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:59:46,659 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "18"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 20:59:46,672 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "18"}}, Fields: {}, Sort: {}
2020-11-07 20:59:46,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 20:59:46,674 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 20:59:46,675 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=17, itemId=18, actualPrice=120.0, discount=5, discountPrice=114.0, value=3.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50c86b77)
2020-11-07 21:00:31,001 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=18}} for Document{{}} fields.
2020-11-07 21:00:31,002 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:00:31,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:00:31,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@38746c40)
2020-11-07 21:00:36,479 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@38746c40, Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604763035/bu0fjvkuqeqhj67fh3mh.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:00:36,480 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 21:00:36,482 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@38746c40, Document{{_id=18, categoryId=2, subCategoryId=9, name=Santoor, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604763035/bu0fjvkuqeqhj67fh3mh.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:00:55,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:00:56,034 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:00:56,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:00:57,420 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:00:57,426 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:01:19,426 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:01:19,427 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 21:01:19,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:01:19,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1266bb67)
2020-11-07 21:01:19,433 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 21:01:19,434 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 21:01:19,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:01:19,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6adfd1c3)
2020-11-07 21:01:19,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 21:01:19,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@3dd0bae9, Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:01:19,439 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 21:01:19,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@3dd0bae9, Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:01:19,443 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=19, available=Y}} for Document{{}} fields.
2020-11-07 21:01:19,444 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "19"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:19,446 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 21:01:19,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 21:01:19,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 21:01:19,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@32d1e5dc)
2020-11-07 21:01:19,449 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=9}} for Document{{name=9}} fields.
2020-11-07 21:01:19,449 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{name=9}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 21:01:19,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, name=Soaps & Detergents}})
2020-11-07 21:01:19,451 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, name=Soaps & Detergents}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3433f81f)
2020-11-07 21:01:19,496 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:01:19,498 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-11-07 21:01:19,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:19,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:01:19,574 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:01:19,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:01:19,642 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-11-07 21:01:19,643 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:38,600 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:01:38,601 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:01:38,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:01:38,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1e84c23e)
2020-11-07 21:01:38,604 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=19, available=Y}} for Document{{}} fields.
2020-11-07 21:01:38,605 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "19"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:38,608 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-11-07 21:01:38,609 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:38,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 21:01:38,628 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:01:38,629 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:01:38,631 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:01:38,632 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1cc0dd17)
2020-11-07 21:01:38,633 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=19, available=Y}} for Document{{}} fields.
2020-11-07 21:01:38,633 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "19"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:38,635 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 21:01:38,635 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 21:01:38,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:01:38,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@58889fb7)
2020-11-07 21:01:38,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@58889fb7, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:01:38,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 21:01:38,638 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@58889fb7, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:01:38,639 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:01:38,640 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:01:38,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:01:38,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@8ef8a90)
2020-11-07 21:01:38,643 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=19, available=Y}} for Document{{}} fields.
2020-11-07 21:01:38,644 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "19"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:38,645 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:01:38,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 21:01:38,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:01:38,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@30423c81)
2020-11-07 21:01:38,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@30423c81, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:01:38,648 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 21:01:38,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@30423c81, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:01:38,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@2a7067fb, Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:01:38,650 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 21:01:38,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@2a7067fb, Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:01:38,698 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=18}} for Document{{}} fields.
2020-11-07 21:01:38,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:38,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:01:38,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ffb1881)
2020-11-07 21:01:38,733 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=18}} for Document{{}} fields.
2020-11-07 21:01:38,734 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "18"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:38,832 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:01:38,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79550512)
2020-11-07 21:01:40,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:01:40,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:01:40,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:01:40,411 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:01:40,417 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:01:45,770 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:01:48,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:01:48,214 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-11-07 21:01:48,215 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:01:48,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:01:48,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5965a400)
2020-11-07 21:02:11,926 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:02:11,927 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:02:11,930 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:02:11,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@36192025)
2020-11-07 21:02:15,231 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Invalid image file] with root cause
java.lang.RuntimeException: Invalid image file
	at com.cloudinary.strategies.AbstractUploaderStrategy.processResponse(AbstractUploaderStrategy.java:85)
	at com.cloudinary.http44.UploaderStrategy.callApi(UploaderStrategy.java:140)
	at com.cloudinary.Uploader.callApi(Uploader.java:34)
	at com.cloudinary.Uploader.upload(Uploader.java:76)
	at com.cloudinary.Uploader.upload(Uploader.java:68)
	at com.initializers.services.apiservices.model.CloudinaryConfig.addImage(CloudinaryConfig.java:51)
	at com.initializers.services.apiservices.model.CloudinaryConfig$$FastClassBySpringCGLIB$$4c9be82b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.initializers.services.apiservices.model.CloudinaryConfig$$EnhancerBySpringCGLIB$$a106f88e.addImage(<generated>)
	at com.initializers.services.apiservices.service.impl.ImageServiceImpl.addNewImage(ImageServiceImpl.java:44)
	at com.initializers.services.apiservices.controller.AdminController.uploadImage(AdminController.java:144)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-07 21:03:54,976 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:03:54,977 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:03:54,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:03:54,981 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1426942)
2020-11-07 21:03:54,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1426942, Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:03:54,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 21:03:54,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1426942, Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:04:02,736 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:04:02,737 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:04:02,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:04:02,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@736630e5)
2020-11-07 21:04:05,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@736630e5, Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604763244/esxkojhbgktqxi7nvlod.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:04:05,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 21:04:05,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@736630e5, Document{{_id=19, categoryId=2, subCategoryId=9, name=safe wash, description=Document{{itemProperties=, sellerName=Wipro, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604763244/esxkojhbgktqxi7nvlod.png], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:04:06,113 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:04:06,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:04:06,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:04:10,398 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:05:04,991 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:05:05,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:05:05,331 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:05:10,843 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "name" : { "$in" : ["ariel"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:09,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 21:15:12,156 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:15:12,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 21:15:12,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 21:15:12,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@6702b443)
2020-11-07 21:15:12,162 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:15:12,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 21:15:12,174 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 21:15:12,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@71d2f55d)
2020-11-07 21:15:12,176 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:15:12,177 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:15:12,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:15:12,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@16795e9d)
2020-11-07 21:15:12,188 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:15:12,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:15:12,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:15:12,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d255eaf)
2020-11-07 21:15:12,200 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:15:12,201 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:15:12,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:15:12,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@31747820)
2020-11-07 21:15:12,207 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:15:12,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:15:12,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:15:12,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@7892f8b5)
2020-11-07 21:15:12,234 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:15:12,235 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 21:15:12,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 21:15:12,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@5e30d451)
2020-11-07 21:15:12,241 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:15:12,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 21:15:12,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 21:15:12,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@10d2c746)
2020-11-07 21:15:12,250 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:15:12,251 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:15:12,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:15:12,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@7921adc5)
2020-11-07 21:15:12,332 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:15:12,332 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:15:12,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:15:12,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@13e66e4)
2020-11-07 21:15:12,355 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:15:12,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:15:12,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:15:12,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@5974b8ce)
2020-11-07 21:15:12,366 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:15:12,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:15:12,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:15:12,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f9aac51)
2020-11-07 21:15:14,972 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 21:15:15,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 21:15:15,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:15:15,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@794fcd12)
2020-11-07 21:15:15,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 21:15:15,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7d7e4389)
2020-11-07 21:15:15,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 21:15:15,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@317b7149)
2020-11-07 21:15:15,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:15:15,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@189088ed)
2020-11-07 21:15:15,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:15:15,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1fb0f1b0)
2020-11-07 21:15:15,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:15:15,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@10dd9bc4)
2020-11-07 21:15:16,316 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 21:15:19,532 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:27,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:27,470 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:15:27,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:15:33,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:38,508 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "19"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:38,527 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "19"}}, Fields: {}, Sort: {}
2020-11-07 21:15:38,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:15:38,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:15:38,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=18, itemId=19, actualPrice=350.0, discount=5, discountPrice=333.0, value=1.0, unit=Pack, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e796809)
2020-11-07 21:15:42,138 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:42,327 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:15:42,328 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:15:47,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:51,696 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "16"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:58,657 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$match" : { "name" : { "$in" : ["Harpic"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:15:59,873 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$match" : { "name" : { "$in" : ["Harpic"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:16:03,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$match" : { "name" : { "$in" : ["Harpi"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:16:06,953 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:16:10,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:16:10,116 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:16:49,938 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:16:49,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 21:16:49,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:16:49,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1bfc6021)
2020-11-07 21:16:49,948 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 21:16:49,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 21:16:49,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:16:49,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7a221ba3)
2020-11-07 21:16:49,952 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 21:16:49,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@ead2568, Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:16:49,957 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-11-07 21:16:49,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@ead2568, Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:16:49,967 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=20, available=Y}} for Document{{}} fields.
2020-11-07 21:16:49,968 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "20"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:16:49,976 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-11-07 21:16:49,976 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 21:16:49,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need}})
2020-11-07 21:16:49,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need}}, com.initializers.services.apiservices.model.item.ItemCategory@b3fc794)
2020-11-07 21:16:49,978 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=9}} for Document{{name=9}} fields.
2020-11-07 21:16:49,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{name=9}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 21:16:49,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, name=Soaps & Detergents}})
2020-11-07 21:16:49,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, name=Soaps & Detergents}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7486fffe)
2020-11-07 21:16:50,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "20"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:16:50,094 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:16:50,095 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:16:50,179 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "20"}}, Fields: {}, Sort: {}
2020-11-07 21:16:50,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:16:50,253 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "20"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:16:50,275 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "20"}}, Fields: {}, Sort: {}
2020-11-07 21:16:50,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:21,608 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=20}} for Document{{}} fields.
2020-11-07 21:17:21,609 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:17:21,614 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:17:21,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@543bcc69)
2020-11-07 21:17:21,616 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=20, available=Y}} for Document{{}} fields.
2020-11-07 21:17:21,617 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "20"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:21,626 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "itemId" : { "$numberLong" : "20"}}, Fields: {}, Sort: {}
2020-11-07 21:17:21,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:21,629 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-11-07 21:17:21,631 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=20}} for Document{{}} fields.
2020-11-07 21:17:21,632 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:17:21,633 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:17:21,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@114741ea)
2020-11-07 21:17:21,635 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=20, available=Y}} for Document{{}} fields.
2020-11-07 21:17:21,636 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "20"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:21,639 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "9"}}, Fields: {}, Sort: {}
2020-11-07 21:17:21,640 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-11-07 21:17:21,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:17:21,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@48dd309c)
2020-11-07 21:17:21,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@48dd309c, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:17:21,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-11-07 21:17:21,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@48dd309c, Document{{_id=9, categoryId=2, name=Soaps & Detergents, description=, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1604761484/lnahbbkoev6ykm8yxc9j.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-11-07 21:17:21,648 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=20}} for Document{{}} fields.
2020-11-07 21:17:21,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:17:21,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:17:21,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@501e4f8f)
2020-11-07 21:17:21,651 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=20, available=Y}} for Document{{}} fields.
2020-11-07 21:17:21,652 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "20"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:21,654 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:17:21,655 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-11-07 21:17:21,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:17:21,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5acc9961)
2020-11-07 21:17:21,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@5acc9961, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:17:21,662 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-11-07 21:17:21,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@5acc9961, Document{{_id=2, name=Daily Need, description=Daily Needs, offer=32, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-11-07 21:17:21,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@712fdbc3, Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:17:21,672 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-11-07 21:17:21,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@712fdbc3, Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:17:21,775 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:17:21,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:21,851 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:17:21,853 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3492c7f8)
2020-11-07 21:17:21,868 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=19}} for Document{{}} fields.
2020-11-07 21:17:21,869 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "19"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:21,872 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:17:21,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f152999)
2020-11-07 21:17:23,475 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:17:23,475 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:17:25,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:17:25,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:17:25,224 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:17:34,320 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "9"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:17:36,120 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "20"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:17:36,124 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "20"}}, Fields: {}, Sort: {}
2020-11-07 21:17:36,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:17:36,131 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:17:36,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=19, itemId=20, actualPrice=360.0, discount=10, discountPrice=324.0, value=1.0, unit=Ltr, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66773db)
2020-11-07 21:18:11,427 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=20}} for Document{{}} fields.
2020-11-07 21:18:11,429 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "20"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:18:11,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:18:11,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5ab9983e)
2020-11-07 21:18:15,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5ab9983e, Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604764095/ad91r9prdbhiru9rigdr.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:18:15,708 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-11-07 21:18:15,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@5ab9983e, Document{{_id=20, categoryId=2, subCategoryId=9, name=Surf Excel Matic, description=Document{{itemProperties=after wash, sellerName=Surf Excel, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1604764095/ad91r9prdbhiru9rigdr.webp], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-11-07 21:18:17,297 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:18:17,478 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 21:18:17,479 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 21:18:21,284 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 21:18:22,037 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 21:18:22,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:18:22,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@53f2aa4e)
2020-11-07 21:18:22,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 21:18:22,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5a65959d)
2020-11-07 21:18:22,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 21:18:22,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@73f8c9d0)
2020-11-07 21:18:22,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:18:22,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6bfcc509)
2020-11-07 21:18:22,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:18:22,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2d9ab2e2)
2020-11-07 21:18:22,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 21:18:22,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5b2513b1)
2020-11-07 21:18:22,824 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 21:18:28,426 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 21:18:29,243 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:18:29,244 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 21:18:29,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 21:18:29,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@4d75512b)
2020-11-07 21:18:29,256 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:29,257 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 21:18:29,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 21:18:29,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@c79abe5)
2020-11-07 21:18:29,270 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:18:29,271 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:18:29,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:18:29,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@6be25f48)
2020-11-07 21:18:29,279 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:18:29,280 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:29,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:18:29,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@35630976)
2020-11-07 21:18:29,287 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:18:29,287 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:18:29,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:18:29,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4c02088d)
2020-11-07 21:18:29,291 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:18:29,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:29,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:18:29,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@49130cd0)
2020-11-07 21:18:31,872 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:31,873 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 21:18:31,876 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:18:31,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Tue Aug 25 05:30:00 IST 2020, deliveredBy=Thu Aug 27 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 21:18:31,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, orderList=[Document{{userId=1, itemId=1, availabilityId=1, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Tue Aug 25 05:30:00 IST 2020, deliveredBy=Thu Aug 27 05:30:00 IST 2020, totalAmount=520.0, deliveryCharge=10.0, coupenCode=SUND10, coupenDiscount=10.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@50d75caa)
2020-11-07 21:18:31,941 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:31,942 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 21:18:31,946 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:31,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:31,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 21:18:31,954 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@72171308)
2020-11-07 21:18:31,955 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:18:31,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:31,956 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53b3ec59)
2020-11-07 21:18:31,957 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:18:31,957 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:31,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2e5f4c63)
2020-11-07 21:18:31,958 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:31,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21b39d41)
2020-11-07 21:18:31,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:31,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57708765)
2020-11-07 21:18:31,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:18:31,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@4cae8bba)
2020-11-07 21:18:31,970 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{value=1, unit=1}} fields.
2020-11-07 21:18:31,971 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{value=1, unit=1}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:31,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, value=1.0, unit=KG}})
2020-11-07 21:18:31,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, value=1.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@4350a02f)
2020-11-07 21:18:31,992 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:18:31,993 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:18:32,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:18:32,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@290886e3)
2020-11-07 21:18:32,029 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:18:32,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:32,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:18:32,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@634d4f99)
2020-11-07 21:18:37,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:18:37,082 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:37,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:37,092 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62f445f0)
2020-11-07 21:18:37,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13239c59)
2020-11-07 21:18:37,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,094 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20b0f352)
2020-11-07 21:18:37,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2831483a)
2020-11-07 21:18:37,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:18:37,129 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:37,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:37,139 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c8c3ec7)
2020-11-07 21:18:37,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19ca098d)
2020-11-07 21:18:37,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23e338f6)
2020-11-07 21:18:37,141 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:37,142 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f4d74ca)
2020-11-07 21:18:41,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:18:41,528 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=4}} for Document{{}} fields.
2020-11-07 21:18:41,529 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:41,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:41,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c619914)
2020-11-07 21:18:41,607 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "itemId" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-11-07 21:18:41,608 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:41,623 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=7, itemId=4, actualPrice=120, discount=0, discountPrice=120, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:41,624 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=7, itemId=4, actualPrice=120, discount=0, discountPrice=120, value=1, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61b84241)
2020-11-07 21:18:43,399 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-11-07 21:18:43,400 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:43,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:18:43,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:43,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ea6f74c)
2020-11-07 21:18:43,430 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:43,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:43,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:43,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@643d329a)
2020-11-07 21:18:43,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:43,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=3.0, unit=KG, available=Active, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c06ffff)
2020-11-07 21:18:43,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:43,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=12.0, discount=0, discountPrice=12.0, value=1.0, unit=TON, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@474296c4)
2020-11-07 21:18:43,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:43,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=4, itemId=1, actualPrice=120.0, discount=10, discountPrice=108.0, value=9.0, unit=KKG, available=InActive, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f3b123)
2020-11-07 21:18:45,194 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-11-07 21:18:45,208 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:18:45,209 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.UserOrderSet in collection: user-order
2020-11-07 21:18:45,218 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-11-07 21:18:45,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:45,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}})
2020-11-07 21:18:45,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=5, itemId=2, actualPrice=120.0, discount=0, discountPrice=120.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-11-07 21:18:45,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=5, itemId=2, actualPrice=120.0, discount=0, discountPrice=120.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a7c0138)
2020-11-07 21:18:45,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, orderList=[Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=180.0}}, Document{{userId=1, itemId=1, availabilityId=2, quantity=2, amount=340.0}}], addressId=1, status=Document{{confirmed=true, delivered=true}}, orderAt=Fri Aug 21 19:47:41 IST 2020, deliveredBy=Tue Aug 25 05:30:00 IST 2020, totalAmount=500.0, _class=com.initializers.services.apiservices.model.UserOrderSet}}, com.initializers.services.apiservices.model.UserOrderSet@35d72515)
2020-11-07 21:18:45,223 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-11-07 21:18:45,224 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.Address in collection: user_address
2020-11-07 21:18:45,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}})
2020-11-07 21:18:45,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, userId=1, name=sharath, phoneNumber=9112344321, firstLine=indiranagar, secondLine=bangalore, landMark=near ring road, pinCode=573221, _class=com.initializers.services.apiservices.model.Address}}, com.initializers.services.apiservices.model.Address@69cd0542)
2020-11-07 21:18:45,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:18:45,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:18:45,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:18:45,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@38e9f127)
2020-11-07 21:18:45,231 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:18:45,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:45,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:18:45,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@35082d4d)
2020-11-07 21:18:45,236 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-11-07 21:18:45,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-11-07 21:18:45,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Gold winner}})
2020-11-07 21:18:45,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Gold winner}}, com.initializers.services.apiservices.model.item.ItemDetails@397b4974)
2020-11-07 21:18:45,239 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=2}} for Document{{value=2, unit=2}} fields.
2020-11-07 21:18:45,240 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{value=2, unit=2}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-11-07 21:18:45,241 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, value=3.0, unit=KG}})
2020-11-07 21:18:45,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, value=3.0, unit=KG}}, com.initializers.services.apiservices.model.item.ItemAvailability@389dbc0c)
2020-11-07 21:18:46,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-11-07 22:33:06,387 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 22:33:06,618 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-11-07 22:33:06,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 22:35:25,608 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:35:25,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:25,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3386ebfe)
2020-11-07 22:35:25,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:35:25,612 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7099a667)
2020-11-07 22:35:25,613 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:35:25,613 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4ad60c8d)
2020-11-07 22:35:25,614 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:25,614 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6927ad21)
2020-11-07 22:35:25,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:25,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6d7a62e0)
2020-11-07 22:35:25,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:25,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@50ed4bb6)
2020-11-07 22:35:26,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:35:26,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:26,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4f8a12f1)
2020-11-07 22:35:26,822 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:35:26,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3b1c3c08)
2020-11-07 22:35:26,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:35:26,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@58cff2f6)
2020-11-07 22:35:26,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:26,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@d67583f)
2020-11-07 22:35:26,827 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:26,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1265cef8)
2020-11-07 22:35:26,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:26,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@48c35cc0)
2020-11-07 22:35:32,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:35:33,517 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:35:40,348 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "1"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:35:44,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:35:49,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:35:57,073 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:35:57,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:57,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@45050595)
2020-11-07 22:35:57,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:35:57,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2c183fa2)
2020-11-07 22:35:57,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:35:57,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5d9df384)
2020-11-07 22:35:57,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:57,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7e94083c)
2020-11-07 22:35:57,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:57,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@13d083d6)
2020-11-07 22:35:57,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:35:57,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7e584b21)
2020-11-07 22:36:51,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:36:52,585 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:36:54,415 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:37:01,054 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:37:01,063 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:01,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6fbc5f6c)
2020-11-07 22:37:01,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:37:01,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@58ad4404)
2020-11-07 22:37:01,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:37:01,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@640353e7)
2020-11-07 22:37:01,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:01,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@36f436fb)
2020-11-07 22:37:01,068 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:01,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3bbe4876)
2020-11-07 22:37:01,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:01,072 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@901a661)
2020-11-07 22:37:01,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:37:04,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:37:06,016 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:37:06,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:06,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2cacf1d7)
2020-11-07 22:37:06,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:37:06,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6a00659f)
2020-11-07 22:37:06,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:37:06,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6d96282)
2020-11-07 22:37:06,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:06,029 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7d94d125)
2020-11-07 22:37:06,030 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:06,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@36fda509)
2020-11-07 22:37:06,031 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:06,032 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5f3802d4)
2020-11-07 22:37:06,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:37:18,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:37:18,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:18,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1ce5e053)
2020-11-07 22:37:18,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:37:18,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@159d7f5e)
2020-11-07 22:37:18,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:37:18,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@699a2d28)
2020-11-07 22:37:18,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:18,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@57f48698)
2020-11-07 22:37:18,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:18,012 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@64a0034d)
2020-11-07 22:37:18,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:37:18,013 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1ab9e708)
2020-11-07 22:37:19,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 22:37:19,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-11-07 22:37:21,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-11-07 22:38:34,829 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:38:36,163 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:38:37,844 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-11-07 22:38:38,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:38:38,737 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:38,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@59f398bc)
2020-11-07 22:38:38,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:38:38,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@35de52bf)
2020-11-07 22:38:38,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:38:38,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5814aaef)
2020-11-07 22:38:38,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:38,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7c26d185)
2020-11-07 22:38:38,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:38,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@395580c5)
2020-11-07 22:38:38,744 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:38,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7ed976fa)
2020-11-07 22:38:39,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-11-07 22:38:39,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:39,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@22727a1a)
2020-11-07 22:38:39,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:38:39,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@51c1f88a)
2020-11-07 22:38:39,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}})
2020-11-07 22:38:39,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, name=Biscuts, description=Parle, hide&seek, sunfeast, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589331/wbpkuby2tvgmhok22wmt.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@351f2394)
2020-11-07 22:38:39,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:39,255 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=4, name=Drinks, description=Pepsi, Coke and much more, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@604b0398)
2020-11-07 22:38:39,255 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:39,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=6, name=Cleaning, description=Great discount on Cleaning Products, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@51581721)
2020-11-07 22:38:39,257 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}})
2020-11-07 22:38:39,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=5, name=Beauty Products, description=Face wash, soaps etc at exciting offers, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1597589310/ddq1iq1o1domeaphzpru.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@f03b028)
2020-11-07 22:38:40,053 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
