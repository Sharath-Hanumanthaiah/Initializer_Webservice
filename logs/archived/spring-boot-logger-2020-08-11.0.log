2020-08-09 11:57:57,893 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 12:04:48,702 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 13:00:07,793 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 13:21:06,636 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 13:39:51,847 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 13:49:25,596 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 13:49:41,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 14:01:07,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 14:01:07,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 14:01:07,379 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 14:02:40,485 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 14:02:40,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 14:02:40,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 14:02:54,416 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:08:53,531 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:09:55,934 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:31:14,935 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:32:23,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:32:24,020 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:33:19,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:33:19,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:33:57,459 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:34:43,855 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}, { "$match" : { "status" : { "$in" : []}}}, { "$match" : { "orderAt" : { "$in" : ["undefined"]}}}] in collection user-order
2020-08-09 19:37:55,475 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}, { "$match" : { "status" : { "$in" : []}}}, { "$match" : { "orderAt" : { "$in" : ["undefined"]}}}] in collection user-order
2020-08-09 19:37:55,959 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:37:58,800 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:38:06,465 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:38:14,987 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:39:10,852 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:39:23,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:40:03,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 19:40:03,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 19:40:03,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 19:40:35,466 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 19:40:35,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 19:40:35,498 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 19:40:38,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:41:31,589 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 19:41:31,605 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 19:41:31,620 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 19:43:47,349 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 19:43:47,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 19:43:47,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 19:44:04,993 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "name" : { "$in" : ["123"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 19:59:43,776 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 19:59:48,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "name" : { "$in" : ["123"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 19:59:50,652 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 19:59:50,819 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 19:59:50,822 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 20:01:56,951 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:02:01,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 20:02:01,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 20:02:01,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 20:04:21,111 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 20:08:36,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 20:08:37,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 20:08:37,340 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 20:08:38,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:09:59,149 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:10:14,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:10:17,552 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}, { "$numberLong" : "14"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 20:10:19,595 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 20:10:19,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-09 20:10:19,861 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-09 20:10:30,556 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "13"}, { "$numberLong" : "14"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-09 20:10:43,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:10:52,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:18:38,861 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:18:47,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:43:36,128 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}, { "$match" : { "status.confirmed" : { "$in" : [false]}}}] in collection user-order
2020-08-09 20:44:43,634 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:44:57,611 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:45:05,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}, { "$match" : { "status.confirmed" : { "$in" : [false]}}}, { "$match" : { "orderAt" : { "$in" : ["2020-08-03T00:00:00.000Z"]}}}, { "$match" : { "orderAt" : { "$in" : ["2020-08-14T00:00:00.000Z"]}}}] in collection user-order
2020-08-09 20:50:31,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-09 20:51:46,815 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 5753 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-09 20:51:46,828 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-09 20:51:46,828 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-09 20:51:48,700 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-09 20:51:48,701 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-09 20:51:48,716 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-09 20:51:48,717 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-09 20:51:48,717 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-09 20:51:48,719 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-09 20:51:48,719 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-09 20:51:48,720 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-09 20:51:48,720 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-09 20:51:48,721 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-09 20:51:48,722 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-09 20:51:48,722 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-09 20:51:48,723 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-09 20:51:48,724 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-09 20:51:48,725 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-09 20:51:48,725 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-09 20:51:48,725 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-09 20:51:48,795 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-09 20:51:48,796 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-09 20:51:48,846 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 144ms. Found 15 MongoDB repository interfaces.
2020-08-09 20:51:50,694 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-09 20:51:50,695 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-09 20:51:50,860 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-09 20:51:50,861 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-09 20:51:50,890 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-09 20:51:50,891 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-09 20:51:50,892 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-09 20:51:50,893 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-09 20:51:50,894 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-09 20:51:50,896 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-09 20:51:50,897 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-09 20:51:50,898 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-09 20:51:50,899 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-09 20:51:50,899 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-09 20:51:50,901 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-09 20:51:50,902 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-09 20:51:50,902 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-09 20:51:50,904 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-09 20:51:50,907 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-09 20:51:50,909 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-09 20:51:50,910 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-09 20:51:50,911 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-09 20:51:50,912 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-09 20:51:50,915 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-09 20:51:50,925 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-09 20:51:51,164 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-09 20:51:51,179 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-09 20:51:51,195 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-09 20:51:51,215 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-09 20:51:51,230 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-09 20:51:51,247 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-09 20:51:51,255 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-09 20:51:51,279 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-09 20:51:51,391 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-09 20:51:51,404 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-09 20:51:51,418 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-09 20:51:51,429 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-09 20:51:51,440 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-09 20:51:51,449 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-09 20:51:51,460 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-09 20:51:51,494 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-09 20:51:51,520 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-09 20:51:51,539 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-09 20:51:51,574 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-09 20:51:51,606 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-09 20:51:51,620 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-09 20:51:51,628 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-09 20:51:51,636 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-09 20:51:51,642 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-09 20:51:51,657 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-09 20:51:51,665 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-09 20:51:51,680 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-09 20:51:51,690 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-09 20:51:51,798 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-09 20:51:51,802 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-09 20:51:51,803 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-09 20:51:51,804 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-09 20:51:51,869 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-09 20:51:51,878 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-09 20:51:52,349 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-09 20:51:52,360 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-09 20:51:52,386 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-09 20:51:52,605 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 6.063 seconds (JVM running for 22889.95)
2020-08-11 22:41:39,791 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 13177 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-11 22:41:39,797 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-11 22:41:39,798 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: prod
2020-08-11 22:41:42,633 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 22:41:42,659 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-11 22:41:42,688 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-11 22:41:42,690 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-11 22:41:42,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-11 22:41:42,693 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-11 22:41:42,694 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-11 22:41:42,695 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-11 22:41:42,695 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-11 22:41:42,698 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-11 22:41:42,700 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-11 22:41:42,701 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-11 22:41:42,701 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-11 22:41:42,702 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-11 22:41:42,702 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-11 22:41:42,704 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-11 22:41:42,706 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-11 22:41:42,957 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-11 22:41:42,959 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-11 22:41:42,969 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 308ms. Found 15 MongoDB repository interfaces.
2020-08-11 22:41:45,984 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:41:45,985 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:41:46,441 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:41:46,442 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:41:46,590 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-11 22:41:46,675 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-11 22:41:46,677 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-11 22:41:46,695 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-11 22:41:46,696 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-11 22:41:46,700 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-11 22:41:46,703 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-11 22:41:46,708 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-11 22:41:46,726 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-11 22:41:46,737 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-11 22:41:46,739 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-11 22:41:46,741 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-11 22:41:46,746 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-11 22:41:46,748 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-11 22:41:46,752 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-11 22:41:46,754 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-11 22:41:46,754 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-11 22:41:46,766 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-11 22:41:46,767 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-11 22:41:46,769 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-11 22:41:46,775 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-11 22:41:47,470 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-11 22:41:47,625 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-11 22:41:47,648 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-11 22:41:47,671 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-11 22:41:47,685 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-11 22:41:47,715 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-11 22:41:47,727 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-11 22:41:47,750 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-11 22:41:47,961 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-11 22:41:47,983 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-11 22:41:48,004 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-11 22:41:48,021 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-11 22:41:48,034 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-11 22:41:48,048 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-11 22:41:48,064 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-11 22:41:48,091 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-11 22:41:48,129 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-11 22:41:48,169 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-11 22:41:48,208 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-11 22:41:48,227 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-11 22:41:48,255 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-11 22:41:48,280 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-11 22:41:48,304 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-11 22:41:48,317 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-11 22:41:48,386 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-11 22:41:48,426 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-11 22:41:48,465 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-11 22:41:48,479 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-11 22:41:48,628 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in prod environment
2020-08-11 22:41:48,631 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-11 22:41:48,631 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-11 22:41:48,632 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-11 22:41:48,946 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-11 22:41:48,956 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-11 22:41:50,787 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-11 22:41:50,824 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-11 22:41:50,828 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-11 22:41:51,156 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 12.223 seconds (JVM running for 12.966)
2020-08-11 22:46:55,623 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping [http-nio-5000-exec-1] Mapped to org.springframework.data.rest.webmvc.halbrowser.HalBrowser#index(HttpServletRequest)
2020-08-11 22:46:56,331 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMapping [http-nio-5000-exec-7] Mapped to org.springframework.data.rest.webmvc.RepositoryController#listRepositories()
2020-08-11 22:50:02,331 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 20766 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-08-11 22:50:02,336 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-08-11 22:50:02,338 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-08-11 22:50:05,360 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-11 22:50:05,443 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-08-11 22:50:05,523 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-08-11 22:50:05,525 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-08-11 22:50:05,526 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-08-11 22:50:05,539 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-08-11 22:50:05,540 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-08-11 22:50:05,540 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-08-11 22:50:05,540 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-08-11 22:50:05,541 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-08-11 22:50:05,541 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-08-11 22:50:05,542 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-08-11 22:50:05,543 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-08-11 22:50:05,543 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-08-11 22:50:05,544 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-08-11 22:50:05,545 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-08-11 22:50:05,546 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-08-11 22:50:05,833 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-08-11 22:50:05,835 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-08-11 22:50:05,850 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 404ms. Found 15 MongoDB repository interfaces.
2020-08-11 22:50:10,565 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:50:10,566 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:50:11,311 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:50:11,312 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-08-11 22:50:11,449 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-08-11 22:50:11,474 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-08-11 22:50:11,484 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-08-11 22:50:11,486 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-08-11 22:50:11,492 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-08-11 22:50:11,498 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-08-11 22:50:11,501 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-08-11 22:50:11,504 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-08-11 22:50:11,505 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-08-11 22:50:11,506 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-08-11 22:50:11,508 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-08-11 22:50:11,513 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-08-11 22:50:11,516 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-08-11 22:50:11,518 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-08-11 22:50:11,522 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-08-11 22:50:11,523 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-08-11 22:50:11,525 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-08-11 22:50:11,526 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-08-11 22:50:11,527 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-08-11 22:50:11,529 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-08-11 22:50:11,531 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-08-11 22:50:12,838 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-08-11 22:50:13,243 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-08-11 22:50:13,406 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-08-11 22:50:13,507 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-08-11 22:50:13,530 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-08-11 22:50:13,552 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-08-11 22:50:13,570 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-08-11 22:50:13,607 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-08-11 22:50:13,879 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-08-11 22:50:13,963 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-08-11 22:50:13,989 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-08-11 22:50:14,016 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-08-11 22:50:14,034 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-08-11 22:50:14,052 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-08-11 22:50:14,071 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-08-11 22:50:14,088 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-08-11 22:50:14,127 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-08-11 22:50:14,155 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-08-11 22:50:14,183 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-08-11 22:50:14,194 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-08-11 22:50:14,225 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-08-11 22:50:14,249 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-08-11 22:50:14,273 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-08-11 22:50:14,285 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-08-11 22:50:14,323 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-08-11 22:50:14,342 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-08-11 22:50:14,366 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-08-11 22:50:14,386 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-08-11 22:50:14,523 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-08-11 22:50:14,526 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-11 22:50:14,526 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-08-11 22:50:14,527 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-08-11 22:50:14,730 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-08-11 22:50:14,742 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-08-11 22:50:17,228 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-08-11 22:50:17,271 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-08-11 22:50:17,278 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-08-11 22:50:17,645 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 16.418 seconds (JVM running for 17.557)
2020-08-11 22:50:33,400 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
2020-08-11 22:53:42,535 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-11 22:54:00,672 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] findAndModify using query: { "_id" : "item_category_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:54:00,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@1c80cea3, Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:00,964 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Inserting Document containing fields: [_id, name, description, imageLink, _class] in collection: item_category
2020-08-11 22:54:01,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@1c80cea3, Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:01,375 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:54:01,409 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:54:01,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:01,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3a281af8)
2020-08-11 22:54:01,497 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:54:01,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:54:01,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:01,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@7aa26bc2)
2020-08-11 22:54:03,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-11 22:54:03,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=}})
2020-08-11 22:54:03,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=}}, com.initializers.services.apiservices.model.item.ItemCategory@6bd7cb02)
2020-08-11 22:54:06,937 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:54:06,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:54:06,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:06,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@232340ff)
2020-08-11 22:54:11,922 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-11 22:54:11,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=}})
2020-08-11 22:54:11,926 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=}}, com.initializers.services.apiservices.model.item.ItemCategory@1f015962)
2020-08-11 22:54:34,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] findAndModify using query: { "_id" : "item_category_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:54:34,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@47e8a1c6, Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:34,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Inserting Document containing fields: [_id, name, description, imageLink, _class] in collection: item_category
2020-08-11 22:54:34,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@47e8a1c6, Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:34,221 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:54:34,223 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:54:34,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:34,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@4b75bcfd)
2020-08-11 22:54:34,307 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:54:34,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:54:34,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:54:34,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1da06fb3)
2020-08-11 22:54:39,968 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-08-11 22:54:39,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=}})
2020-08-11 22:54:39,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=}}, com.initializers.services.apiservices.model.item.ItemCategory@39ab1977)
2020-08-11 22:54:39,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=}})
2020-08-11 22:54:39,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=}}, com.initializers.services.apiservices.model.item.ItemCategory@43ae2b60)
2020-08-11 22:54:43,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-11 22:54:48,797 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:54:48,806 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-8] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-08-11 22:55:19,328 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:55:19,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:55:19,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:55:19,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6cd9a0d0)
2020-08-11 22:55:19,334 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:55:19,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:55:19,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:55:19,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5544310c)
2020-08-11 22:55:19,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:55:19,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@cf65f9f, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:19,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-08-11 22:55:19,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@cf65f9f, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:19,650 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:55:19,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:55:19,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:19,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@50fbbec9)
2020-08-11 22:55:19,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:55:19,799 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:55:19,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:55:19,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:19,814 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4e302526)
2020-08-11 22:55:24,763 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-11 22:55:24,770 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-08-11 22:55:24,862 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:55:27,262 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:55:51,776 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:55:51,778 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:55:51,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:55:51,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6c651e9a)
2020-08-11 22:55:51,781 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:55:51,782 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:55:51,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:55:51,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5cd67df9)
2020-08-11 22:55:51,786 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:55:51,789 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3d57a7b5, Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:51,789 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-08-11 22:55:51,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@3d57a7b5, Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:51,965 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:55:51,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:55:51,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:51,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7c446e5b)
2020-08-11 22:55:52,098 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:55:52,105 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:55:52,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:55:52,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:55:52,115 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@5e42f47a)
2020-08-11 22:55:54,393 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-11 22:55:54,476 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:55:56,677 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:56:09,277 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:56:09,278 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:56:09,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:56:09,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@798148d)
2020-08-11 22:56:09,282 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:56:09,283 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:56:09,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:56:09,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@766fa4eb)
2020-08-11 22:56:09,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:56:09,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6a209887, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:09,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-08-11 22:56:09,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@6a209887, Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:09,422 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-11 22:56:09,423 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:56:09,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:09,427 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@b90e1ea)
2020-08-11 22:56:09,520 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:56:09,531 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "3"}}, Fields: {}, Sort: {}
2020-08-11 22:56:09,532 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:56:09,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:09,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, categoryId=2, name=Biscuts, description=Biscuts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4b4520f2)
2020-08-11 22:56:11,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-11 22:56:12,020 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:56:14,065 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:56:30,856 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:56:30,857 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:56:30,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:56:30,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@349a9df3)
2020-08-11 22:56:30,863 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:56:30,864 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:56:30,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:56:30,868 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, name=Daily Need, description=Daily Needs, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3c244ebd)
2020-08-11 22:56:30,870 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] findAndModify using query: { "_id" : "item_subcategory_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:56:30,873 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@27bac201, Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:30,873 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Inserting Document containing fields: [_id, categoryId, name, description, imageLink, _class] in collection: item_sub_category
2020-08-11 22:56:30,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@27bac201, Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:30,973 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-08-11 22:56:30,975 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:56:30,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:30,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@24e8aae2)
2020-08-11 22:56:31,064 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "4"}}, Fields: {}, Sort: {}
2020-08-11 22:56:31,067 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:56:31,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:56:31,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:56:31,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, categoryId=2, name=Malt, description=different malts, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@325f48e1)
2020-08-11 22:56:33,296 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-08-11 22:56:33,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:56:35,825 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:56:38,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:56:38,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:57:52,696 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:57:52,697 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:57:52,698 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:57:52,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5b9b69db)
2020-08-11 22:57:52,700 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:57:52,701 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:57:52,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:57:52,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7224aa6b)
2020-08-11 22:57:52,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:57:52,722 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4c7594ce, Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:57:52,723 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-08-11 22:57:52,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4c7594ce, Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:57:52,961 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-11 22:57:52,964 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:57:52,968 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-11 22:57:52,970 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:57:52,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil}})
2020-08-11 22:57:52,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@639708b8)
2020-08-11 22:57:52,974 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-11 22:57:52,975 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:57:52,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Sunflower}})
2020-08-11 22:57:52,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Sunflower}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7ed83c50)
2020-08-11 22:57:53,207 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:57:53,240 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-08-11 22:57:53,291 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:57:53,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:57:53,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:57:53,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:57:53,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:57:53,521 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:57:53,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:57:57,239 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:57:57,358 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:57:57,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:58:01,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:58:01,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:58:39,551 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:58:39,552 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:58:39,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:58:39,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@218c33)
2020-08-11 22:58:39,556 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:58:39,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:58:39,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:58:39,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, categoryId=1, name=Ground nut, description=Ground Nut Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@a4a8b78)
2020-08-11 22:58:39,564 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:58:39,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4e5fc677, Document{{_id=2, categoryId=1, subCategoryId=2, name=Floyd , description=Document{{itemProperties=To[ Product, sellerName=ITC, disclaimer=Best for year}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:58:39,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-08-11 22:58:39,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4e5fc677, Document{{_id=2, categoryId=1, subCategoryId=2, name=Floyd , description=Document{{itemProperties=To[ Product, sellerName=ITC, disclaimer=Best for year}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:58:39,570 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-08-11 22:58:39,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:58:39,575 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{name=1}} fields.
2020-08-11 22:58:39,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{name=1}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:58:39,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, name=Oil}})
2020-08-11 22:58:39,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, name=Oil}}, com.initializers.services.apiservices.model.item.ItemCategory@1e5731a5)
2020-08-11 22:58:39,582 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{name=2}} fields.
2020-08-11 22:58:39,584 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{name=2}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:58:39,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, name=Ground nut}})
2020-08-11 22:58:39,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, name=Ground nut}}, com.initializers.services.apiservices.model.item.ItemSubCategory@a7f730d)
2020-08-11 22:58:39,722 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:58:39,726 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:58:39,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:58:39,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:58:39,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:58:39,906 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:58:39,924 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "2"}}, Fields: {}, Sort: {}
2020-08-11 22:58:39,926 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:58:41,900 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:58:41,986 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:58:42,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:58:45,904 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:58:45,915 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:58:48,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:58:48,462 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 22:58:48,463 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 22:58:53,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:58:53,439 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:58:53,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:23,835 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:23,836 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-11 22:59:23,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:59:23,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6e296409)
2020-08-11 22:59:23,842 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-11 22:59:23,844 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:23,846 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:59:23,848 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:23,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:59:23,871 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:23,872 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-11 22:59:23,874 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:59:23,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@15afd47b)
2020-08-11 22:59:23,875 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-11 22:59:23,876 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:23,878 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:59:23,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:59:23,882 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:59:23,883 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@33635679)
2020-08-11 22:59:23,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@33635679, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:59:23,885 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-08-11 22:59:23,897 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@33635679, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:59:23,898 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:23,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-11 22:59:23,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:59:23,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@488c9178)
2020-08-11 22:59:23,903 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-11 22:59:23,905 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:23,910 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:59:23,911 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:59:23,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:59:23,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@39062743)
2020-08-11 22:59:23,915 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@39062743, Document{{_id=1, name=Oil, description=Oil Products, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:59:23,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-11 22:59:23,918 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@39062743, Document{{_id=1, name=Oil, description=Oil Products, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:59:23,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@7a5e0a3d, Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:23,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-08-11 22:59:24,209 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@7a5e0a3d, Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:24,513 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:24,514 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:24,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:24,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@743121a4)
2020-08-11 22:59:24,660 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:24,661 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:24,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:24,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@730c18a8)
2020-08-11 22:59:29,070 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:29,070 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:29,071 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:29,072 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d10eda0)
2020-08-11 22:59:29,073 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-11 22:59:29,077 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:59:29,077 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:29,079 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:29,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b704307)
2020-08-11 22:59:52,134 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:52,135 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-11 22:59:52,137 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:59:52,138 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4f4a042a)
2020-08-11 22:59:52,138 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-11 22:59:52,140 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:52,142 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:59:52,143 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:52,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:52,146 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19f1243e)
2020-08-11 22:59:52,147 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-08-11 22:59:52,150 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:52,151 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-11 22:59:52,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:59:52,155 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@54ba86f7)
2020-08-11 22:59:52,156 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-11 22:59:52,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:52,160 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:59:52,162 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-08-11 22:59:52,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:59:52,166 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4445f249)
2020-08-11 22:59:52,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4445f249, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:59:52,168 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, name, description, offer, imageLink, _class]
2020-08-11 22:59:52,172 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@4445f249, Document{{_id=1, categoryId=1, name=Sunflower, description=Sunflower Oil, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-08-11 22:59:52,173 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 22:59:52,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-08-11 22:59:52,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-08-11 22:59:52,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, categoryId=1, subCategoryId=1, name=Gold winner, description=Document{{itemProperties=Top Product, sellerName=ITC, disclaimer=Best for 1 year}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5b31d5bf)
2020-08-11 22:59:52,179 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-08-11 22:59:52,180 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:52,183 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 22:59:52,184 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-08-11 22:59:52,200 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, name=Oil, description=Oil Products, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:59:52,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, name=Oil, description=Oil Products, offer=10, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@4b71ca33)
2020-08-11 22:59:52,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@4b71ca33, Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:59:52,205 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-08-11 22:59:52,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@4b71ca33, Document{{_id=1, name=Oil, description=Oil Products, offer=15, imageLink=, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-08-11 22:59:52,211 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@4bfc7094, Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:52,212 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, state, _class] in collection: item_availability
2020-08-11 22:59:52,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@4bfc7094, Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:52,471 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=2}} for Document{{}} fields.
2020-08-11 22:59:52,484 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:52,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:52,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e98c2f9)
2020-08-11 22:59:52,672 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-08-11 22:59:52,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 22:59:52,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 22:59:52,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fae14d)
2020-08-11 23:00:07,962 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-08-11 23:00:07,964 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 23:00:07,964 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-08-11 23:00:07,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 23:00:07,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cbe06ee)
2020-08-11 23:00:07,967 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "itemId" : { "$numberLong" : "1"}}, Fields: {}, Sort: {}
2020-08-11 23:00:07,968 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-08-11 23:00:07,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 23:00:07,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=100.0, discount=10, discountPrice=90.0, value=1.0, unit=KG, available=Active, state=Success, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ea5f236)
2020-08-11 23:00:07,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-08-11 23:00:07,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=15, discountPrice=170.0, value=2.0, unit=KG, available=InActive, state=Error, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6abd0718)
2020-08-11 23:00:16,741 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-08-11 23:00:16,830 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-08-11 23:00:16,839 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-08-11 23:00:21,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "user_address", "localField" : "addressId", "foreignField" : "_id", "as" : "join_address"}}, { "$project" : { "_id" : 1, "orderAt" : 1, "deliveredBy" : 1, "totalAmount" : 1, "status" : 1, "name" : "$join_address.name", "firstLine" : "$join_address.firstLine", "secondLine" : "$join_address.secondLine", "pinCode" : "$join_address.pinCode", "phoneNumber" : "$join_address.phoneNumber"}}] in collection user-order
