2020-07-12 00:00:04,262 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:00:04,259 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:00:04,400 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 00:00:15,641 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:00:16,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:00:17,394 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:00:17,918 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3cfb7837)
2020-07-12 00:00:33,926 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@3cfb7837, Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:00:33,956 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, imageLinks, status, _class]
2020-07-12 00:00:35,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@3cfb7837, Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:00:38,250 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:00:38,368 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:00:39,677 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 00:00:39,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:00:39,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 00:00:40,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@343dad5e)
2020-07-12 00:00:41,920 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 00:00:41,960 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:00:42,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 00:00:42,492 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3c05f2f3)
2020-07-12 00:01:04,123 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:01:04,124 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:01:59,553 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:01:59,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:01:59,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:01:59,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@43d6f83)
2020-07-12 00:01:59,572 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:01:59,575 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:01:59,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:01:59,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5102d04a)
2020-07-12 00:01:59,581 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:01:59,582 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:01:59,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:01:59,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@35cf1e99)
2020-07-12 00:01:59,597 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.updateItemDetailsAdmin(ItemDetailsServiceImpl.java:428)
	at com.initializers.services.apiservices.controller.AdminController.updateItemDetails(AdminController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 00:02:08,017 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:02:08,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:03:01,170 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:03:01,171 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:03:01,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:03:01,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2417d25c)
2020-07-12 00:03:01,178 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:03:01,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:03:01,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:03:01,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@23b13a5a)
2020-07-12 00:03:01,184 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:03:01,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:03:01,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:03:01,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@86e6a08)
2020-07-12 00:03:01,191 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-10] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.updateItemDetailsAdmin(ItemDetailsServiceImpl.java:428)
	at com.initializers.services.apiservices.controller.AdminController.updateItemDetails(AdminController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 00:03:17,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:03:17,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:04:15,394 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:04:15,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:04:15,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:04:15,484 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7178442c)
2020-07-12 00:04:20,013 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:04:20,037 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:04:20,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:04:20,132 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@347ad467)
2020-07-12 00:04:22,201 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:04:22,223 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:04:22,273 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:04:22,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4efaf77b)
2020-07-12 00:05:24,402 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.updateItemDetailsAdmin(ItemDetailsServiceImpl.java:428)
	at com.initializers.services.apiservices.controller.AdminController.updateItemDetails(AdminController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 00:05:27,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:05:27,387 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:05:37,681 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:05:37,706 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:05:37,763 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:05:37,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5edb8817)
2020-07-12 00:05:39,019 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:05:39,041 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:05:39,093 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:05:39,106 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@501c6dbc)
2020-07-12 00:06:11,390 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:06:11,395 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:06:11,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:06:11,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@11216787)
2020-07-12 00:06:11,418 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.updateItemDetailsAdmin(ItemDetailsServiceImpl.java:428)
	at com.initializers.services.apiservices.controller.AdminController.updateItemDetails(AdminController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 00:06:48,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:06:49,001 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 00:06:49,011 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:06:49,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:06:49,062 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:06:49,067 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:06:49,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:06:59,263 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:06:59,270 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:06:59,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:06:59,349 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:06:59,358 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:06:59,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:07:00,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:07:00,389 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:07:17,076 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:07:17,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:07:17,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:07:17,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4f32d419)
2020-07-12 00:07:29,317 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.updateItemDetailsAdmin(ItemDetailsServiceImpl.java:432)
	at com.initializers.services.apiservices.controller.AdminController.updateItemDetails(AdminController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 00:09:30,465 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 17596 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 00:09:30,467 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 00:09:30,468 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 00:09:31,498 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 00:09:31,501 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 00:09:31,512 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 00:09:31,513 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 00:09:31,514 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 00:09:31,514 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 00:09:31,514 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 00:09:31,515 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 00:09:31,516 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 00:09:31,516 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 00:09:31,517 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 00:09:31,517 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 00:09:31,518 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 00:09:31,518 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 00:09:31,519 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 00:09:31,519 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 00:09:31,520 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 00:09:31,589 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 00:09:31,590 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 00:09:31,594 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 93ms. Found 15 MongoDB repository interfaces.
2020-07-12 00:09:32,216 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:09:32,217 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:09:32,355 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:09:32,356 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:09:32,363 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 00:09:32,364 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 00:09:32,366 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 00:09:32,367 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 00:09:32,368 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 00:09:32,369 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 00:09:32,369 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 00:09:32,370 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 00:09:32,371 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 00:09:32,371 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 00:09:32,372 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 00:09:32,372 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 00:09:32,373 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 00:09:32,373 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 00:09:32,374 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 00:09:32,375 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 00:09:32,376 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 00:09:32,377 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 00:09:32,378 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 00:09:32,379 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 00:09:32,379 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 00:09:32,510 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 00:09:32,521 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 00:09:32,532 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 00:09:32,543 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 00:09:32,552 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 00:09:32,562 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 00:09:32,569 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 00:09:32,581 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 00:09:32,627 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 00:09:32,636 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 00:09:32,654 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 00:09:32,664 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 00:09:32,675 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 00:09:32,686 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 00:09:32,696 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 00:09:32,705 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 00:09:32,722 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 00:09:32,731 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 00:09:32,792 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 00:09:32,804 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 00:09:32,810 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 00:09:32,822 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 00:09:32,834 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 00:09:32,843 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 00:09:32,872 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 00:09:32,881 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 00:09:32,891 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 00:09:32,899 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 00:09:32,969 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 00:09:32,971 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 00:09:32,971 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 00:09:32,971 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 00:09:33,019 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 00:09:33,023 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 00:09:33,369 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 00:09:33,382 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 00:09:33,386 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 00:09:33,501 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.166 seconds (JVM running for 595.844)
2020-07-12 00:09:43,422 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:09:43,461 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 00:09:43,503 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 00:09:43,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:09:43,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:09:43,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18d3c6bd)
2020-07-12 00:09:43,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:09:43,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@644f98e6)
2020-07-12 00:09:43,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:09:43,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d0cb740)
2020-07-12 00:09:43,563 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:09:43,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dea99ba)
2020-07-12 00:09:43,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:09:43,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b8a5094)
2020-07-12 00:09:43,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:09:43,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@139a61ab)
2020-07-12 00:09:43,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:09:43,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ba4622f)
2020-07-12 00:09:48,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:09:48,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:09:48,124 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 00:09:54,564 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:09:54,600 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:09:54,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:09:55,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5b3ed6f1)
2020-07-12 00:10:06,777 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.updateItemDetailsAdmin(ItemDetailsServiceImpl.java:434)
	at com.initializers.services.apiservices.controller.AdminController.updateItemDetails(AdminController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 00:10:32,620 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:10:32,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:10:40,593 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:10:40,644 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:10:40,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:10:40,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@56290f5c)
2020-07-12 00:11:11,937 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.updateItemDetailsAdmin(ItemDetailsServiceImpl.java:434)
	at com.initializers.services.apiservices.controller.AdminController.updateItemDetails(AdminController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 00:11:28,901 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 17596 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 00:11:28,902 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 00:11:28,903 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 00:11:29,676 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 00:11:29,677 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 00:11:29,688 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 00:11:29,689 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 00:11:29,689 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 00:11:29,690 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 00:11:29,690 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 00:11:29,690 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 00:11:29,690 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 00:11:29,691 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 00:11:29,691 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 00:11:29,691 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 00:11:29,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 00:11:29,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 00:11:29,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 00:11:29,692 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 00:11:29,693 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 00:11:29,746 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 00:11:29,746 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 00:11:29,747 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69ms. Found 15 MongoDB repository interfaces.
2020-07-12 00:11:30,235 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:11:30,236 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:11:30,369 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:11:30,370 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 00:11:30,379 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 00:11:30,380 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 00:11:30,381 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 00:11:30,382 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 00:11:30,383 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 00:11:30,384 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 00:11:30,385 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 00:11:30,385 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 00:11:30,389 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 00:11:30,389 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 00:11:30,389 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 00:11:30,390 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 00:11:30,391 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 00:11:30,391 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 00:11:30,392 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 00:11:30,392 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 00:11:30,393 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 00:11:30,393 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 00:11:30,394 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 00:11:30,395 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 00:11:30,396 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 00:11:30,529 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 00:11:30,538 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 00:11:30,549 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 00:11:30,562 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 00:11:30,569 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 00:11:30,578 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 00:11:30,582 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 00:11:30,590 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 00:11:30,634 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 00:11:30,641 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 00:11:30,659 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 00:11:30,669 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 00:11:30,678 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 00:11:30,687 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 00:11:30,697 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 00:11:30,704 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 00:11:30,765 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 00:11:30,775 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 00:11:30,786 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 00:11:30,797 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 00:11:30,801 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 00:11:30,813 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 00:11:30,822 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 00:11:30,829 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 00:11:30,856 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 00:11:30,865 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 00:11:30,877 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 00:11:30,885 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 00:11:30,958 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 00:11:30,961 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 00:11:30,961 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 00:11:30,962 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 00:11:31,004 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 00:11:31,012 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 00:11:31,330 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 00:11:31,339 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 00:11:31,342 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 00:11:31,414 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 2.616 seconds (JVM running for 713.757)
2020-07-12 00:11:38,468 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:11:38,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:11:38,501 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 00:11:47,347 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:11:47,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:11:47,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:11:48,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@39b5783)
2020-07-12 00:11:58,878 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@39b5783, Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:11:58,881 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:11:58,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@39b5783, Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:11:58,911 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:11:58,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:11:58,931 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 00:11:58,937 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:11:58,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 00:11:59,028 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@c4ed958)
2020-07-12 00:11:59,032 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 00:11:59,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:11:59,050 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 00:11:59,140 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4a4dd599)
2020-07-12 00:12:02,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:12:02,461 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:13:06,348 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:13:06,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:13:06,353 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:13:06,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6def8989)
2020-07-12 00:13:06,369 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:13:06,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:13:06,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:13:06,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3818f411)
2020-07-12 00:13:06,376 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:13:06,377 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:13:06,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:13:06,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@19b80f7c)
2020-07-12 00:13:06,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6def8989, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:13:06,382 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:13:06,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6def8989, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:13:06,385 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:13:06,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:13:06,389 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:13:06,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:13:06,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:13:06,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@54133f62)
2020-07-12 00:13:06,408 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:13:06,424 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:13:06,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:13:06,427 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1185d7e6)
2020-07-12 00:13:11,394 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:13:11,395 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:13:18,278 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 00:13:18,279 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:13:18,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:13:18,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1224960b)
2020-07-12 00:13:18,284 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:13:18,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:13:18,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:13:18,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1ce36a3f)
2020-07-12 00:13:18,291 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:13:18,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:13:18,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:13:18,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@18dcfd7b)
2020-07-12 00:13:18,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1224960b, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:13:18,297 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:13:18,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1224960b, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:13:18,304 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 00:13:18,305 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:13:18,308 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:13:18,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:13:18,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:13:18,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@5dde6004)
2020-07-12 00:13:18,313 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:13:18,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:13:18,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:13:18,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6b7c217a)
2020-07-12 00:13:21,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:13:21,450 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 00:13:21,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:13:21,526 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:13:36,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:13:36,803 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=4, available=Y}} for Document{{}} fields.
2020-07-12 00:13:36,805 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "4"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:13:38,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:13:38,977 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:13:38,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:13:43,260 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:13:43,263 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=4, available=Y}} for Document{{}} fields.
2020-07-12 00:13:43,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "4"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:13:45,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:13:45,773 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:15:25,150 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=4}} for Document{{}} fields.
2020-07-12 00:15:25,151 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:15:25,153 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=4, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Inactive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:25,154 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=4, categoryId=13, subCategoryId=24, name=boost, imageLinks=[], status=Inactive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@597d33b)
2020-07-12 00:15:25,155 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:15:25,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:15:25,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:15:25,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@775ddef5)
2020-07-12 00:15:25,161 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:15:25,163 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:15:25,165 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:15:25,166 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6a7ad3aa)
2020-07-12 00:15:25,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@597d33b, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:25,168 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:15:25,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@597d33b, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:25,171 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=4, available=Y}} for Document{{}} fields.
2020-07-12 00:15:25,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "4"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:15:25,177 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:15:25,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:15:25,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:15:25,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@4d909a53)
2020-07-12 00:15:25,182 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:15:25,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:15:25,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:15:25,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@762596d1)
2020-07-12 00:15:28,635 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:15:28,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:15:32,495 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=4}} for Document{{}} fields.
2020-07-12 00:15:32,496 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:15:32,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:32,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@3b9e15bd)
2020-07-12 00:15:32,505 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:15:32,507 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:15:32,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:15:32,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3559fcbe)
2020-07-12 00:15:32,514 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:15:32,516 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:15:32,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:15:32,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@31667ecd)
2020-07-12 00:15:32,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@3b9e15bd, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:32,521 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:15:32,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@3b9e15bd, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:32,525 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=4, available=Y}} for Document{{}} fields.
2020-07-12 00:15:32,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "4"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:15:32,530 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:15:32,532 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:15:32,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:15:32,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@7464f685)
2020-07-12 00:15:32,535 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:15:32,536 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:15:32,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:15:32,538 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3f1c3649)
2020-07-12 00:15:34,291 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:15:34,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:15:38,463 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=4}} for Document{{}} fields.
2020-07-12 00:15:38,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "4"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:15:38,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:38,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@52ba8bed)
2020-07-12 00:15:38,468 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:15:38,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:15:38,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:15:38,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@17b80fde)
2020-07-12 00:15:38,472 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:15:38,473 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:15:38,475 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:15:38,476 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@583143bc)
2020-07-12 00:15:38,478 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@52ba8bed, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:38,478 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:15:38,481 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@52ba8bed, Document{{_id=4, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:15:38,482 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=4, available=Y}} for Document{{}} fields.
2020-07-12 00:15:38,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "4"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:15:38,485 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:15:38,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:15:38,489 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:15:38,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@26e5df72)
2020-07-12 00:15:38,490 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:15:38,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:15:38,493 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:15:38,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2086cda0)
2020-07-12 00:15:41,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:15:41,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:15:41,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:15:48,045 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:15:48,049 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 00:15:48,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:15:48,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:15:48,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ddc1141)
2020-07-12 00:15:48,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:15:48,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@332a386)
2020-07-12 00:15:48,063 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:15:48,063 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21daa32a)
2020-07-12 00:15:48,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:15:48,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1bd5f5f1)
2020-07-12 00:15:48,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:15:48,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26bea9d3)
2020-07-12 00:15:48,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:15:48,066 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30060011)
2020-07-12 00:15:48,067 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 00:15:48,069 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44b136c8)
2020-07-12 00:17:13,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:17:13,821 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:17:13,825 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:17:23,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "30"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:17:23,105 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=30, available=Y}} for Document{{}} fields.
2020-07-12 00:17:23,106 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "30"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:17:25,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:17:25,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:17:29,222 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=30}} for Document{{}} fields.
2020-07-12 00:17:29,351 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "30"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:17:29,354 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=30, categoryId=13, subCategoryId=24, name=sunfeast dark fantacy, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:17:29,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=30, categoryId=13, subCategoryId=24, name=sunfeast dark fantacy, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@30b35191)
2020-07-12 00:17:29,358 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:17:29,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:17:29,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:17:29,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6187a2e0)
2020-07-12 00:17:29,364 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:17:29,364 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:17:29,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:17:29,366 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@c155a7a)
2020-07-12 00:17:29,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@30b35191, Document{{_id=30, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:17:29,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:17:29,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@30b35191, Document{{_id=30, categoryId=14, subCategoryId=27, name=Onion, description=Document{{itemProperties=Dry, sellerName=XYZ, disclaimer=best for 2 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:17:29,369 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=30, available=Y}} for Document{{}} fields.
2020-07-12 00:17:29,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "30"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:17:29,372 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:17:29,372 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:17:29,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:17:29,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@2850a77c)
2020-07-12 00:17:29,375 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:17:29,376 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:17:29,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:17:29,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@245543e)
2020-07-12 00:17:59,880 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:17:59,946 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:17:59,949 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:18:03,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "29"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:18:03,185 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=29, available=Y}} for Document{{}} fields.
2020-07-12 00:18:03,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "29"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:18:05,227 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:18:05,280 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:18:05,283 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:18:07,855 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:18:07,859 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:18:07,860 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:18:58,492 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:18:58,494 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:19:49,982 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:19:49,986 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:19:49,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:19:50,073 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:19:50,077 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:19:50,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:19:53,446 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:19:53,448 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:20:17,056 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 00:20:17,057 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:20:17,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:20:17,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5c1f777d)
2020-07-12 00:20:17,062 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:20:17,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:20:17,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:20:17,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@2afaf32c)
2020-07-12 00:20:17,067 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:20:17,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:20:17,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:20:17,070 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6c301407)
2020-07-12 00:20:17,073 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5c1f777d, Document{{_id=9, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:20:17,074 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:20:17,076 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@5c1f777d, Document{{_id=9, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:20:17,077 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:20:17,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:20:17,081 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:20:17,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:20:17,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:20:17,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@75c865ad)
2020-07-12 00:20:17,087 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:20:17,088 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:20:17,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:20:17,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@8568bab)
2020-07-12 00:20:20,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:20:20,892 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:20:20,895 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:20:25,413 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:20:25,416 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:20:25,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:20:54,471 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:20:54,478 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:21:34,303 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=8}} for Document{{}} fields.
2020-07-12 00:21:34,304 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:21:34,306 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=8, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:21:34,307 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=8, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@285be8ad)
2020-07-12 00:21:34,309 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:21:34,310 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:21:34,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:21:34,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@49441952)
2020-07-12 00:21:34,316 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:21:34,318 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:21:34,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:21:34,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6d05bcd8)
2020-07-12 00:21:34,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@285be8ad, Document{{_id=8, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:21:34,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:21:34,326 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@285be8ad, Document{{_id=8, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:21:34,327 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:21:34,328 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:21:34,345 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:21:34,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:21:34,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:21:34,349 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@462a6a3)
2020-07-12 00:21:34,350 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:21:34,352 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:21:34,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:21:34,356 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@566f5f5e)
2020-07-12 00:22:22,058 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:22:22,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:23:06,091 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:23:06,094 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:23:06,096 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:23:06,204 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:23:06,208 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:23:06,210 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:23:33,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:23:33,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:25:36,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:25:36,071 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:25:36,082 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:25:36,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:25:36,147 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:25:36,148 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:25:37,941 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:25:38,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:25:57,368 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=8}} for Document{{}} fields.
2020-07-12 00:25:57,369 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:25:57,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=8, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:25:57,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=8, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@216764bb)
2020-07-12 00:25:57,385 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:25:57,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:25:57,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:25:57,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@2e13b875)
2020-07-12 00:25:57,399 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:25:57,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:25:57,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:25:57,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3cc33914)
2020-07-12 00:25:57,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@216764bb, Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:25:57,409 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:25:57,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@216764bb, Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:25:57,412 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:25:57,415 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:25:57,417 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:25:57,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:25:57,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:25:57,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@32269ac6)
2020-07-12 00:25:57,426 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:25:57,428 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:25:57,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:25:57,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@17081e0f)
2020-07-12 00:26:18,709 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:26:18,716 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:26:39,972 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=8}} for Document{{}} fields.
2020-07-12 00:26:39,974 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:26:39,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:26:39,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1340feca)
2020-07-12 00:26:39,979 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 00:26:39,988 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:26:39,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 00:26:39,991 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@67009413)
2020-07-12 00:26:39,993 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 00:26:39,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:26:39,998 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 00:26:39,999 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1ef5ca89)
2020-07-12 00:26:40,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1340feca, Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:26:40,001 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:26:40,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1340feca, Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:26:40,008 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:26:40,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:26:40,012 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:26:40,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:26:40,019 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:26:40,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@495cc130)
2020-07-12 00:26:40,030 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:26:40,032 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:26:40,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:26:40,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@5dfec07f)
2020-07-12 00:27:12,081 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:27:12,084 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:27:12,086 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:27:12,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:27:12,199 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:27:12,200 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:27:16,245 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:27:16,248 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:27:29,621 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=8}} for Document{{}} fields.
2020-07-12 00:27:29,622 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:27:29,625 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:27:29,626 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=8, categoryId=14, subCategoryId=27, name=as, description=Document{{itemProperties=w, sellerName=a, disclaimer=good for all aasdg}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4b80da75)
2020-07-12 00:27:29,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4b80da75, Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:27:29,627 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:27:29,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4b80da75, Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:27:29,630 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 00:27:29,631 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:27:29,638 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:27:29,640 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:27:29,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:27:29,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@277c7f2e)
2020-07-12 00:27:29,644 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:27:29,645 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:27:29,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:27:29,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@112f8361)
2020-07-12 00:27:48,399 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:27:48,432 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:27:50,725 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:27:50,849 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:27:50,869 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:27:56,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:27:56,676 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 00:27:56,685 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:28:19,080 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:28:19,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:29:49,924 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:29:49,938 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 00:29:49,953 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:29:50,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:29:50,063 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 00:29:50,065 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:30:01,706 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:30:01,713 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:30:12,182 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 00:30:12,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:30:12,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=7, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:30:12,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=7, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1cb668a3)
2020-07-12 00:30:12,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1cb668a3, Document{{_id=7, categoryId=13, subCategoryId=24, name=boo, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:30:12,196 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:30:12,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1cb668a3, Document{{_id=7, categoryId=13, subCategoryId=24, name=boo, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:30:12,217 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 00:30:12,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:30:12,224 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 00:30:12,226 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:30:12,230 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 00:30:12,231 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@18234080)
2020-07-12 00:30:12,234 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 00:30:12,235 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:30:12,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 00:30:12,239 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4e0208d0)
2020-07-12 00:30:15,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:30:15,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:30:40,153 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 00:30:40,154 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:30:40,156 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=7, categoryId=13, subCategoryId=24, name=boo, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:30:40,157 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=7, categoryId=13, subCategoryId=24, name=boo, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@35f8180d)
2020-07-12 00:30:40,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@35f8180d, Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:30:40,159 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:30:40,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@35f8180d, Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:30:40,163 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 00:30:40,164 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:30:40,167 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 00:30:40,168 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:30:40,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 00:30:40,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@36fab3d5)
2020-07-12 00:30:40,171 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 00:30:40,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:30:40,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 00:30:40,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@74c0d6c9)
2020-07-12 00:30:43,173 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:30:43,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:30:43,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:31:03,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:31:03,869 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:31:03,870 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:31:04,068 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:31:04,070 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:31:04,071 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:31:28,220 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:31:28,223 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:31:28,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:31:28,236 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:31:28,241 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:31:28,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:52:18,895 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:52:18,918 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:52:18,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:52:18,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:52:18,994 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:52:18,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:53:31,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:53:31,270 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:53:31,275 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:53:31,403 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:53:31,414 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:53:31,420 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:53:32,879 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:53:32,889 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:53:46,925 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 00:53:46,926 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:53:46,928 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:53:46,929 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, categoryId=14, subCategoryId=27, name=asd, description=Document{{itemProperties=wsd, sellerName=as, disclaimer=good for all aasdge}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@689c5fc9)
2020-07-12 00:53:46,930 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@689c5fc9, Document{{_id=9, categoryId=14, subCategoryId=27, name=a, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:53:46,931 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:53:46,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@689c5fc9, Document{{_id=9, categoryId=14, subCategoryId=27, name=a, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:53:46,936 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:53:46,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:53:46,945 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:53:46,946 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:53:46,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:53:46,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@46596b7)
2020-07-12 00:53:46,955 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:53:46,957 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:53:46,959 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:53:46,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@491e9ad0)
2020-07-12 00:55:38,408 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:55:38,412 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:55:38,413 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:55:38,424 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:55:38,429 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:55:38,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:55:41,013 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:55:41,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:55:44,918 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 00:55:44,919 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 00:55:44,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, categoryId=14, subCategoryId=27, name=a, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:55:44,923 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, categoryId=14, subCategoryId=27, name=a, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4e099521)
2020-07-12 00:55:44,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4e099521, Document{{_id=9, categoryId=14, subCategoryId=27, name=aas, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:55:44,925 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 00:55:44,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4e099521, Document{{_id=9, categoryId=14, subCategoryId=27, name=aas, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 00:55:44,928 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:55:44,929 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:55:44,933 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 00:55:44,934 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 00:55:44,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 00:55:44,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@5a344084)
2020-07-12 00:55:44,941 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 00:55:44,942 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 00:55:44,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 00:55:44,949 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@34f5ab5a)
2020-07-12 00:56:01,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:56:01,879 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 00:59:37,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:59:37,969 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:59:37,970 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:59:38,075 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:59:38,078 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:59:38,079 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:59:41,832 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:59:41,841 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:59:41,847 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:59:41,934 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 00:59:41,937 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 00:59:41,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 00:59:43,284 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 00:59:43,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:00:10,364 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:00:10,368 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 01:00:10,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:00:10,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:00:10,388 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 01:00:10,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:00:11,897 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:00:11,898 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:00:19,130 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:00:19,139 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:14:13,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:14:13,941 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 01:14:13,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:14:14,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:14:14,040 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 01:14:14,041 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:14:16,837 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:14:16,845 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:14:23,267 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 01:14:23,268 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:14:23,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, categoryId=14, subCategoryId=27, name=aas, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:14:23,270 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, categoryId=14, subCategoryId=27, name=aas, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@76c49f68)
2020-07-12 01:14:23,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@76c49f68, Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:14:23,272 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:14:23,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@76c49f68, Document{{_id=9, categoryId=14, subCategoryId=27, name=aa-, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142828/djdt9vel792ogefjsnpy.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142831/nrzpzvjk39jcfadjrxlp.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:14:23,285 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 01:14:23,286 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:14:23,290 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 01:14:23,292 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:14:23,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 01:14:23,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@32b4fd4)
2020-07-12 01:14:23,294 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 01:14:23,295 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:14:23,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 01:14:23,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2a2a4481)
2020-07-12 01:15:20,065 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:15:20,195 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:15:20,201 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:15:28,328 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:15:28,334 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:15:28,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:15:30,901 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:15:31,017 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:15:31,027 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:16:40,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:16:40,435 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:16:40,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:17:04,967 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:17:04,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:18:36,481 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:18:36,484 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:18:36,485 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:18:36,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:18:36,572 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:18:36,574 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:18:46,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:18:46,375 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:19:17,456 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=6}} for Document{{}} fields.
2020-07-12 01:19:17,457 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:19:17,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:19:17,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@45948a9e)
2020-07-12 01:19:17,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@45948a9e, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:19:17,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:19:17,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@45948a9e, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:19:17,467 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:19:17,469 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:19:17,474 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 01:19:17,484 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:19:17,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 01:19:17,486 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@1c983817)
2020-07-12 01:19:17,487 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 01:19:17,488 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:19:17,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 01:19:17,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@78c21a1d)
2020-07-12 01:24:36,003 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:24:36,007 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:24:36,009 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:24:36,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:24:36,065 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:24:36,066 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:24:39,834 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:24:39,840 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:24:39,841 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:24:39,974 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:24:39,977 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:24:39,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:25:12,023 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:25:12,033 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:31:58,710 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:31:58,713 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:31:58,714 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:31:58,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:31:58,795 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:31:58,796 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:32:03,327 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:32:03,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:32:06,724 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=6}} for Document{{}} fields.
2020-07-12 01:32:06,726 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:32:06,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:32:06,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1cba99e7)
2020-07-12 01:32:06,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1cba99e7, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:32:06,731 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:32:06,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1cba99e7, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:32:06,737 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:32:06,738 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:32:06,743 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 01:32:06,745 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:32:06,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 01:32:06,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@37f910cc)
2020-07-12 01:32:06,755 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 01:32:06,756 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:32:06,759 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 01:32:06,760 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@57635ae6)
2020-07-12 01:32:10,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:32:10,258 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:32:42,659 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=6}} for Document{{}} fields.
2020-07-12 01:32:42,661 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:32:42,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:32:42,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5a37ec34)
2020-07-12 01:32:42,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5a37ec34, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:32:42,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:32:42,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@5a37ec34, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:32:42,668 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:32:42,670 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:32:42,673 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 01:32:42,675 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:32:42,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 01:32:42,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@eeff628)
2020-07-12 01:32:42,679 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 01:32:42,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:32:42,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 01:32:42,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@19ae17b6)
2020-07-12 01:33:15,054 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:33:15,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:36:43,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:36:43,370 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:36:43,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:36:43,437 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:36:43,444 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:36:43,447 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:37:48,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:37:48,672 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:37:48,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:37:48,730 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:37:48,754 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:37:48,755 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:39:30,865 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:39:30,869 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:39:30,870 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:39:30,883 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:39:30,887 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:39:30,889 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:40:01,405 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:40:01,414 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:40:01,415 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:40:01,517 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:40:01,522 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:40:01,523 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:40:16,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:40:16,272 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:40:44,641 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:40:44,648 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:40:44,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:40:44,754 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:40:44,760 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:40:44,761 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:41:22,234 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:41:22,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:42:27,749 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:42:27,754 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:42:27,755 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:42:27,856 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:42:27,859 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:42:27,860 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:42:52,408 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:42:52,416 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:47:02,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:47:02,772 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:47:02,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:47:02,836 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:47:02,839 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:47:02,840 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:47:25,123 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:47:25,132 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:48:03,678 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=6}} for Document{{}} fields.
2020-07-12 01:48:03,679 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:48:03,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:48:03,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7528f8b4)
2020-07-12 01:48:03,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7528f8b4, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:48:03,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:48:03,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7528f8b4, Document{{_id=6, categoryId=13, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:48:03,690 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:48:03,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:48:03,694 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 01:48:03,695 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:48:03,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 01:48:03,697 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@2a53b59d)
2020-07-12 01:48:03,698 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 01:48:03,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:48:03,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 01:48:03,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@32fb6a9c)
2020-07-12 01:48:29,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:48:29,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:48:55,646 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=6}} for Document{{}} fields.
2020-07-12 01:48:55,647 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:48:55,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:48:55,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@30581f54)
2020-07-12 01:48:55,652 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 01:48:55,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:48:55,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 01:48:55,661 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@ff3a724)
2020-07-12 01:48:55,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@30581f54, Document{{_id=6, categoryId=14, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:48:55,662 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:48:55,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@30581f54, Document{{_id=6, categoryId=14, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:48:55,665 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:48:55,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:48:55,667 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 01:48:55,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:48:55,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 01:48:55,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@5370b94d)
2020-07-12 01:48:55,672 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 01:48:55,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:48:55,674 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 01:48:55,675 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4d38bc1b)
2020-07-12 01:49:18,903 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:49:18,907 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:49:18,909 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:49:18,997 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:49:19,000 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 01:49:19,002 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:49:21,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:49:21,495 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:49:21,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:49:27,069 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:49:27,074 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 01:49:27,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:49:51,177 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:49:51,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:50:26,353 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 01:50:26,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:50:26,357 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:50:26,358 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@607cc575)
2020-07-12 01:50:26,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@607cc575, Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:50:26,359 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:50:26,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@607cc575, Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:50:26,362 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 01:50:26,363 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:50:26,366 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 01:50:26,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:50:26,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 01:50:26,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@72a494d9)
2020-07-12 01:50:26,375 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 01:50:26,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:50:26,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 01:50:26,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2448e111)
2020-07-12 01:51:38,815 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:51:38,829 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:51:52,166 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 01:51:52,167 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 01:51:52,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:51:52,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@15fa65e)
2020-07-12 01:51:52,173 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@15fa65e, Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:51:52,174 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 01:51:52,176 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@15fa65e, Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 01:51:52,177 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 01:51:52,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:51:52,180 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 01:51:52,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 01:51:52,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 01:51:52,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@787ec883)
2020-07-12 01:51:52,184 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 01:51:52,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 01:51:52,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 01:51:52,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1dc5f757)
2020-07-12 01:52:44,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:52:44,485 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 01:52:44,489 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:52:44,607 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:52:44,610 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 01:52:44,611 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:54:27,132 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 01:54:27,132 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:54:59,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:54:59,436 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 01:54:59,438 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:54:59,601 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 01:54:59,608 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 01:54:59,610 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 01:55:04,081 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 01:55:04,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:00:00,636 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:00:00,645 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:00:00,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:00:00,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:00:00,777 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:00:00,778 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:00:08,838 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:00:08,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:00:12,759 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 02:00:12,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:00:12,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:00:12,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=7, categoryId=13, subCategoryId=24, name=boos, description=Document{{itemProperties=a, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5159143e)
2020-07-12 02:00:12,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@5159143e, Document{{_id=7, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:00:12,779 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:00:12,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@5159143e, Document{{_id=7, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:00:12,794 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:00:12,795 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:00:12,801 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:00:12,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:00:12,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:00:12,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@72b61873)
2020-07-12 02:00:12,805 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 02:00:12,806 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:00:12,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 02:00:12,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6deac4c6)
2020-07-12 02:00:23,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:00:23,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:00:28,247 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 02:00:28,248 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:00:28,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=7, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:00:28,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=7, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@43609a22)
2020-07-12 02:00:28,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@43609a22, Document{{_id=7, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:00:28,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:00:28,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@43609a22, Document{{_id=7, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:00:28,254 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:00:28,255 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:00:28,257 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:00:28,258 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:00:28,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:00:28,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@6651ba2c)
2020-07-12 02:00:28,262 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 02:00:28,270 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:00:28,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 02:00:28,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@e3d096)
2020-07-12 02:00:49,623 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:00:49,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:01:39,341 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 02:01:39,343 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:01:39,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=7, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:01:39,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=7, categoryId=13, subCategoryId=24, name=boost tes, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2e422646)
2020-07-12 02:01:39,349 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 02:01:39,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:01:39,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:01:39,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@706a0b1f)
2020-07-12 02:01:39,354 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-10] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 02:01:39,355 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:01:39,357 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 02:01:39,357 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6c46e9ec)
2020-07-12 02:01:39,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2e422646, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:01:39,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:01:39,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2e422646, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:01:39,363 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:01:39,364 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:01:39,366 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 02:01:39,367 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:01:39,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 02:01:39,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@1199b63c)
2020-07-12 02:01:39,370 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:01:39,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:01:39,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:01:39,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4acb246a)
2020-07-12 02:01:47,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:01:47,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:01:54,947 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 02:01:54,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:01:54,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:01:54,950 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2c1849e7)
2020-07-12 02:01:54,951 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2c1849e7, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:01:54,952 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:01:54,953 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2c1849e7, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:01:54,954 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:01:54,955 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:01:54,958 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 02:01:54,959 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:01:54,960 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 02:01:54,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@2a49767c)
2020-07-12 02:01:54,962 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:01:54,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:01:54,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:01:54,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7c9d2db0)
2020-07-12 02:02:53,809 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:02:53,818 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:03:06,499 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 02:03:06,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:03:06,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:03:06,501 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@55c7c52)
2020-07-12 02:03:06,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@55c7c52, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label coffee, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:03:06,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:03:06,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@55c7c52, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label coffee, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:03:06,505 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:03:06,506 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:03:06,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 02:03:06,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:03:06,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 02:03:06,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@7994617b)
2020-07-12 02:03:06,510 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:03:06,511 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:03:06,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:03:06,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@126b6065)
2020-07-12 02:03:57,915 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:03:57,922 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:04:16,684 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=7}} for Document{{}} fields.
2020-07-12 02:04:16,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "7"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:04:16,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label coffee, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:04:16,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label coffee, description=Document{{itemProperties=Coffee power, sellerName=ITC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@304a0110)
2020-07-12 02:04:16,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@304a0110, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label coffee, description=Document{{itemProperties=Coffee power, sellerName=ABC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:04:16,692 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:04:16,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@304a0110, Document{{_id=7, categoryId=14, subCategoryId=27, name=Red Label coffee, description=Document{{itemProperties=Coffee power, sellerName=ABC, disclaimer=best for 4 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140493/ceyeqrhf5ao5aocgnef0.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585140501/oomnpzurqe9hwdcsufhj.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:04:16,694 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:04:16,696 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:04:16,703 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 02:04:16,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:04:16,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 02:04:16,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@51b1025e)
2020-07-12 02:04:16,706 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:04:16,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:04:16,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:04:16,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@34d7cbfa)
2020-07-12 02:08:06,431 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 23009 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 02:08:06,454 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 02:08:06,455 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 02:08:10,310 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 02:08:10,346 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 02:08:10,384 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 02:08:10,386 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 02:08:10,387 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 02:08:10,388 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 02:08:10,389 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 02:08:10,390 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 02:08:10,391 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 02:08:10,392 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 02:08:10,393 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 02:08:10,397 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 02:08:10,398 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 02:08:10,399 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 02:08:10,399 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 02:08:10,400 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 02:08:10,401 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 02:08:10,756 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 02:08:10,757 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 02:08:10,759 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 412ms. Found 15 MongoDB repository interfaces.
2020-07-12 02:08:15,545 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:08:15,546 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:08:16,174 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:08:16,175 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:08:16,336 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 02:08:16,337 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 02:08:16,371 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 02:08:16,373 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 02:08:16,374 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 02:08:16,376 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 02:08:16,381 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 02:08:16,386 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 02:08:16,388 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 02:08:16,389 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 02:08:16,390 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 02:08:16,391 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 02:08:16,393 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 02:08:16,398 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 02:08:16,402 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 02:08:16,404 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 02:08:16,406 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 02:08:16,408 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 02:08:16,414 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 02:08:16,416 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 02:08:16,417 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 02:08:26,311 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 02:08:26,477 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 02:08:26,499 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 02:08:26,523 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 02:08:26,545 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 02:08:26,618 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 02:08:26,639 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 02:08:26,658 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 02:08:26,833 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 02:08:26,841 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 02:08:26,864 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 02:08:26,876 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 02:08:26,892 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 02:08:26,905 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 02:08:26,919 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 02:08:26,935 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 02:08:26,958 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 02:08:26,974 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 02:08:26,990 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 02:08:27,008 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 02:08:27,016 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 02:08:27,029 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 02:08:27,041 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 02:08:27,050 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 02:08:27,078 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 02:08:27,087 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 02:08:27,099 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 02:08:27,106 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 02:08:27,181 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 02:08:27,184 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:08:27,184 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 02:08:27,184 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:08:27,353 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 02:08:27,358 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 02:08:28,848 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 02:08:28,874 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 02:08:28,879 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 02:08:29,176 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 24.933 seconds (JVM running for 26.928)
2020-07-12 02:08:39,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:08:39,841 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 02:08:39,925 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:08:39,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:08:40,146 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:08:40,155 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 02:08:40,158 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:08:45,060 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:08:45,062 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:08:45,067 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-3] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 02:09:00,871 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:09:00,998 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:09:01,008 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:09:07,584 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:09:07,594 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 02:09:07,596 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:09:09,142 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:09:09,144 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:09:14,748 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 02:09:14,768 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:09:14,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:09:14,782 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=Top Quality , sellerName=Kissan, disclaimer=Best for 12 months}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@65119d9)
2020-07-12 02:09:14,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@65119d9, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:09:14,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:09:14,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@65119d9, Document{{_id=3, categoryId=14, subCategoryId=27, name=Tomato Ketchup, description=Document{{itemProperties=, sellerName=ABCa, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:09:14,837 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 02:09:14,838 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:09:14,843 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 02:09:14,846 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:09:14,849 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 02:09:14,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@681d2a0e)
2020-07-12 02:09:14,867 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:09:14,868 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:09:14,870 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:09:14,881 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@540fce98)
2020-07-12 02:09:19,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:09:19,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:09:19,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:09:50,402 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:09:50,406 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:13:48,180 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 23009 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 02:13:48,181 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 02:13:48,190 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 02:18:29,267 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 23609 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 02:18:29,284 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 02:18:29,285 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 02:18:31,706 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 02:18:31,738 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 02:18:31,778 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 02:18:31,780 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 02:18:31,782 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 02:18:31,782 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 02:18:31,783 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 02:18:31,784 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 02:18:31,784 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 02:18:31,785 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 02:18:31,785 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 02:18:31,786 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 02:18:31,787 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 02:18:31,788 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 02:18:31,789 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 02:18:31,790 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 02:18:31,791 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 02:18:31,975 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 02:18:31,976 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 02:18:31,997 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 257ms. Found 15 MongoDB repository interfaces.
2020-07-12 02:18:35,148 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:18:35,149 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:18:35,501 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:18:35,502 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:18:35,605 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 02:18:35,626 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 02:18:35,627 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 02:18:35,629 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 02:18:35,630 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 02:18:35,632 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 02:18:35,636 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 02:18:35,638 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 02:18:35,640 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 02:18:35,641 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 02:18:35,643 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 02:18:35,644 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 02:18:35,644 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 02:18:35,645 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 02:18:35,646 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 02:18:35,648 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 02:18:35,648 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 02:18:35,650 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 02:18:35,652 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 02:18:35,653 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 02:18:35,654 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 02:18:46,569 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 02:18:46,728 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 02:18:46,753 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 02:18:46,785 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 02:18:46,801 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 02:18:46,820 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 02:18:46,833 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 02:18:46,869 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 02:18:47,084 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 02:18:47,094 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 02:18:47,119 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 02:18:47,134 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 02:18:47,148 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 02:18:47,163 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 02:18:47,173 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 02:18:47,183 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 02:18:47,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 02:18:47,224 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 02:18:47,242 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 02:18:47,267 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 02:18:47,274 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 02:18:47,289 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 02:18:47,303 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 02:18:47,315 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 02:18:47,352 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 02:18:47,365 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 02:18:47,382 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 02:18:47,390 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 02:18:47,485 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 02:18:47,488 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:18:47,489 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 02:18:47,489 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:18:47,692 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 02:18:47,699 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 02:18:49,530 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 02:18:49,560 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 02:18:49,564 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 02:18:49,904 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 22.258 seconds (JVM running for 23.946)
2020-07-12 02:20:36,023 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.StackOverflowError] with root cause
java.lang.StackOverflowError: null
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
2020-07-12 02:21:43,677 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.StackOverflowError] with root cause
java.lang.StackOverflowError: null
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
2020-07-12 02:22:14,743 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 23609 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 02:22:14,743 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 02:22:14,744 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 02:22:15,857 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 02:22:15,860 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 02:22:15,926 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 02:22:15,927 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 02:22:15,927 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 02:22:15,928 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 02:22:15,928 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 02:22:15,929 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 02:22:15,930 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 02:22:15,930 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 02:22:15,931 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 02:22:15,932 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 02:22:15,932 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 02:22:15,932 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 02:22:15,932 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 02:22:15,932 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 02:22:15,933 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 02:22:16,013 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 02:22:16,014 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 02:22:16,020 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 159ms. Found 15 MongoDB repository interfaces.
2020-07-12 02:22:16,703 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:22:16,704 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:22:16,868 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:22:16,869 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:22:16,875 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 02:22:16,876 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 02:22:16,877 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 02:22:16,878 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 02:22:16,879 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 02:22:16,880 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 02:22:16,882 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 02:22:16,883 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 02:22:16,884 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 02:22:16,885 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 02:22:16,886 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 02:22:16,888 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 02:22:16,889 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 02:22:16,890 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 02:22:16,891 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 02:22:16,891 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 02:22:16,892 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 02:22:16,892 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 02:22:16,893 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 02:22:16,894 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 02:22:16,895 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 02:22:27,033 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 02:22:27,043 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 02:22:27,052 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 02:22:27,067 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 02:22:27,078 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 02:22:27,089 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 02:22:27,096 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 02:22:27,109 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 02:22:27,151 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 02:22:27,158 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 02:22:27,177 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 02:22:27,194 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 02:22:27,214 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 02:22:27,224 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 02:22:27,236 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 02:22:27,244 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 02:22:27,264 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 02:22:27,276 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 02:22:27,295 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 02:22:27,310 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 02:22:27,314 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 02:22:27,326 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 02:22:27,338 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 02:22:27,346 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 02:22:27,374 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 02:22:27,385 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 02:22:27,427 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 02:22:27,465 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 02:22:27,557 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 02:22:27,561 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:22:27,561 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 02:22:27,561 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:22:27,631 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 02:22:27,639 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 02:22:28,080 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 02:22:28,097 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 02:22:28,101 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 02:22:28,246 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 13.575 seconds (JVM running for 242.288)
2020-07-12 02:23:06,332 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-2] Created query Query: { "id" : { "$numberLong" : "5"}}, Fields: {}, Sort: {}
2020-07-12 02:23:07,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:23:32,566 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-3] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:23:32,630 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:23:33,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:23:34,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6901fb16)
2020-07-12 02:23:42,869 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.addItemDetailsAdmin(ItemDetailsServiceImpl.java:479)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 02:24:05,834 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:24:05,860 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:24:05,924 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:24:05,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@62847711)
2020-07-12 02:24:16,343 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.initializers.services.apiservices.service.impl.ItemDetailsServiceImpl.addItemDetailsAdmin(ItemDetailsServiceImpl.java:479)
	at com.initializers.services.apiservices.controller.AdminController.addItemDetails(AdminController.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-07-12 02:24:37,552 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 23609 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 02:24:37,553 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 02:24:37,553 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 02:24:38,277 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 02:24:38,278 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 02:24:38,289 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 02:24:38,290 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 02:24:38,290 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 02:24:38,290 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 02:24:38,290 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 02:24:38,291 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 02:24:38,291 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 02:24:38,291 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 02:24:38,291 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 02:24:38,292 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 02:24:38,292 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 02:24:38,292 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 02:24:38,292 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 02:24:38,292 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 02:24:38,293 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 02:24:38,341 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 02:24:38,341 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 02:24:38,344 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 65ms. Found 15 MongoDB repository interfaces.
2020-07-12 02:24:38,781 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:24:38,782 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:24:38,975 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:24:38,975 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 02:24:38,983 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 02:24:38,984 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 02:24:38,986 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 02:24:38,987 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 02:24:38,988 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 02:24:38,989 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 02:24:38,989 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 02:24:38,990 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 02:24:38,991 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 02:24:38,992 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 02:24:38,993 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 02:24:38,995 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 02:24:38,995 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 02:24:38,996 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 02:24:38,997 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 02:24:38,998 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 02:24:38,999 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 02:24:39,001 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 02:24:39,002 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 02:24:39,002 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 02:24:39,003 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 02:24:48,264 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 02:24:48,276 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 02:24:48,289 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 02:24:48,303 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 02:24:48,313 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 02:24:48,325 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 02:24:48,331 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 02:24:48,343 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 02:24:48,387 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 02:24:48,393 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 02:24:48,411 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 02:24:48,456 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 02:24:48,462 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 02:24:48,472 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 02:24:48,486 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 02:24:48,494 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 02:24:48,510 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 02:24:48,519 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 02:24:48,530 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 02:24:48,539 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 02:24:48,544 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 02:24:48,557 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 02:24:48,569 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 02:24:48,578 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 02:24:48,615 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 02:24:48,623 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 02:24:48,637 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 02:24:48,644 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 02:24:48,730 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 02:24:48,733 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:24:48,733 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 02:24:48,733 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 02:24:48,779 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 02:24:48,788 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 02:24:49,147 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 02:24:49,160 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 02:24:49,164 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 02:24:49,310 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 11.819 seconds (JVM running for 383.352)
2020-07-12 02:24:55,382 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:24:55,438 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:24:55,758 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:24:56,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5db4ce77)
2020-07-12 02:25:03,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 02:25:05,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@24c6b16f, Document{{_id=31, categoryId=13, name=Horlicks, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:25:05,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Inserting Document containing fields: [_id, categoryId, name, description, status, _class] in collection: item_details
2020-07-12 02:25:07,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@24c6b16f, Document{{_id=31, categoryId=13, name=Horlicks, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:25:26,720 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=31, available=Y}} for Document{{}} fields.
2020-07-12 02:25:26,826 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "31"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:25:29,788 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:25:29,823 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:25:29,878 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:25:29,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@26280b7)
2020-07-12 02:25:31,839 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 02:25:31,874 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:28:59,092 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:28:59,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:28:59,129 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-5] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 02:29:00,620 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:29:00,648 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-6] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 02:29:00,750 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:29:00,760 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:29:05,353 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:29:05,370 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 02:29:05,376 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:29:09,047 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:29:09,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:30:37,161 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=6}} for Document{{}} fields.
2020-07-12 02:30:37,163 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:30:37,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=6, categoryId=14, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:30:37,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=6, categoryId=14, subCategoryId=24, name=boost t, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@720d6cf5)
2020-07-12 02:30:37,183 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:30:37,185 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:30:37,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:30:37,195 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6c3dd88b)
2020-07-12 02:30:37,198 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "24"}}, Fields: {}, Sort: {}
2020-07-12 02:30:37,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:30:37,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 02:30:37,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@4c0dce47)
2020-07-12 02:30:37,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@720d6cf5, Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:30:37,221 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:30:37,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@720d6cf5, Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:30:37,242 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 02:30:37,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:30:37,251 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:30:37,253 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:30:37,257 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:30:37,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@48793afe)
2020-07-12 02:30:37,259 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 02:30:37,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:30:37,271 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 02:30:37,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@22ebcaca)
2020-07-12 02:30:44,057 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:30:44,126 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:31:21,982 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=6}} for Document{{}} fields.
2020-07-12 02:31:21,985 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "6"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:31:21,988 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:31:21,990 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@6e0e695)
2020-07-12 02:31:21,992 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6e0e695, Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:31:21,993 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:31:22,003 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6e0e695, Document{{_id=6, categoryId=13, subCategoryId=24, name=Maida , description=Document{{itemProperties=Flour , sellerName=abc, disclaimer=top quality }}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:31:22,004 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 02:31:22,005 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:31:22,008 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:31:22,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:31:22,017 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:31:22,018 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@699c9be2)
2020-07-12 02:31:22,019 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 02:31:22,020 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:31:22,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 02:31:22,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6a9b2ab4)
2020-07-12 02:36:55,015 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:36:55,029 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:37:03,694 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:37:03,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:37:03,820 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:37:07,903 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:37:07,912 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 02:37:07,914 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:37:31,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:37:31,045 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:37:35,013 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:37:35,017 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 02:37:35,018 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:37:35,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:37:35,111 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 02:37:35,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:38:15,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:38:15,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:43:53,990 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=22}} for Document{{}} fields.
2020-07-12 02:43:53,998 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:43:54,002 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=22, categoryId=13, subCategoryId=24, name=ab, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:43:54,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=22, categoryId=13, subCategoryId=24, name=ab, actualPrice=179.0, discount=6, discountPrice=170.0, availability=Document{{value=1, unit=KG, available=Y}}, description=Document{{itemProperties=best for 3 months contains 30% protein, sellerName=nescafe, disclaimer=good for all age}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@63059c7e)
2020-07-12 02:43:54,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@63059c7e, Document{{_id=22, categoryId=13, subCategoryId=24, name=ab, description=Document{{itemProperties=best for 3 months contain30% protein, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:43:54,015 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:43:54,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@63059c7e, Document{{_id=22, categoryId=13, subCategoryId=24, name=ab, description=Document{{itemProperties=best for 3 months contain30% protein, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:43:54,026 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 02:43:54,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:43:54,033 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:43:54,036 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:43:54,038 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:43:54,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@44e42b77)
2020-07-12 02:43:54,041 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 02:43:54,043 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:43:54,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 02:43:54,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@209dcf6)
2020-07-12 02:44:31,853 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:44:31,864 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:44:51,871 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=22}} for Document{{}} fields.
2020-07-12 02:44:51,872 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "22"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:44:51,875 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=22, categoryId=13, subCategoryId=24, name=ab, description=Document{{itemProperties=best for 3 months contain30% protein, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:44:51,876 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=22, categoryId=13, subCategoryId=24, name=ab, description=Document{{itemProperties=best for 3 months contain30% protein, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@1d2e8a84)
2020-07-12 02:44:51,877 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1d2e8a84, Document{{_id=22, categoryId=13, subCategoryId=24, name=aba, description=Document{{itemProperties=best for 3 months contain30% protein, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:44:51,878 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:44:51,885 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1d2e8a84, Document{{_id=22, categoryId=13, subCategoryId=24, name=aba, description=Document{{itemProperties=best for 3 months contain30% protein, sellerName=, disclaimer=}}, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:44:51,886 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 02:44:51,887 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:44:51,890 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:44:51,891 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:44:51,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:44:51,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@46f7e6a0)
2020-07-12 02:44:51,895 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 02:44:51,897 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:44:51,899 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 02:44:51,900 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@3849960f)
2020-07-12 02:45:11,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:45:11,841 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:51:30,743 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:51:30,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:51:30,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:51:33,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:51:33,624 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 02:51:33,625 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:51:37,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:51:37,733 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:51:42,527 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=8}} for Document{{}} fields.
2020-07-12 02:51:42,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:51:42,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:51:42,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=ad, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4c0c286d)
2020-07-12 02:51:42,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4c0c286d, Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=adsadf, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:51:42,534 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:51:42,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4c0c286d, Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=adsadf, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:51:42,538 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 02:51:42,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:51:42,545 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 02:51:42,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:51:42,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 02:51:42,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@41c98230)
2020-07-12 02:51:42,551 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:51:42,552 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:51:42,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:51:42,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@43b1a6ce)
2020-07-12 02:52:14,062 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:52:14,100 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:52:35,176 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=8}} for Document{{}} fields.
2020-07-12 02:52:35,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "8"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:52:35,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=adsadf, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:52:35,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=8, categoryId=14, subCategoryId=27, name=aa, description=Document{{itemProperties=adsadf, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7fcf08df)
2020-07-12 02:52:35,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7fcf08df, Document{{_id=8, categoryId=14, subCategoryId=27, name=aaa, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:52:35,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 02:52:35,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7fcf08df, Document{{_id=8, categoryId=14, subCategoryId=27, name=aaa, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142674/vfl0dpyqvkzpp7qqy72j.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1585142678/u0litnbsstvhftrzjfrw.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:52:35,189 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 02:52:35,191 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:52:35,194 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 02:52:35,200 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:52:35,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 02:52:35,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@4e723eef)
2020-07-12 02:52:35,208 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:52:35,210 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:52:35,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:52:35,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7b5cf9aa)
2020-07-12 02:52:38,972 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:52:39,082 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:52:39,084 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:52:46,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:52:46,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:54:13,172 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:54:13,201 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:54:13,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:54:13,273 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@61d526f5)
2020-07-12 02:54:19,215 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 02:54:19,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1c22f0cc, Document{{_id=32, categoryId=13, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:54:19,298 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Inserting Document containing fields: [_id, categoryId, name, description, status, _class] in collection: item_details
2020-07-12 02:54:19,355 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1c22f0cc, Document{{_id=32, categoryId=13, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:54:40,419 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:54:40,431 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:54:40,446 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:54:40,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:54:40,474 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:54:40,480 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@175b15be)
2020-07-12 02:54:40,487 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 02:54:40,497 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:55:05,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:55:05,924 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:55:51,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:55:51,432 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:55:51,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:55:55,409 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "32"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:55:55,413 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:55:55,414 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:56:23,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:56:23,060 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:57:12,643 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=32}} for Document{{}} fields.
2020-07-12 02:57:12,644 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "32"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:57:12,646 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=32, categoryId=13, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:12,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=32, categoryId=13, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@66dd36f1)
2020-07-12 02:57:12,648 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:57:12,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:57:12,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:57:12,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6f3d4005)
2020-07-12 02:57:12,653 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-9] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 02:57:12,655 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:57:12,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 02:57:12,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@21741cfa)
2020-07-12 02:57:12,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@66dd36f1, Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Active +, sellerName=ITV, disclaimer=mosquito coil}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:12,660 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 02:57:12,662 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@66dd36f1, Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Active +, sellerName=ITV, disclaimer=mosquito coil}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:12,663 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:57:12,664 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:57:12,667 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:57:12,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:57:12,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:57:12,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@d5dfc87)
2020-07-12 02:57:12,672 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:57:12,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:57:12,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:57:12,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2b83963)
2020-07-12 02:57:19,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:57:19,693 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:57:24,487 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=32}} for Document{{}} fields.
2020-07-12 02:57:24,488 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "32"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:57:24,490 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Active +, sellerName=ITV, disclaimer=mosquito coil}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:24,491 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Active +, sellerName=ITV, disclaimer=mosquito coil}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@463cbc5f)
2020-07-12 02:57:24,492 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:57:24,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:57:24,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:57:24,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@5a318c9b)
2020-07-12 02:57:24,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@463cbc5f, Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:24,497 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 02:57:24,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@463cbc5f, Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:24,500 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:57:24,501 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:57:24,505 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:57:24,506 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:57:24,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:57:24,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@4b69833)
2020-07-12 02:57:24,509 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:57:24,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:57:24,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:57:24,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@2e1c34c3)
2020-07-12 02:57:27,425 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:57:27,426 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:57:31,313 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=32}} for Document{{}} fields.
2020-07-12 02:57:31,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "32"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:57:31,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:31,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7070f488)
2020-07-12 02:57:31,318 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:57:31,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:57:31,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:57:31,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@344d22d4)
2020-07-12 02:57:31,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7070f488, Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:31,323 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 02:57:31,325 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7070f488, Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:57:31,326 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:57:31,327 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:57:31,330 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:57:31,331 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:57:31,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:57:31,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@43ee4461)
2020-07-12 02:57:31,335 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:57:31,337 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:57:31,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:57:31,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@b403a8)
2020-07-12 02:57:33,098 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:57:33,149 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:57:33,152 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:57:41,481 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "32"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:57:41,485 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:57:41,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:57:56,625 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:57:56,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:58:37,662 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=32}} for Document{{}} fields.
2020-07-12 02:58:37,663 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "32"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:58:37,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:58:37,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=32, categoryId=13, subCategoryId=27, name=New Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2fc7ba4b)
2020-07-12 02:58:37,667 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "13"}}, Fields: {}, Sort: {}
2020-07-12 02:58:37,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:58:37,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 02:58:37,673 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@9d42623)
2020-07-12 02:58:37,674 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2fc7ba4b, Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Actova, sellerName=adf, disclaimer=ad}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:58:37,675 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 02:58:37,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2fc7ba4b, Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Actova, sellerName=adf, disclaimer=ad}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:58:37,679 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:58:37,680 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:58:37,683 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:58:37,686 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:58:37,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:58:37,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@65433e35)
2020-07-12 02:58:37,691 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:58:37,692 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:58:37,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:58:37,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7967de09)
2020-07-12 02:58:42,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "32"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:58:42,185 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:58:42,186 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:58:42,244 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "32"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:58:42,247 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:58:42,248 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:58:46,153 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:58:46,220 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:58:46,221 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:59:03,163 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "32"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:59:03,166 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:59:03,168 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:59:05,523 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:59:05,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:59:31,528 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=32}} for Document{{}} fields.
2020-07-12 02:59:31,529 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "32"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 02:59:31,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Actova, sellerName=adf, disclaimer=ad}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:59:31,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Actova, sellerName=adf, disclaimer=ad}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4c268219)
2020-07-12 02:59:31,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@4c268219, Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Active+, sellerName=ITC, disclaimer=mosquito coil}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:59:31,532 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 02:59:31,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@4c268219, Document{{_id=32, categoryId=13, subCategoryId=27, name=Good Knight, description=Document{{itemProperties=Active+, sellerName=ITC, disclaimer=mosquito coil}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 02:59:31,534 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:59:31,535 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:59:31,537 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 02:59:31,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 02:59:31,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 02:59:31,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@6c12572c)
2020-07-12 02:59:31,542 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 02:59:31,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 02:59:31,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 02:59:31,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1d3e66c0)
2020-07-12 02:59:33,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:59:33,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:59:33,762 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:59:37,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "32"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:59:37,211 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=32, available=Y}} for Document{{}} fields.
2020-07-12 02:59:37,212 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "32"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:59:40,167 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:59:40,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:59:40,278 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:59:42,301 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "6"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:59:42,305 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=6, available=Y}} for Document{{}} fields.
2020-07-12 02:59:42,306 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "6"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 02:59:45,326 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 02:59:45,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 02:59:45,382 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 02:59:57,746 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "32"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:00:04,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "32"}]}}}, { "$match" : { "status" : { "$in" : ["Active"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:00:08,276 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["Active"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:00:20,227 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "24"}]}}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:00:25,439 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:00:35,265 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$match" : { "subCategoryId" : { "$in" : [{ "$numberLong" : "30"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:00:43,162 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "14"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:02:23,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:02:31,318 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:02:31,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:02:31,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:04:15,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:04:15,466 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:04:15,472 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:04:18,301 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:04:18,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:05:13,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 03:05:13,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@6d27aa13, Document{{_id=33, name=new Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:05:13,222 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, name, description, status, _class] in collection: item_details
2020-07-12 03:05:13,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@6d27aa13, Document{{_id=33, name=new Item, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:05:13,226 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=33, available=Y}} for Document{{}} fields.
2020-07-12 03:05:13,227 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "33"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:05:13,231 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 03:05:13,233 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:05:13,235 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 03:05:13,236 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:05:58,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "33"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:05:58,787 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=33, available=Y}} for Document{{}} fields.
2020-07-12 03:05:58,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "33"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:06:08,145 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:06:08,151 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:06:08,158 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "33"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:06:08,164 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=33, available=Y}} for Document{{}} fields.
2020-07-12 03:06:08,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "33"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:07:28,670 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:07:28,670 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:09:15,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:09:15,221 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:14:37,868 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:14:37,873 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:14:53,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 03:14:53,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@55dc01ea, Document{{_id=34, name=ads, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:14:53,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Inserting Document containing fields: [_id, name, description, status, _class] in collection: item_details
2020-07-12 03:14:53,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@55dc01ea, Document{{_id=34, name=ads, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:14:53,255 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=34, available=Y}} for Document{{}} fields.
2020-07-12 03:14:53,256 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "34"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:14:53,259 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 03:14:53,260 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:14:53,262 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 03:14:53,264 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:15:16,076 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 03:15:16,082 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@1d773e3, Document{{_id=35, name=test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:15:16,083 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Inserting Document containing fields: [_id, name, description, status, _class] in collection: item_details
2020-07-12 03:15:16,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@1d773e3, Document{{_id=35, name=test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:15:16,085 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=35, available=Y}} for Document{{}} fields.
2020-07-12 03:15:16,087 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "35"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:15:16,089 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 03:15:16,090 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:15:16,092 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=null}} for Document{{name=null}} fields.
2020-07-12 03:15:16,093 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : null} fields: Document{{name=null}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:16:08,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:16:08,590 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:16:51,045 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:16:51,049 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:16:58,506 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:16:58,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:16:58,571 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:17:02,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:17:02,330 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:17:45,902 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 03:17:45,903 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:17:45,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 03:17:45,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@3e7a73ca)
2020-07-12 03:17:45,907 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "24"}}, Fields: {}, Sort: {}
2020-07-12 03:17:45,908 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:17:45,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 03:17:45,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@29ffcf96)
2020-07-12 03:17:45,913 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 03:17:45,915 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@64222d31, Document{{_id=36, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:17:45,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-07-12 03:17:45,917 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@64222d31, Document{{_id=36, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:17:45,917 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=36, available=Y}} for Document{{}} fields.
2020-07-12 03:17:45,918 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "36"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:17:45,920 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 03:17:45,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:17:45,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 03:17:45,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@1966934f)
2020-07-12 03:17:45,923 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 03:17:45,924 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:17:45,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 03:17:45,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@746f478a)
2020-07-12 03:17:46,089 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "36"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:17:46,103 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=36, available=Y}} for Document{{}} fields.
2020-07-12 03:17:46,106 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "36"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:17:46,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:17:46,219 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:17:46,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "36"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:17:46,242 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=36, available=Y}} for Document{{}} fields.
2020-07-12 03:17:46,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "36"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:17:53,272 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:17:53,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:17:53,334 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:18:24,074 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "12"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:18:24,080 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=12, available=Y}} for Document{{}} fields.
2020-07-12 03:18:24,081 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "12"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:18:26,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:18:26,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:18:26,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:18:33,925 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "35"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:18:33,927 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=35, available=Y}} for Document{{}} fields.
2020-07-12 03:18:33,928 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "35"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:18:35,560 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:18:35,560 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:18:40,365 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=35}} for Document{{}} fields.
2020-07-12 03:18:40,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "35"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 03:18:40,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=35, name=test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:18:40,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=35, name=test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@53bf8827)
2020-07-12 03:18:40,370 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 03:18:40,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:18:40,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 03:18:40,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@241ab67)
2020-07-12 03:18:40,375 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "24"}}, Fields: {}, Sort: {}
2020-07-12 03:18:40,376 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:18:40,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 03:18:40,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@366e13f)
2020-07-12 03:18:40,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@53bf8827, Document{{_id=35, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:18:40,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 03:18:40,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@53bf8827, Document{{_id=35, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:18:40,383 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=35, available=Y}} for Document{{}} fields.
2020-07-12 03:18:40,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "35"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:18:40,386 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 03:18:40,387 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:18:40,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 03:18:40,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@c7368a7)
2020-07-12 03:18:40,390 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 03:18:40,391 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:18:40,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 03:18:40,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@65f043d0)
2020-07-12 03:18:40,463 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "35"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:18:40,466 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=35, available=Y}} for Document{{}} fields.
2020-07-12 03:18:40,467 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "35"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:18:41,782 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:18:41,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:18:46,241 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=35}} for Document{{}} fields.
2020-07-12 03:18:46,241 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "35"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 03:18:46,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=35, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:18:46,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=35, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@233bb5ee)
2020-07-12 03:18:46,244 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 03:18:46,245 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:18:46,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 03:18:46,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@56054f1d)
2020-07-12 03:18:46,248 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-6] Created query Query: { "id" : { "$numberLong" : "24"}}, Fields: {}, Sort: {}
2020-07-12 03:18:46,249 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:18:46,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 03:18:46,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, categoryId=14, name=dailyneed, description=upto 30% off, offer=30, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584981353/picicswqcwli20ypmkhv.jpg, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@7b544279)
2020-07-12 03:18:46,252 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@233bb5ee, Document{{_id=35, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:18:46,253 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 03:18:46,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@233bb5ee, Document{{_id=35, categoryId=14, subCategoryId=24, name=Cashew, description=Document{{itemProperties=as, sellerName=as, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 03:18:46,255 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=35, available=Y}} for Document{{}} fields.
2020-07-12 03:18:46,256 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "35"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:18:46,261 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 03:18:46,262 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 03:18:46,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 03:18:46,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@7509098e)
2020-07-12 03:18:46,266 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 03:18:46,267 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 03:18:46,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 03:18:46,269 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@be35604)
2020-07-12 03:19:00,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:19:00,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:19:00,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:19:04,644 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "35"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:19:20,639 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-12 03:19:20,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-12 03:19:20,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@7487e30a)
2020-07-12 03:19:20,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-12 03:19:20,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@40dc9bbc)
2020-07-12 03:19:20,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-12 03:19:20,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@577df550)
2020-07-12 03:19:20,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-12 03:19:20,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@30f4c2ac)
2020-07-12 03:19:20,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-12 03:19:20,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@7b20f80b)
2020-07-12 03:19:20,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-12 03:19:20,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@5f859da8)
2020-07-12 03:19:20,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-12 03:19:20,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@676a347d)
2020-07-12 03:19:20,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-12 03:19:20,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@719d7b9e)
2020-07-12 03:19:28,414 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "description" : 1, "name" : 1, "imageLink" : 1, "offer" : 1, "categoryId" : "$join_cat.name"}}] in collection item_sub_category
2020-07-12 03:19:28,425 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategoryList for index information.
2020-07-12 03:19:31,117 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:03,735 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:12,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:12,255 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 03:20:12,256 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:20:23,347 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:23,428 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:20:23,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 03:20:27,209 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:27,211 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 03:20:27,212 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:20:27,214 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 03:20:27,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@427df8df)
2020-07-12 03:20:51,057 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:51,061 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-07-12 03:20:51,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:20:51,074 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:51,079 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 03:20:51,081 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 03:20:51,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 03:20:51,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@404bf4ac)
2020-07-12 03:20:52,326 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 03:20:52,395 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 03:20:52,438 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 09:58:47,117 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 3119 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 09:58:47,188 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 09:58:47,188 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 09:58:54,300 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 09:58:54,330 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 09:58:54,356 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 09:58:54,357 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 09:58:54,358 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 09:58:54,358 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 09:58:54,359 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 09:58:54,360 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 09:58:54,360 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 09:58:54,361 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 09:58:54,361 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 09:58:54,362 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 09:58:54,362 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 09:58:54,363 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 09:58:54,364 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 09:58:54,364 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 09:58:54,365 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 09:58:54,509 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 09:58:54,511 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 09:58:54,533 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 202ms. Found 15 MongoDB repository interfaces.
2020-07-12 09:58:58,914 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 09:58:58,915 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 09:58:59,164 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 09:58:59,165 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 09:58:59,249 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 09:58:59,258 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 09:58:59,261 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 09:58:59,263 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 09:58:59,264 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 09:58:59,264 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 09:58:59,266 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 09:58:59,267 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 09:58:59,270 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 09:58:59,271 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 09:58:59,272 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 09:58:59,273 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 09:58:59,274 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 09:58:59,275 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 09:58:59,277 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 09:58:59,278 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 09:58:59,279 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 09:58:59,281 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 09:58:59,282 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 09:58:59,283 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 09:58:59,284 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 09:59:05,913 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 09:59:06,198 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 09:59:06,219 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 09:59:06,255 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 09:59:06,288 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 09:59:06,308 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 09:59:06,324 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 09:59:06,360 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 09:59:06,568 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 09:59:06,582 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 09:59:06,610 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 09:59:06,639 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 09:59:06,657 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 09:59:06,667 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 09:59:06,683 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 09:59:06,693 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 09:59:06,712 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 09:59:06,726 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 09:59:06,749 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 09:59:06,767 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 09:59:06,774 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 09:59:06,786 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 09:59:06,807 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 09:59:06,840 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 09:59:06,910 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 09:59:06,922 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 09:59:06,953 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 09:59:06,963 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 09:59:07,060 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 09:59:07,063 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 09:59:07,063 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 09:59:07,063 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 09:59:07,459 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 09:59:07,467 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 09:59:09,481 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 09:59:09,507 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 09:59:09,512 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 09:59:09,818 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 24.818 seconds (JVM running for 27.517)
2020-07-12 10:00:24,987 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:00:24,987 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:00:25,263 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 10:00:33,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:00:33,200 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:00:33,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:00:33,311 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-4] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 10:00:50,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:00:50,529 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=5, available=Y}} for Document{{}} fields.
2020-07-12 10:00:50,560 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "5"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:00:52,932 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:00:52,933 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:00:59,620 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=5}} for Document{{}} fields.
2020-07-12 10:00:59,624 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "5"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 10:00:59,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=179.0, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:00:59,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, actualPrice=179.0, discount=6, discountPrice=179.0, imageLinks=[], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@7b56c512)
2020-07-12 10:00:59,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@7b56c512, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:00:59,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 10:00:59,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@7b56c512, Document{{_id=5, categoryId=13, subCategoryId=24, name=boost, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:00:59,701 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=5, available=Y}} for Document{{}} fields.
2020-07-12 10:00:59,702 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "5"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:00:59,705 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=13}} for Document{{name=13}} fields.
2020-07-12 10:00:59,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{name=13}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 10:00:59,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, name=cat}})
2020-07-12 10:00:59,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, name=cat}}, com.initializers.services.apiservices.model.item.ItemCategory@41582761)
2020-07-12 10:00:59,718 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 10:00:59,720 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 10:00:59,722 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 10:00:59,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1b51f920)
2020-07-12 10:00:59,855 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "5"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:00:59,882 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=5, available=Y}} for Document{{}} fields.
2020-07-12 10:00:59,889 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "5"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:02:13,150 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:02:13,216 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:02:13,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:02:16,587 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:02:16,593 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 10:02:16,595 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:02:16,598 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:02:16,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68c4fde6)
2020-07-12 10:11:39,362 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 3119 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 10:11:39,363 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 10:11:39,374 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 10:11:40,312 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 10:11:40,314 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 10:11:40,327 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 10:11:40,328 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 10:11:40,328 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 10:11:40,328 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 10:11:40,329 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 10:11:40,329 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 10:11:40,329 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 10:11:40,330 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 10:11:40,330 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 10:11:40,331 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 10:11:40,332 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 10:11:40,334 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 10:11:40,337 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 10:11:40,338 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 10:11:40,338 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 10:11:40,393 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 10:11:40,394 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 10:11:40,403 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 88ms. Found 15 MongoDB repository interfaces.
2020-07-12 10:11:40,943 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:11:40,944 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:11:41,089 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:11:41,090 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:11:41,097 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 10:11:41,098 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 10:11:41,099 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 10:11:41,100 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 10:11:41,101 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 10:11:41,103 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 10:11:41,103 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 10:11:41,104 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 10:11:41,105 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 10:11:41,106 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 10:11:41,107 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 10:11:41,108 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 10:11:41,109 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 10:11:41,110 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 10:11:41,110 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 10:11:41,111 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 10:11:41,112 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 10:11:41,113 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 10:11:41,114 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 10:11:41,115 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 10:11:41,115 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 10:11:41,233 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 10:11:41,246 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 10:11:41,260 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 10:11:41,274 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 10:11:41,286 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 10:11:41,300 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 10:11:41,309 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 10:11:41,325 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 10:11:41,377 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 10:11:41,385 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 10:11:41,406 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 10:11:41,417 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 10:11:41,428 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 10:11:41,438 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 10:11:41,451 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 10:11:41,460 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 10:11:41,480 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 10:11:41,490 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 10:11:41,503 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 10:11:41,517 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 10:11:41,523 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 10:11:41,535 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 10:11:41,546 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 10:11:41,554 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 10:11:41,629 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 10:11:41,638 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 10:11:41,650 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 10:11:41,658 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 10:11:41,744 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 10:11:41,747 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 10:11:41,747 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 10:11:41,747 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 10:11:41,799 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 10:11:41,810 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 10:11:42,177 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 10:11:42,189 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 10:11:42,192 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 10:11:42,299 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.039 seconds (JVM running for 779.998)
2020-07-12 10:15:33,053 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 4600 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 10:15:33,071 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 10:15:33,071 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 10:15:35,774 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 10:15:35,806 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 10:15:35,835 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 10:15:35,838 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 10:15:35,839 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 10:15:35,840 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 10:15:35,841 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 10:15:35,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 10:15:35,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 10:15:35,843 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 10:15:35,844 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 10:15:35,846 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 10:15:35,848 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 10:15:35,849 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 10:15:35,851 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 10:15:35,852 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 10:15:35,854 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 10:15:36,042 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 10:15:36,044 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 10:15:36,055 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 246ms. Found 15 MongoDB repository interfaces.
2020-07-12 10:15:39,616 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:15:39,618 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:15:39,956 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:15:39,957 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 10:15:40,044 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 10:15:40,060 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 10:15:40,061 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 10:15:40,062 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 10:15:40,064 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 10:15:40,065 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 10:15:40,066 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 10:15:40,067 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 10:15:40,068 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 10:15:40,069 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 10:15:40,070 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 10:15:40,071 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 10:15:40,072 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 10:15:40,073 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 10:15:40,074 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 10:15:40,076 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 10:15:40,077 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 10:15:40,078 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 10:15:40,080 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 10:15:40,081 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 10:15:40,082 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 10:15:40,913 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 10:15:41,064 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 10:15:41,081 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 10:15:41,103 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 10:15:41,117 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 10:15:41,134 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 10:15:41,145 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 10:15:41,163 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 10:15:41,394 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 10:15:41,403 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 10:15:41,422 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 10:15:41,435 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 10:15:41,445 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 10:15:41,454 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 10:15:41,463 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 10:15:41,469 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 10:15:41,486 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 10:15:41,497 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 10:15:41,513 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 10:15:41,526 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 10:15:41,532 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 10:15:41,544 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 10:15:41,553 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 10:15:41,562 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 10:15:41,591 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 10:15:41,601 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 10:15:41,614 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 10:15:41,623 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 10:15:41,711 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 10:15:41,715 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 10:15:41,716 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 10:15:41,716 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 10:15:41,907 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 10:15:41,915 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 10:15:43,449 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 10:15:43,480 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 10:15:43,485 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 10:15:43,835 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 12.683 seconds (JVM running for 14.401)
2020-07-12 10:16:13,321 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 10:16:13,468 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:16:13,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:16:13,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@188c6e97)
2020-07-12 10:16:54,808 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 10:16:54,810 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:16:54,815 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:16:54,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33503914)
2020-07-12 10:16:54,932 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 10:16:54,934 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:16:54,942 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:16:54,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1812e488)
2020-07-12 10:17:24,698 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:17:24,701 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:17:24,766 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-6] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 10:17:24,800 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-07-12 10:17:24,801 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 10:17:24,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:17:24,810 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:17:24,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:24,814 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@423fe8d)
2020-07-12 10:17:30,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:17:30,437 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:17:30,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:17:30,446 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 10:17:33,537 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:17:33,662 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:17:33,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:17:35,497 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:17:35,504 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:17:35,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:17:35,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:35,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11aa9ab6)
2020-07-12 10:17:35,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:35,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cb3aff5)
2020-07-12 10:17:35,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:35,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f9d1599)
2020-07-12 10:17:35,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:35,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@768f030f)
2020-07-12 10:17:35,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:35,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33355842)
2020-07-12 10:17:35,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:35,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22e885d6)
2020-07-12 10:17:35,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:35,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fe7dcf)
2020-07-12 10:17:39,966 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:17:39,968 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:17:39,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:39,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5939e9cc)
2020-07-12 10:17:58,269 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:17:58,281 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:17:58,283 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:17:58,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:58,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c3493a3)
2020-07-12 10:17:58,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:58,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f797dbf)
2020-07-12 10:17:58,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:58,294 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@314c973f)
2020-07-12 10:17:58,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:58,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d31e406)
2020-07-12 10:17:58,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:58,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@81175f0)
2020-07-12 10:17:58,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:58,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f66b034)
2020-07-12 10:17:58,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:17:58,304 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19c1f6ce)
2020-07-12 10:21:33,041 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 10:21:33,042 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:21:33,043 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:21:33,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:21:33,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:33,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16d519fa)
2020-07-12 10:21:33,051 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:33,058 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65f84512)
2020-07-12 10:21:38,417 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:21:38,418 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:21:38,422 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:21:38,425 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:21:38,429 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:38,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b555106)
2020-07-12 10:21:38,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:38,431 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24edb30d)
2020-07-12 10:21:38,434 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:38,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7330b222)
2020-07-12 10:21:38,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:38,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3aeb1874)
2020-07-12 10:21:38,440 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 10:21:38,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:21:38,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:38,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b57a34e)
2020-07-12 10:21:38,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:38,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@126b06f2)
2020-07-12 10:21:38,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:21:38,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@643c073f)
2020-07-12 10:21:55,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:21:55,714 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:22:08,647 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:22:08,647 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:22:14,340 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:22:14,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 10:22:14,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=best for 12 months, sellerName=ITC, disclaimer=for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:22:14,352 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=best for 12 months, sellerName=ITC, disclaimer=for all ages}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@2690692f)
2020-07-12 10:22:14,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@2690692f, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:22:14,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 10:22:14,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@2690692f, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:22:14,402 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:22:14,403 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:22:14,406 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e14d2d3)
2020-07-12 10:22:14,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31b55bdb)
2020-07-12 10:22:14,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a8a12f3)
2020-07-12 10:22:14,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ff3591f)
2020-07-12 10:22:14,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77999278)
2020-07-12 10:22:14,415 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,416 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ce964d3)
2020-07-12 10:22:14,417 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@160eee37)
2020-07-12 10:22:14,419 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 10:22:14,421 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 10:22:14,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 10:22:14,430 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@190464a1)
2020-07-12 10:22:14,431 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 10:22:14,433 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 10:22:14,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 10:22:14,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@467b519e)
2020-07-12 10:22:14,545 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:22:14,549 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:22:14,552 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:22:14,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@541db6e4)
2020-07-12 10:22:14,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37552e01)
2020-07-12 10:22:14,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a0c439)
2020-07-12 10:22:14,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78736f9)
2020-07-12 10:22:14,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e941a7b)
2020-07-12 10:22:14,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@202f1e8e)
2020-07-12 10:22:14,558 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:22:14,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20ae87be)
2020-07-12 10:22:32,618 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:22:32,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:23:20,709 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:23:20,711 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 10:23:20,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:23:20,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@265dbd5c)
2020-07-12 10:23:20,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@265dbd5c, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=test, sellerName=adca, disclaimer=jadj}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:23:20,716 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 10:23:20,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@265dbd5c, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=test, sellerName=adca, disclaimer=jadj}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 10:23:20,719 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:23:20,720 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:23:20,732 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:23:20,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a910c2f)
2020-07-12 10:23:20,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:23:20,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@716df17c)
2020-07-12 10:23:20,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:23:20,735 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b93964f)
2020-07-12 10:23:20,736 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:23:20,737 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b212c45)
2020-07-12 10:23:20,737 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:23:20,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29e3bb7a)
2020-07-12 10:23:20,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:23:20,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@379b592b)
2020-07-12 10:23:20,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:23:20,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@202d9079)
2020-07-12 10:23:20,742 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 10:23:20,744 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 10:23:20,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 10:23:20,747 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@32fcc33d)
2020-07-12 10:23:20,748 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 10:23:20,750 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 10:23:20,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 10:23:20,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@6709673)
2020-07-12 10:28:23,054 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 10:28:23,056 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:28:23,059 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:28:23,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:28:23,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76e81095)
2020-07-12 10:28:23,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:28:23,064 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:28:23,065 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7acfc877)
2020-07-12 10:30:52,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:30:52,689 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:30:52,693 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 10:30:52,698 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:30:52,701 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:30:52,702 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:30:52,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:30:52,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69158a50)
2020-07-12 10:30:52,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:30:52,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3690d42d)
2020-07-12 10:30:52,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:30:52,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e44b172)
2020-07-12 10:30:52,716 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:30:52,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@336e794f)
2020-07-12 10:30:52,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:30:52,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76ec2278)
2020-07-12 10:30:52,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:30:52,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46eda134)
2020-07-12 10:30:52,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:30:52,721 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3dd947ba)
2020-07-12 10:35:55,574 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:35:55,599 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:35:55,607 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:35:55,694 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:35:55,698 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:35:55,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:36:05,657 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:36:05,662 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:36:05,663 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:36:05,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26acd0e3)
2020-07-12 10:36:05,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24df156f)
2020-07-12 10:36:05,668 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,669 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ef4ed)
2020-07-12 10:36:05,669 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30ce9163)
2020-07-12 10:36:05,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70a57451)
2020-07-12 10:36:05,672 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,673 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c8d6347)
2020-07-12 10:36:05,678 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b1313a7)
2020-07-12 10:36:05,803 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:36:05,807 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:36:05,809 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:36:05,813 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,814 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69048ef2)
2020-07-12 10:36:05,814 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@633ff5aa)
2020-07-12 10:36:05,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@580c7d22)
2020-07-12 10:36:05,832 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,833 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@414fe173)
2020-07-12 10:36:05,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c7184b6)
2020-07-12 10:36:05,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10ffb237)
2020-07-12 10:36:05,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:05,847 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b213867)
2020-07-12 10:36:09,495 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:36:09,496 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:36:09,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:09,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e205dac)
2020-07-12 10:36:09,504 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=12}} for Document{{}} fields.
2020-07-12 10:36:09,505 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:36:09,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:36:09,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4de7565)
2020-07-12 10:37:12,755 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "12"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:37:12,756 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:37:12,762 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=12, available=Y}} for Document{{}} fields.
2020-07-12 10:37:12,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "12"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:37:12,765 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:37:12,768 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:37:12,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:12,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2153869e)
2020-07-12 10:37:12,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:12,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b9b208b)
2020-07-12 10:37:12,780 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:12,781 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@532547f3)
2020-07-12 10:37:12,789 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:12,791 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11019af1)
2020-07-12 10:37:12,792 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:12,792 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c5b9939)
2020-07-12 10:37:12,793 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:12,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ea66b41)
2020-07-12 10:37:12,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:12,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37c5b7b9)
2020-07-12 10:37:25,276 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:37:25,278 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:37:25,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:25,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f69b37e)
2020-07-12 10:37:54,448 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:37:54,452 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:37:54,453 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:37:54,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:54,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d9982be)
2020-07-12 10:37:54,457 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:54,458 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@182e8fb9)
2020-07-12 10:37:54,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:54,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@540ad9e8)
2020-07-12 10:37:54,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:54,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1daf29ab)
2020-07-12 10:37:54,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:54,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c12c4d2)
2020-07-12 10:37:54,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:54,472 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@402dc5ae)
2020-07-12 10:37:54,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:37:54,473 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@426a81da)
2020-07-12 10:38:51,739 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:38:51,743 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:38:51,744 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:38:51,831 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:38:51,841 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:38:51,847 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:38:56,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:38:56,674 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:38:56,676 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:38:56,679 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,680 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c63319f)
2020-07-12 10:38:56,680 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,681 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4596b4e4)
2020-07-12 10:38:56,682 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,683 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@685c89a8)
2020-07-12 10:38:56,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5711e338)
2020-07-12 10:38:56,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2abcf8c)
2020-07-12 10:38:56,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@726a6aa9)
2020-07-12 10:38:56,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ef7ac85)
2020-07-12 10:38:56,752 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:38:56,756 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:38:56,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:38:56,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,766 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78106b78)
2020-07-12 10:38:56,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@458d5019)
2020-07-12 10:38:56,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c8d7ffa)
2020-07-12 10:38:56,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4af9bacc)
2020-07-12 10:38:56,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31495340)
2020-07-12 10:38:56,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1eebd0e8)
2020-07-12 10:38:56,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:38:56,779 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@191e0e60)
2020-07-12 10:40:07,962 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:40:08,133 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:40:08,134 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:40:20,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:40:20,452 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:40:20,455 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:40:23,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:40:23,746 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:40:23,752 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:40:46,764 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:40:46,772 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 10:40:46,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:40:46,782 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:40:46,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@117d4451)
2020-07-12 10:40:46,828 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:40:46,832 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 10:40:46,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:40:46,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:40:46,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@90e3ced)
2020-07-12 10:40:49,578 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:40:49,643 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:40:49,660 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:41:10,361 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:41:10,432 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:41:10,437 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:43:38,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:43:38,042 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:43:38,044 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:43:38,123 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:43:38,127 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:43:38,128 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:43:45,825 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:43:45,828 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:43:45,829 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:43:45,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45032fcb)
2020-07-12 10:43:45,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ef698f9)
2020-07-12 10:43:45,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9c22068)
2020-07-12 10:43:45,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67a2a67c)
2020-07-12 10:43:45,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b83b034)
2020-07-12 10:43:45,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@108c6ed)
2020-07-12 10:43:45,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@195167c4)
2020-07-12 10:43:45,916 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:43:45,920 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:43:45,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:43:45,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f26e26f)
2020-07-12 10:43:45,930 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@675a07df)
2020-07-12 10:43:45,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6bc3dc74)
2020-07-12 10:43:45,933 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,934 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fbc340d)
2020-07-12 10:43:45,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,935 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7319c0f)
2020-07-12 10:43:45,936 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@306217c9)
2020-07-12 10:43:45,937 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:45,938 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45375dcd)
2020-07-12 10:43:47,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:43:47,874 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:43:47,883 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:43:50,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:43:50,216 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:43:50,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:43:50,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:50,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d6427b8)
2020-07-12 10:43:50,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:50,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d5145e2)
2020-07-12 10:43:50,222 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:50,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ab4fe44)
2020-07-12 10:43:50,223 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:50,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@bcb492b)
2020-07-12 10:43:50,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:50,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67fee60d)
2020-07-12 10:43:50,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:50,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e7d145)
2020-07-12 10:43:50,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:43:50,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d7c59c3)
2020-07-12 10:45:43,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:43,377 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:45:43,379 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:45:43,452 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:43,455 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:45:43,457 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:45:44,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:44,567 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:45:44,575 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:45:44,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6866b1b9)
2020-07-12 10:45:44,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c98e9b0)
2020-07-12 10:45:44,599 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,607 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f3f3273)
2020-07-12 10:45:44,608 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,610 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7de935ee)
2020-07-12 10:45:44,611 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3942cf3d)
2020-07-12 10:45:44,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@426c64cc)
2020-07-12 10:45:44,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,618 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54566a58)
2020-07-12 10:45:44,631 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:44,635 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:45:44,638 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:45:44,641 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30aa9881)
2020-07-12 10:45:44,642 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19b52e3)
2020-07-12 10:45:44,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d75c1f8)
2020-07-12 10:45:44,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@710c9633)
2020-07-12 10:45:44,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15867603)
2020-07-12 10:45:44,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e51321a)
2020-07-12 10:45:44,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:44,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d885029)
2020-07-12 10:45:47,435 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:47,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:45:47,566 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:45:50,813 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:50,817 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 10:45:50,818 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:45:50,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:50,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6244e986)
2020-07-12 10:45:52,986 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:53,110 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:45:53,114 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:45:55,852 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:45:55,856 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:45:55,857 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:45:55,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:55,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3981b7c8)
2020-07-12 10:45:55,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:55,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b789b55)
2020-07-12 10:45:55,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:55,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@348dcda5)
2020-07-12 10:45:55,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:55,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f12109e)
2020-07-12 10:45:55,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:55,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b19d943)
2020-07-12 10:45:55,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:55,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44c44f46)
2020-07-12 10:45:55,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:45:55,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1efe429e)
2020-07-12 10:46:01,783 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:46:01,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:01,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:01,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60247379)
2020-07-12 10:46:04,241 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:46:04,246 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:46:04,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:04,250 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:46:04,252 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:04,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,259 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78a0eea5)
2020-07-12 10:46:04,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4213b3)
2020-07-12 10:46:04,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41c5b06c)
2020-07-12 10:46:04,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7591ef1a)
2020-07-12 10:46:04,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a1595dc)
2020-07-12 10:46:04,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5adad8a6)
2020-07-12 10:46:04,267 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36705541)
2020-07-12 10:46:04,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:04,272 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c6385aa)
2020-07-12 10:46:28,616 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:46:28,623 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:46:28,627 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:28,788 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:46:28,801 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:46:28,802 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:29,225 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:46:29,250 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:46:29,251 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:29,258 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,260 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c8be7a8)
2020-07-12 10:46:29,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,261 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ac30569)
2020-07-12 10:46:29,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@735d1267)
2020-07-12 10:46:29,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e903dd2)
2020-07-12 10:46:29,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,264 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d352d0f)
2020-07-12 10:46:29,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,265 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f9f8b8d)
2020-07-12 10:46:29,266 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44ca6433)
2020-07-12 10:46:29,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:46:29,412 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:46:29,413 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:29,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@597c4e97)
2020-07-12 10:46:29,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f7d0a1)
2020-07-12 10:46:29,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ccaa294)
2020-07-12 10:46:29,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71414086)
2020-07-12 10:46:29,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4af2a0cf)
2020-07-12 10:46:29,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@733903e8)
2020-07-12 10:46:29,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:29,426 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a6ec119)
2020-07-12 10:46:33,365 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:46:33,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:46:33,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:46:33,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a1de45a)
2020-07-12 10:47:16,711 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:47:16,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:47:16,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:47:16,728 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4fb07367)
2020-07-12 10:47:16,737 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:47:16,741 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:47:16,745 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,746 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@479b018c)
2020-07-12 10:47:16,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,749 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c64f684)
2020-07-12 10:47:16,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,750 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d93e42)
2020-07-12 10:47:16,751 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c4672a0)
2020-07-12 10:47:16,753 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@534e9dc5)
2020-07-12 10:47:16,754 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18d591fe)
2020-07-12 10:47:16,755 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:16,756 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56b09788)
2020-07-12 10:47:54,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:47:54,684 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:47:54,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:47:54,805 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:47:54,808 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:47:54,810 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:47:57,753 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:47:57,757 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:47:57,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:47:57,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5356875)
2020-07-12 10:47:57,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ef41e40)
2020-07-12 10:47:57,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d026bd0)
2020-07-12 10:47:57,783 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47367c2)
2020-07-12 10:47:57,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a2bd1f9)
2020-07-12 10:47:57,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34b3cce2)
2020-07-12 10:47:57,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a316d4f)
2020-07-12 10:47:57,894 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:47:57,897 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:47:57,899 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:47:57,901 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,902 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71141940)
2020-07-12 10:47:57,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,903 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ca579e4)
2020-07-12 10:47:57,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,904 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13e642d7)
2020-07-12 10:47:57,905 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d308851)
2020-07-12 10:47:57,906 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c3f56ae)
2020-07-12 10:47:57,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b026694)
2020-07-12 10:47:57,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:47:57,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ad365d9)
2020-07-12 10:48:01,567 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:48:01,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:48:01,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:01,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65e6a9fb)
2020-07-12 10:48:04,141 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:48:04,155 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:48:04,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:48:04,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@110082d9)
2020-07-12 10:48:04,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2521ee5c)
2020-07-12 10:48:04,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@53fdcf1b)
2020-07-12 10:48:04,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1051276)
2020-07-12 10:48:04,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14864ec5)
2020-07-12 10:48:04,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e7f0107)
2020-07-12 10:48:04,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,164 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c794c4)
2020-07-12 10:48:04,203 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:48:04,212 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:48:04,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:48:04,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,215 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@215d79fe)
2020-07-12 10:48:04,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,217 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d7702a)
2020-07-12 10:48:04,218 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@969016e)
2020-07-12 10:48:04,219 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b95ba6e)
2020-07-12 10:48:04,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@314dae6b)
2020-07-12 10:48:04,221 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ca6de48)
2020-07-12 10:48:04,236 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:04,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d05dcc3)
2020-07-12 10:48:09,572 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:48:09,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:48:09,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:09,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@299c3c8c)
2020-07-12 10:48:58,026 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:48:58,030 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:48:58,031 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:48:58,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:58,033 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9f3b63d)
2020-07-12 10:48:58,034 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:58,035 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@263ea5d9)
2020-07-12 10:48:58,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:58,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d000120)
2020-07-12 10:48:58,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:58,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58f66800)
2020-07-12 10:48:58,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:58,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ca06f7d)
2020-07-12 10:48:58,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:58,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f630b5d)
2020-07-12 10:48:58,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:48:58,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52a70090)
2020-07-12 10:49:02,137 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:49:02,140 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:49:02,145 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:49:02,157 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:49:02,157 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4eb914a3)
2020-07-12 10:49:02,158 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:49:02,159 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61beb8c5)
2020-07-12 10:49:02,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:49:02,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1aa677a2)
2020-07-12 10:49:02,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:49:02,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d138896)
2020-07-12 10:49:02,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:49:02,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b09839b)
2020-07-12 10:49:02,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:49:02,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4fe570af)
2020-07-12 10:49:02,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:49:02,163 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66570596)
2020-07-12 10:53:04,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:04,795 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:53:04,805 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:04,848 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:04,852 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:53:04,853 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:04,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:04,861 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46fa35dc)
2020-07-12 10:53:04,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:04,862 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dc3f2b9)
2020-07-12 10:53:04,863 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:04,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6aaafadc)
2020-07-12 10:53:04,864 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:04,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@251a8300)
2020-07-12 10:53:04,865 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:04,866 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@325906aa)
2020-07-12 10:53:04,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:04,867 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70cd6c62)
2020-07-12 10:53:04,868 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:04,868 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d8c14bd)
2020-07-12 10:53:04,928 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:04,937 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 10:53:04,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:05,056 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:05,075 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:53:05,077 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:05,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:05,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e796eeb)
2020-07-12 10:53:05,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:05,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@787d5497)
2020-07-12 10:53:05,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:05,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1090f4a3)
2020-07-12 10:53:05,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:05,087 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2cb14a47)
2020-07-12 10:53:05,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:05,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@91a670c)
2020-07-12 10:53:05,088 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:05,089 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b515354)
2020-07-12 10:53:05,099 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:05,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cf39971)
2020-07-12 10:53:15,159 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:15,162 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:53:15,164 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:15,166 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c4efeb1)
2020-07-12 10:53:15,167 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a832ebd)
2020-07-12 10:53:15,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,168 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22cc4d08)
2020-07-12 10:53:15,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b111af8)
2020-07-12 10:53:15,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7011de5d)
2020-07-12 10:53:15,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23b4f024)
2020-07-12 10:53:15,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,171 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63d04d57)
2020-07-12 10:53:15,348 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:15,358 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:53:15,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:15,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5850b20c)
2020-07-12 10:53:15,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@118950a5)
2020-07-12 10:53:15,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@477d169e)
2020-07-12 10:53:15,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7645a426)
2020-07-12 10:53:15,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b58a830)
2020-07-12 10:53:15,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@700fd986)
2020-07-12 10:53:15,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:15,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f69f8ff)
2020-07-12 10:53:19,186 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 10:53:19,187 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:19,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:19,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75e35abc)
2020-07-12 10:53:21,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:21,486 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:53:21,487 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:21,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,495 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c7fca53)
2020-07-12 10:53:21,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@165dc373)
2020-07-12 10:53:21,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cb85afa)
2020-07-12 10:53:21,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f088fc0)
2020-07-12 10:53:21,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d07e720)
2020-07-12 10:53:21,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,523 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6539e9a8)
2020-07-12 10:53:21,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,524 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bc8107f)
2020-07-12 10:53:21,564 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:21,570 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:53:21,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:21,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@654c0a0a)
2020-07-12 10:53:21,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a92343c)
2020-07-12 10:53:21,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,584 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28b3d729)
2020-07-12 10:53:21,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4538830a)
2020-07-12 10:53:21,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4021cdfd)
2020-07-12 10:53:21,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,597 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b392211)
2020-07-12 10:53:21,597 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:21,598 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5d85bac0)
2020-07-12 10:53:43,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:43,995 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:53:44,006 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:53:49,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "4"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:49,338 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=4, available=Y}} for Document{{}} fields.
2020-07-12 10:53:49,339 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "4"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:53,416 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:53,533 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 10:53:53,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 10:53:56,560 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:53:56,565 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:53:56,566 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:53:56,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:56,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b2a9608)
2020-07-12 10:53:56,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:56,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3062f553)
2020-07-12 10:53:56,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:56,570 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4196744)
2020-07-12 10:53:56,571 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:56,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4be9e823)
2020-07-12 10:53:56,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:56,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@241cbd80)
2020-07-12 10:53:56,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:56,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f30c3d)
2020-07-12 10:53:56,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:53:56,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c1f7840)
2020-07-12 10:54:56,205 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:54:56,206 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 10:54:56,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:54:56,212 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:54:56,213 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d5f4e75)
2020-07-12 10:54:56,214 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 10:54:56,215 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:55:00,283 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:55:00,286 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:55:00,287 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:55:00,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7750ae85)
2020-07-12 10:55:00,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@613c4c91)
2020-07-12 10:55:00,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3006543a)
2020-07-12 10:55:00,293 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,295 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ca1001a)
2020-07-12 10:55:00,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ef7b18d)
2020-07-12 10:55:00,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d2c3006)
2020-07-12 10:55:00,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f891e1d)
2020-07-12 10:55:00,350 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 10:55:00,362 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 10:55:00,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 10:55:00,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c206345)
2020-07-12 10:55:00,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1173a5f0)
2020-07-12 10:55:00,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29b194b6)
2020-07-12 10:55:00,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@522ecd8c)
2020-07-12 10:55:00,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3dfbb6c7)
2020-07-12 10:55:00,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31abd8ad)
2020-07-12 10:55:00,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 10:55:00,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@141afe0a)
2020-07-12 12:08:35,095 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:08:35,125 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:08:35,128 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:08:35,129 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@400c4c65)
2020-07-12 12:08:59,494 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:08:59,497 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:08:59,498 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:08:59,577 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:08:59,581 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:08:59,595 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:03,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:09:03,571 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:09:03,573 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:03,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57af2d1c)
2020-07-12 12:09:03,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33d24b54)
2020-07-12 12:09:03,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12d433db)
2020-07-12 12:09:03,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@463a7ec0)
2020-07-12 12:09:03,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68536cd6)
2020-07-12 12:09:03,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@497a0263)
2020-07-12 12:09:03,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a03ba7c)
2020-07-12 12:09:03,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:09:03,681 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:09:03,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:03,684 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25cbb759)
2020-07-12 12:09:03,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48a6685f)
2020-07-12 12:09:03,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3dd48475)
2020-07-12 12:09:03,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7427e403)
2020-07-12 12:09:03,689 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c2ef4a1)
2020-07-12 12:09:03,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77b191eb)
2020-07-12 12:09:03,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:03,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e5f5444)
2020-07-12 12:09:06,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:09:06,315 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:09:06,316 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:06,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e9d9fbb)
2020-07-12 12:09:06,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@fe151ac)
2020-07-12 12:09:06,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c7675ea)
2020-07-12 12:09:06,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@532775e)
2020-07-12 12:09:06,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37e04004)
2020-07-12 12:09:06,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32091b65)
2020-07-12 12:09:06,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,328 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4daff1eb)
2020-07-12 12:09:06,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:09:06,368 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:09:06,370 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:06,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@601b16bf)
2020-07-12 12:09:06,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51604ef6)
2020-07-12 12:09:06,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1298ce99)
2020-07-12 12:09:06,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69f3cbc0)
2020-07-12 12:09:06,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51e596af)
2020-07-12 12:09:06,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a1759b)
2020-07-12 12:09:06,396 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:06,397 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56199f50)
2020-07-12 12:09:08,787 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:09:08,791 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:09:08,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:08,794 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3cfb34ff)
2020-07-12 12:09:08,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1718b8ec)
2020-07-12 12:09:08,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16929b28)
2020-07-12 12:09:08,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34c787d0)
2020-07-12 12:09:08,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,802 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@51fe117b)
2020-07-12 12:09:08,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f31c70)
2020-07-12 12:09:08,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13a9cfd)
2020-07-12 12:09:08,914 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:09:08,916 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:09:08,917 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:08,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fc37db9)
2020-07-12 12:09:08,921 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48cd6848)
2020-07-12 12:09:08,922 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bc6bab1)
2020-07-12 12:09:08,925 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,926 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f61127b)
2020-07-12 12:09:08,927 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,929 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b3b849b)
2020-07-12 12:09:08,930 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3817209c)
2020-07-12 12:09:08,931 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:08,932 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76ca161d)
2020-07-12 12:09:12,822 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:09:12,823 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:12,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:12,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ec3efd7)
2020-07-12 12:09:52,548 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:09:52,566 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:09:52,568 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:09:52,574 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:52,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cb74be0)
2020-07-12 12:09:52,575 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:52,576 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b399d96)
2020-07-12 12:09:52,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:52,577 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c2d2e14)
2020-07-12 12:09:52,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:52,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6dd840d9)
2020-07-12 12:09:52,583 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:52,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2bf6eec9)
2020-07-12 12:09:52,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:52,586 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cd4030c)
2020-07-12 12:09:52,587 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:09:52,589 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19ccdb0c)
2020-07-12 12:10:02,809 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:10:02,810 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:10:02,811 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:02,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fda1782)
2020-07-12 12:10:21,683 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:10:21,684 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:10:21,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:21,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2593b270)
2020-07-12 12:10:21,737 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:10:21,738 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:10:21,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:21,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bbc6226)
2020-07-12 12:10:24,753 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:10:24,757 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:10:24,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:10:24,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:24,764 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67626da8)
2020-07-12 12:10:24,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:24,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c1553b1)
2020-07-12 12:10:24,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:24,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b030245)
2020-07-12 12:10:24,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:24,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5eb59114)
2020-07-12 12:10:24,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:24,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2aceb847)
2020-07-12 12:10:24,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:24,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c90ee74)
2020-07-12 12:10:24,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:24,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f22ca89)
2020-07-12 12:10:30,395 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:10:30,397 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:10:30,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:10:30,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9cb620d)
2020-07-12 12:11:00,595 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:11:00,597 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:11:00,598 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:11:00,674 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:11:00,677 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:11:00,678 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:11:00,681 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:11:00,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:11:00,687 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:11:00,688 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36bd8e64)
2020-07-12 12:11:00,765 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:11:00,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:11:00,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:11:00,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56ad4276)
2020-07-12 12:14:13,475 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:14:13,497 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:14:13,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:14:13,612 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:14:13,617 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:14:13,618 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:14:21,033 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:14:21,037 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:14:21,038 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:14:21,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58c42603)
2020-07-12 12:14:21,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67c818b)
2020-07-12 12:14:21,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43c52635)
2020-07-12 12:14:21,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c697d04)
2020-07-12 12:14:21,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75e4b6b4)
2020-07-12 12:14:21,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,046 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17f6115a)
2020-07-12 12:14:21,047 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,048 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d68691f)
2020-07-12 12:14:21,131 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:14:21,133 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:14:21,138 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:14:21,142 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66ab2bb3)
2020-07-12 12:14:21,143 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,144 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6785355c)
2020-07-12 12:14:21,144 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65424cee)
2020-07-12 12:14:21,145 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,146 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7aa03867)
2020-07-12 12:14:21,146 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,147 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45e96233)
2020-07-12 12:14:21,149 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,151 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b089007)
2020-07-12 12:14:21,151 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:21,152 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cda98b4)
2020-07-12 12:14:25,361 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:14:25,362 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:14:25,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:25,365 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62f0efc1)
2020-07-12 12:14:27,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:14:27,369 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:14:27,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:14:27,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:27,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b663d47)
2020-07-12 12:14:27,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:27,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67486cdf)
2020-07-12 12:14:27,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:27,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6569daa1)
2020-07-12 12:14:27,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:27,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fec4393)
2020-07-12 12:14:27,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:27,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@653acd2c)
2020-07-12 12:14:27,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:27,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41307bc0)
2020-07-12 12:14:27,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:27,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6aa71d95)
2020-07-12 12:14:32,911 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:14:32,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:14:32,919 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:14:32,920 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5864fc1a)
2020-07-12 12:15:56,760 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:15:56,763 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:15:56,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:15:56,767 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:15:56,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@335c0134)
2020-07-12 12:15:56,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:15:56,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ad142b1)
2020-07-12 12:15:56,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:15:56,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73b8ad6c)
2020-07-12 12:15:56,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:15:56,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4416e4f0)
2020-07-12 12:15:56,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:15:56,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@179008e7)
2020-07-12 12:15:56,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:15:56,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7734046e)
2020-07-12 12:15:56,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:15:56,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41511429)
2020-07-12 12:16:24,979 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:16:24,982 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:16:24,983 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:16:25,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:16:25,063 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:16:25,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:16:29,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:16:29,681 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:16:29,683 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:16:29,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b304577)
2020-07-12 12:16:29,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@124f5c73)
2020-07-12 12:16:29,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@431c6a77)
2020-07-12 12:16:29,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d0b5719)
2020-07-12 12:16:29,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5489b832)
2020-07-12 12:16:29,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ccdca14)
2020-07-12 12:16:29,709 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,710 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c225028)
2020-07-12 12:16:29,801 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:16:29,805 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:16:29,807 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:16:29,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,811 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1581c6be)
2020-07-12 12:16:29,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f6c4fcb)
2020-07-12 12:16:29,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,823 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3705bcda)
2020-07-12 12:16:29,824 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,825 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68ee2285)
2020-07-12 12:16:29,826 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7341ad10)
2020-07-12 12:16:29,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,831 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e9ea6a4)
2020-07-12 12:16:29,832 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:29,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24673ec1)
2020-07-12 12:16:34,977 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:16:34,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:16:34,981 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:34,982 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@370a3b89)
2020-07-12 12:16:46,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:16:46,368 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:16:46,369 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:16:46,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:46,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34a0d37c)
2020-07-12 12:16:46,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:46,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f13d45c)
2020-07-12 12:16:46,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:46,375 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c88f677)
2020-07-12 12:16:46,376 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:46,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2211eadb)
2020-07-12 12:16:46,377 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:46,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1098e6d6)
2020-07-12 12:16:46,378 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:46,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@112871ad)
2020-07-12 12:16:46,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:16:46,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2aa816b1)
2020-07-12 12:19:04,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:19:04,229 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:19:04,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:04,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32135997)
2020-07-12 12:19:15,166 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:19:15,170 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:19:15,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:19:15,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:15,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c76489f)
2020-07-12 12:19:15,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:15,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@12abf918)
2020-07-12 12:19:15,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:15,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d4f1b72)
2020-07-12 12:19:15,180 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:15,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e1e93d5)
2020-07-12 12:19:15,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:15,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30d20839)
2020-07-12 12:19:15,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:15,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7dfc5402)
2020-07-12 12:19:15,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:15,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@382d4444)
2020-07-12 12:19:28,703 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:19:28,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:19:28,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:28,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a612726)
2020-07-12 12:19:42,827 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:19:42,830 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:19:42,831 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:19:42,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:42,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a6e1af9)
2020-07-12 12:19:42,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:42,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3692fe11)
2020-07-12 12:19:42,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:42,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@35a9f49)
2020-07-12 12:19:42,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:42,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a1f8207)
2020-07-12 12:19:42,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:42,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@307cf46f)
2020-07-12 12:19:42,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:42,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@113fe607)
2020-07-12 12:19:42,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:19:42,848 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46c893be)
2020-07-12 12:21:11,531 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:21:11,546 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:21:11,553 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:11,625 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:21:11,628 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:21:11,629 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:23,439 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:21:23,442 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:21:23,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:23,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47cfed51)
2020-07-12 12:21:23,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f4b7ede)
2020-07-12 12:21:23,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b9408cc)
2020-07-12 12:21:23,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@354c4c0a)
2020-07-12 12:21:23,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d518a97)
2020-07-12 12:21:23,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59b8a86d)
2020-07-12 12:21:23,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,450 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@526109fe)
2020-07-12 12:21:23,522 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:21:23,524 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:21:23,526 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:23,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e79c2c4)
2020-07-12 12:21:23,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c18c784)
2020-07-12 12:21:23,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22f1f88e)
2020-07-12 12:21:23,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34f42d5e)
2020-07-12 12:21:23,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@143ba6e6)
2020-07-12 12:21:23,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e457702)
2020-07-12 12:21:23,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:23,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@635dd3cc)
2020-07-12 12:21:27,309 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:21:27,313 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:21:27,314 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:27,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f2ee4cf)
2020-07-12 12:21:27,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c3c6de6)
2020-07-12 12:21:27,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59210cf0)
2020-07-12 12:21:27,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@788c407f)
2020-07-12 12:21:27,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@106ccb3d)
2020-07-12 12:21:27,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f00c78b)
2020-07-12 12:21:27,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,324 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e170817)
2020-07-12 12:21:27,519 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:21:27,523 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:21:27,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:27,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@427d0d72)
2020-07-12 12:21:27,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ed21250)
2020-07-12 12:21:27,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a62fbf2)
2020-07-12 12:21:27,528 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d012462)
2020-07-12 12:21:27,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@273dae2d)
2020-07-12 12:21:27,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,533 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29737808)
2020-07-12 12:21:27,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:27,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1473abbf)
2020-07-12 12:21:32,328 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:21:32,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:32,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:32,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@364e5e42)
2020-07-12 12:21:34,679 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:21:34,681 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:21:34,682 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:21:34,686 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:34,690 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e4a8561)
2020-07-12 12:21:34,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:34,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a6660e3)
2020-07-12 12:21:34,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:34,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@778aa633)
2020-07-12 12:21:34,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:34,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73d7a44c)
2020-07-12 12:21:34,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:34,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@195c56da)
2020-07-12 12:21:34,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:34,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a44c6a)
2020-07-12 12:21:34,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:21:34,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@223dd973)
2020-07-12 12:22:01,374 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:22:01,387 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:22:01,388 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:22:01,500 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:22:01,507 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:22:01,508 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:22:02,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:22:02,802 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:22:02,803 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:22:02,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,809 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60754f21)
2020-07-12 12:22:02,810 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,816 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28238f4a)
2020-07-12 12:22:02,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,817 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1da12330)
2020-07-12 12:22:02,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,818 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24259fa2)
2020-07-12 12:22:02,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e63c040)
2020-07-12 12:22:02,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a8e5b19)
2020-07-12 12:22:02,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,822 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e224bdb)
2020-07-12 12:22:02,828 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:22:02,830 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:22:02,832 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:22:02,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46531501)
2020-07-12 12:22:02,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b78c918)
2020-07-12 12:22:02,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c641895)
2020-07-12 12:22:02,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,838 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39d4d08e)
2020-07-12 12:22:02,839 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@677121a8)
2020-07-12 12:22:02,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a2c0457)
2020-07-12 12:22:02,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:02,842 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56d00537)
2020-07-12 12:22:10,227 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:22:10,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:22:10,235 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:10,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76568c24)
2020-07-12 12:22:18,648 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:22:18,651 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:22:18,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:22:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59d8dced)
2020-07-12 12:22:18,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:18,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39661703)
2020-07-12 12:22:18,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:18,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33f83aea)
2020-07-12 12:22:18,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:18,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@24f1bdb0)
2020-07-12 12:22:18,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:18,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bd13277)
2020-07-12 12:22:18,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:18,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3286e401)
2020-07-12 12:22:18,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:22:18,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40dbb7d1)
2020-07-12 12:23:10,799 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:10,816 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:23:10,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:10,932 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:10,944 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:23:10,945 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:11,166 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:11,174 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:23:11,177 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:11,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e785441)
2020-07-12 12:23:11,184 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,185 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22f0bb0e)
2020-07-12 12:23:11,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22f105fa)
2020-07-12 12:23:11,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b896be9)
2020-07-12 12:23:11,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@475ff485)
2020-07-12 12:23:11,196 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60d00fab)
2020-07-12 12:23:11,197 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4aa4089e)
2020-07-12 12:23:11,346 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:11,356 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:23:11,357 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:11,359 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4262ac0b)
2020-07-12 12:23:11,360 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23f43f91)
2020-07-12 12:23:11,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,361 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d0b5b3c)
2020-07-12 12:23:11,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34b155ad)
2020-07-12 12:23:11,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6364b5c4)
2020-07-12 12:23:11,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61ee068e)
2020-07-12 12:23:11,364 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:11,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26fb7334)
2020-07-12 12:23:37,099 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:37,102 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:23:37,103 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:37,181 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:37,184 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:23:37,189 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:38,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:38,370 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:23:38,372 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:38,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@138837d2)
2020-07-12 12:23:38,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@995a9ef)
2020-07-12 12:23:38,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17dc01ec)
2020-07-12 12:23:38,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e661692)
2020-07-12 12:23:38,385 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c02802b)
2020-07-12 12:23:38,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@487c8695)
2020-07-12 12:23:38,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f582d17)
2020-07-12 12:23:38,402 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:38,405 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:23:38,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:38,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7477c804)
2020-07-12 12:23:38,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,410 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26edfd29)
2020-07-12 12:23:38,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6eaf98c2)
2020-07-12 12:23:38,411 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2a20e3c3)
2020-07-12 12:23:38,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60dd396b)
2020-07-12 12:23:38,412 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@299094ec)
2020-07-12 12:23:38,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:38,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b6b6094)
2020-07-12 12:23:40,783 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:23:40,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:40,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:40,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42c759e0)
2020-07-12 12:23:50,656 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:23:50,662 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:23:50,664 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:23:50,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:50,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cb16038)
2020-07-12 12:23:50,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:50,668 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76c72def)
2020-07-12 12:23:50,668 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:50,685 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@44103571)
2020-07-12 12:23:50,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:50,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b6e203d)
2020-07-12 12:23:50,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:50,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c2937c8)
2020-07-12 12:23:50,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:50,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34ed3f7)
2020-07-12 12:23:50,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:23:50,696 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46b0d552)
2020-07-12 12:26:10,156 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:26:10,158 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:26:10,159 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:26:10,299 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:26:10,312 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:26:10,313 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:26:12,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:26:12,969 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:26:12,971 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:26:12,973 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:12,974 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e36f80e)
2020-07-12 12:26:12,975 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:12,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2017cf47)
2020-07-12 12:26:12,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:12,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11d289c8)
2020-07-12 12:26:12,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:12,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5acb2719)
2020-07-12 12:26:12,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:12,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@533452c6)
2020-07-12 12:26:12,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:12,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4dc7c210)
2020-07-12 12:26:12,980 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:12,981 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@485e8ea9)
2020-07-12 12:26:13,101 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:26:13,104 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:26:13,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:26:13,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:13,107 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9c5367e)
2020-07-12 12:26:13,108 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:13,108 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18d46fe)
2020-07-12 12:26:13,108 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:13,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ac4c0f6)
2020-07-12 12:26:13,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:13,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@720f6de7)
2020-07-12 12:26:13,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:13,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5259c31e)
2020-07-12 12:26:13,110 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:13,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3988d51d)
2020-07-12 12:26:13,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:13,111 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@156771aa)
2020-07-12 12:26:19,105 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "13"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:26:19,107 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=13, available=Y}} for Document{{}} fields.
2020-07-12 12:26:19,108 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "13"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:26:19,117 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=13}} for Document{{}} fields.
2020-07-12 12:26:19,118 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "13"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:26:19,119 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:26:19,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1678a2c1)
2020-07-12 12:30:42,385 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:30:42,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:30:42,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,400 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c24bf80)
2020-07-12 12:30:42,407 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:30:42,410 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:30:42,412 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:30:42,413 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,414 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d369483)
2020-07-12 12:30:42,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76fc7d94)
2020-07-12 12:30:42,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56bfcdaa)
2020-07-12 12:30:42,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3839469c)
2020-07-12 12:30:42,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@41525f94)
2020-07-12 12:30:42,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54d78af7)
2020-07-12 12:30:42,424 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:30:42,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c2dcf5a)
2020-07-12 12:33:37,049 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:33:37,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:33:37,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:33:37,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c8e56b4)
2020-07-12 12:39:24,687 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:39:24,690 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:39:24,690 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:39:24,691 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:39:24,692 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22e1c9ad)
2020-07-12 12:39:24,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:39:24,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66fa3367)
2020-07-12 12:39:24,693 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:39:24,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e574430)
2020-07-12 12:39:24,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:39:24,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a3fc2f9)
2020-07-12 12:39:24,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:39:24,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@463fc2b2)
2020-07-12 12:39:24,694 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:39:24,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7169b019)
2020-07-12 12:39:24,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:39:24,695 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@751b1cc0)
2020-07-12 12:39:27,834 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:39:27,996 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:39:27,997 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:39:57,424 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:39:58,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:39:58,116 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:40:11,237 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:40:11,241 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:40:11,242 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:40:11,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:11,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e83738)
2020-07-12 12:40:11,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:11,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56082c46)
2020-07-12 12:40:11,246 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:11,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d7eaa9)
2020-07-12 12:40:11,247 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:11,249 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50cac748)
2020-07-12 12:40:11,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:11,250 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@165d7b9e)
2020-07-12 12:40:11,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:11,251 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1200f0f)
2020-07-12 12:40:11,253 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:11,254 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d1e2f20)
2020-07-12 12:40:18,409 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:40:18,420 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:40:39,489 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:40:39,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 12:40:39,494 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=test, sellerName=adca, disclaimer=jadj}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:40:39,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=test, sellerName=adca, disclaimer=jadj}}, status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@75f97d3)
2020-07-12 12:40:39,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@75f97d3, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:40:39,498 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 12:40:39,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@75f97d3, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:40:39,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:40:39,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:40:39,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:39,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@443f4694)
2020-07-12 12:40:39,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:39,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6cf839bc)
2020-07-12 12:40:39,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:39,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11f20e07)
2020-07-12 12:40:39,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:39,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7aa205be)
2020-07-12 12:40:39,519 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:39,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4417f798)
2020-07-12 12:40:39,520 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:39,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@698f137f)
2020-07-12 12:40:39,521 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:39,522 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@680cba7f)
2020-07-12 12:40:39,523 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 12:40:39,524 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 12:40:39,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 12:40:39,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@63c1d524)
2020-07-12 12:40:39,527 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 12:40:39,528 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 12:40:39,530 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 12:40:39,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@795b494d)
2020-07-12 12:40:42,629 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:40:42,631 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:40:42,632 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:40:42,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:42,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@631a829d)
2020-07-12 12:40:42,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:42,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d2589d6)
2020-07-12 12:40:42,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:42,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6038d025)
2020-07-12 12:40:42,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:42,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39468e74)
2020-07-12 12:40:42,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:42,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e7fedab)
2020-07-12 12:40:42,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:42,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fc5be8b)
2020-07-12 12:40:42,638 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:40:42,638 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@795ae4ae)
2020-07-12 12:40:58,549 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:40:59,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:40:59,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:41:11,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:41:22,095 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "status" : { "$in" : ["InActive"]}}}, { "$match" : { "_id" : { "$in" : [{ "$numberLong" : "2"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:41:29,758 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:41:29,760 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 12:41:29,761 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:41:29,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:41:29,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a5993cb)
2020-07-12 12:42:19,269 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:42:19,278 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:42:39,101 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 12:42:39,102 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 12:42:39,103 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=2, categoryId=15, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Premium quality , sellerName=thavare daily, disclaimer=best before 8 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:42:39,105 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=2, categoryId=15, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=Premium quality , sellerName=thavare daily, disclaimer=best before 8 months}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=InActive, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@768e716)
2020-07-12 12:42:39,194 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-5] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 12:42:39,197 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 12:42:39,198 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 12:42:39,199 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@6841e475)
2020-07-12 12:42:39,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@768e716, Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:42:39,202 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, imageLinks, status, _class]
2020-07-12 12:42:39,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@768e716, Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:42:39,205 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 12:42:39,206 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:42:39,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:42:39,207 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77b61b49)
2020-07-12 12:42:39,208 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 12:42:39,209 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 12:42:39,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 12:42:39,210 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@22388454)
2020-07-12 12:42:39,211 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 12:42:39,211 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 12:42:39,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 12:42:39,216 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@8dc7f1c)
2020-07-12 12:42:41,854 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:42:41,857 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 12:42:41,858 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:42:41,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:42:41,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@460b4fa5)
2020-07-12 12:42:52,417 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:42:52,912 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:42:52,921 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:43:10,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "categoryId" : { "$in" : [{ "$numberLong" : "14"}]}}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:43:55,190 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:43:56,732 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:43:57,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:44:21,416 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-12 12:44:21,418 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-12 12:44:21,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@3230f1e0)
2020-07-12 12:44:21,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-12 12:44:21,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@173ae98c)
2020-07-12 12:44:21,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-12 12:44:21,420 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@a9c94f3)
2020-07-12 12:44:21,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-12 12:44:21,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@16769462)
2020-07-12 12:44:21,421 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-12 12:44:21,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@23fcd8bd)
2020-07-12 12:44:21,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-12 12:44:21,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@634a23c7)
2020-07-12 12:44:21,422 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-12 12:44:21,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@d1f0851)
2020-07-12 12:44:21,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-12 12:44:21,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@2f684814)
2020-07-12 12:44:27,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:44:27,464 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:44:31,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:44:31,967 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:45:07,729 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 12:45:07,730 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 12:45:07,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 12:45:07,734 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@1fbefa1d)
2020-07-12 12:45:07,736 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 12:45:07,738 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 12:45:07,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 12:45:07,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@31c49aae)
2020-07-12 12:45:07,759 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] findAndModify using query: { "_id" : "item_details"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 12:45:07,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@54690744, Document{{_id=37, categoryId=14, subCategoryId=27, name=test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:45:07,808 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Inserting Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class] in collection: item_details
2020-07-12 12:45:07,812 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@54690744, Document{{_id=37, categoryId=14, subCategoryId=27, name=test, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 12:45:07,813 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=37, available=Y}} for Document{{}} fields.
2020-07-12 12:45:07,814 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "37"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:45:07,816 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 12:45:07,817 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 12:45:07,819 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 12:45:07,820 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@435adad7)
2020-07-12 12:45:07,821 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=27}} for Document{{name=27}} fields.
2020-07-12 12:45:07,822 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{name=27}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 12:45:07,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=27, name=shopnow}})
2020-07-12 12:45:07,828 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=27, name=shopnow}}, com.initializers.services.apiservices.model.item.ItemSubCategory@22f36eec)
2020-07-12 12:45:08,004 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "37"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:45:08,009 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=37, available=Y}} for Document{{}} fields.
2020-07-12 12:45:08,011 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "37"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:45:08,145 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:45:08,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:45:08,162 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "37"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:45:08,165 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=37, available=Y}} for Document{{}} fields.
2020-07-12 12:45:08,172 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "37"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:45:12,623 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:45:12,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:45:12,707 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:45:23,694 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:45:23,697 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 12:45:23,699 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:45:23,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:45:23,702 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64ecce2)
2020-07-12 12:45:28,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:45:28,669 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:45:28,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:45:30,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "_id" : 1, "name" : 1, "description" : 1, "imageLink" : 1}}] in collection item_category
2020-07-12 12:45:30,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}})
2020-07-12 12:45:30,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, name=cat, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584980451/zw5fnupnbsz2z15v0amx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@65cdb058)
2020-07-12 12:45:30,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}})
2020-07-12 12:45:30,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@1b883263)
2020-07-12 12:45:30,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}})
2020-07-12 12:45:30,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=15, name=dailyneed, description=upto 10% off, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896362/al25xboaokmb8fpqljic.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@4abf7e23)
2020-07-12 12:45:30,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=16, description=upto 60% off}})
2020-07-12 12:45:30,552 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=16, description=upto 60% off}}, com.initializers.services.apiservices.model.item.ItemCategory@1f081c8)
2020-07-12 12:45:30,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=17, name=top product, description=offer upto 40%}})
2020-07-12 12:45:30,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=17, name=top product, description=offer upto 40%}}, com.initializers.services.apiservices.model.item.ItemCategory@937aede)
2020-07-12 12:45:30,553 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}})
2020-07-12 12:45:30,554 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=18, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585148387/h1zjbaugnrwszyywiydk.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@53769eb1)
2020-07-12 12:45:30,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}})
2020-07-12 12:45:30,555 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=19, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150684/pn1udwzf6ggj9m73rx6x.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@6209bc9a)
2020-07-12 12:45:30,556 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}})
2020-07-12 12:45:30,557 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=20, name=top product, description=offer upto 40%, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1585150969/r9slzzo4gvrhtmvktqjx.jpg}}, com.initializers.services.apiservices.model.item.ItemCategory@67f28fd2)
2020-07-12 12:45:31,417 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:45:31,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:59:33,208 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:59:33,213 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:59:33,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:59:33,308 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:59:33,313 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:59:33,315 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:59:33,652 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:59:33,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:59:33,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:59:39,586 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:59:39,589 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:59:39,591 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:59:39,614 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:59:39,640 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 12:59:39,653 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 12:59:39,685 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:59:39,689 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 12:59:39,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:59:49,780 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 12:59:49,782 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 12:59:49,783 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:59:49,784 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:49,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7384e408)
2020-07-12 12:59:49,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:49,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c91fc2)
2020-07-12 12:59:49,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:49,785 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d08b242)
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a87e57b)
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e77e887)
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7688d784)
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:49,786 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ecaf1b5)
2020-07-12 12:59:54,711 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 12:59:54,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 12:59:54,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 12:59:54,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f4ba374)
2020-07-12 13:01:00,616 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:01:00,623 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:01:00,625 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:01:00,626 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:01:00,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@577ddc38)
2020-07-12 13:01:00,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:01:00,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67d2547e)
2020-07-12 13:01:00,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:01:00,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7574edd1)
2020-07-12 13:01:00,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:01:00,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73e08342)
2020-07-12 13:01:00,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:01:00,631 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a451d1a)
2020-07-12 13:01:00,631 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:01:00,636 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f41d188)
2020-07-12 13:01:00,637 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:01:00,638 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d89b9d4)
2020-07-12 13:02:20,637 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 13:02:20,638 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:02:20,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:02:20,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1886d4f2)
2020-07-12 13:02:59,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:02:59,503 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 13:02:59,504 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:02:59,654 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:02:59,656 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 13:02:59,664 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:03:00,577 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 13:03:00,578 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:03:00,580 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:03:00,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b33652a)
2020-07-12 13:03:00,590 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 13:03:00,591 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:03:00,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:03:00,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1732793f)
2020-07-12 13:04:07,497 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:04:07,501 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:04:07,502 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:04:07,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:07,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47c66423)
2020-07-12 13:04:07,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:07,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67c5a33d)
2020-07-12 13:04:07,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:07,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6ba6985e)
2020-07-12 13:04:07,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:07,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3df62588)
2020-07-12 13:04:07,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:07,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4965b969)
2020-07-12 13:04:07,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:07,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f32733)
2020-07-12 13:04:07,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:07,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c482b7b)
2020-07-12 13:04:37,405 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 13:04:37,406 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:04:37,408 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:04:37,409 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2399a95)
2020-07-12 13:07:00,268 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:07:00,271 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:07:00,273 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:07:00,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:07:00,275 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64557a45)
2020-07-12 13:07:00,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:07:00,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f260d80)
2020-07-12 13:07:00,276 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:07:00,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cc2520d)
2020-07-12 13:07:00,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:07:00,277 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68de0ee)
2020-07-12 13:07:00,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:07:00,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49453528)
2020-07-12 13:07:00,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:07:00,278 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@26e07b8d)
2020-07-12 13:07:00,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:07:00,279 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48dc0766)
2020-07-12 13:08:16,493 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:08:16,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 13:08:16,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:08:16,585 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:08:16,587 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 13:08:16,589 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:08:31,196 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:08:31,198 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:08:31,199 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:08:31,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,201 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@724c5455)
2020-07-12 13:08:31,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@35f40a58)
2020-07-12 13:08:31,202 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47205ff3)
2020-07-12 13:08:31,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1cd2059a)
2020-07-12 13:08:31,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cac14a9)
2020-07-12 13:08:31,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@191f69ae)
2020-07-12 13:08:31,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c0562b9)
2020-07-12 13:08:31,330 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:08:31,334 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:08:31,335 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:08:31,337 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@243e040e)
2020-07-12 13:08:31,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c92d221)
2020-07-12 13:08:31,342 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7e817e28)
2020-07-12 13:08:31,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,344 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69ca3cae)
2020-07-12 13:08:31,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,345 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d004bed)
2020-07-12 13:08:31,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@675995b6)
2020-07-12 13:08:31,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:31,346 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@125cd74b)
2020-07-12 13:08:39,866 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 13:08:39,867 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:08:39,868 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:08:39,869 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@386fa462)
2020-07-12 13:10:06,269 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:06,280 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 13:10:06,282 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:06,289 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:06,296 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 13:10:06,299 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:06,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:06,364 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:10:06,366 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:06,367 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:06,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c221360)
2020-07-12 13:10:06,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:06,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c3a1ec5)
2020-07-12 13:10:06,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:06,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b35f69a)
2020-07-12 13:10:06,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:06,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b068ddc)
2020-07-12 13:10:06,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:06,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@373320cf)
2020-07-12 13:10:06,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:06,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b23ccda)
2020-07-12 13:10:06,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:06,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ff66602)
2020-07-12 13:10:09,017 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:09,019 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:10:09,020 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:09,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:09,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45b18a1b)
2020-07-12 13:10:09,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:09,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@358f07e7)
2020-07-12 13:10:09,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:09,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@666c765b)
2020-07-12 13:10:09,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:09,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cdbee15)
2020-07-12 13:10:09,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:09,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@57344c7)
2020-07-12 13:10:09,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:09,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@480edbb1)
2020-07-12 13:10:09,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:09,026 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4dd5a245)
2020-07-12 13:10:10,762 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:10,764 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:10:10,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:10,768 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b8759ec)
2020-07-12 13:10:10,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36d91d1d)
2020-07-12 13:10:10,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34acf65a)
2020-07-12 13:10:10,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@381ff124)
2020-07-12 13:10:10,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@395697f2)
2020-07-12 13:10:10,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@47194430)
2020-07-12 13:10:10,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@145464af)
2020-07-12 13:10:10,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:10,794 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:10:10,796 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:10,797 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,798 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6be29361)
2020-07-12 13:10:10,799 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,800 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10804f01)
2020-07-12 13:10:10,801 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78e722c7)
2020-07-12 13:10:10,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@676051ad)
2020-07-12 13:10:10,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1866afbb)
2020-07-12 13:10:10,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,807 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a0c03f1)
2020-07-12 13:10:10,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:10,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4bbce96d)
2020-07-12 13:10:25,305 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:25,307 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:10:25,308 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:25,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60eeeab2)
2020-07-12 13:10:25,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2cfdc75f)
2020-07-12 13:10:25,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e89bc98)
2020-07-12 13:10:25,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c47f4a8)
2020-07-12 13:10:25,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6beb3ae8)
2020-07-12 13:10:25,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29eecff5)
2020-07-12 13:10:25,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ad0cb2c)
2020-07-12 13:10:25,325 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 13:10:25,327 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 13:10:25,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 13:10:25,330 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32601f38)
2020-07-12 13:10:25,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18aca392)
2020-07-12 13:10:25,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27bbe3d2)
2020-07-12 13:10:25,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2524128e)
2020-07-12 13:10:25,338 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,339 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@170f50cd)
2020-07-12 13:10:25,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,340 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a42c18d)
2020-07-12 13:10:25,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 13:10:25,341 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@129f1a64)
2020-07-12 19:42:05,667 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:05,671 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:42:05,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:05,688 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:05,690 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:42:05,691 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:06,010 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:06,013 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:42:06,014 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:06,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,021 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6cc84608)
2020-07-12 19:42:06,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,022 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cb9f760)
2020-07-12 19:42:06,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ebda9e0)
2020-07-12 19:42:06,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45fc83d6)
2020-07-12 19:42:06,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6b2a6567)
2020-07-12 19:42:06,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28eb8d95)
2020-07-12 19:42:06,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,025 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bcad3c1)
2020-07-12 19:42:06,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:06,033 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:42:06,034 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:06,036 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@fbc4418)
2020-07-12 19:42:06,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,037 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11353cad)
2020-07-12 19:42:06,038 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,038 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20c29bc7)
2020-07-12 19:42:06,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,039 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21b57f65)
2020-07-12 19:42:06,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c4473cf)
2020-07-12 19:42:06,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74aceebe)
2020-07-12 19:42:06,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:06,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40844f4f)
2020-07-12 19:42:31,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:31,561 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:42:31,562 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:31,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45dbabd5)
2020-07-12 19:42:31,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20abd3ef)
2020-07-12 19:42:31,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b8de2e1)
2020-07-12 19:42:31,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a31216e)
2020-07-12 19:42:31,567 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22aca0fe)
2020-07-12 19:42:31,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,568 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c663bef)
2020-07-12 19:42:31,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,569 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68485068)
2020-07-12 19:42:31,588 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:31,592 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:42:31,593 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:31,594 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@379c2500)
2020-07-12 19:42:31,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e8636e8)
2020-07-12 19:42:31,595 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f5d8f9d)
2020-07-12 19:42:31,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,596 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e2e63a6)
2020-07-12 19:42:31,597 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,597 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38ccef46)
2020-07-12 19:42:31,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37f2bfc1)
2020-07-12 19:42:31,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:31,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e0efc5)
2020-07-12 19:42:44,623 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:44,625 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:42:44,628 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:44,638 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,638 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4c4e031d)
2020-07-12 19:42:44,638 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d0399e7)
2020-07-12 19:42:44,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@da89945)
2020-07-12 19:42:44,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15b689d2)
2020-07-12 19:42:44,639 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29dc2692)
2020-07-12 19:42:44,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48f15eef)
2020-07-12 19:42:44,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,640 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15a8405)
2020-07-12 19:42:44,647 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:44,649 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:42:44,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:44,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d425d6)
2020-07-12 19:42:44,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70938fae)
2020-07-12 19:42:44,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@909baf5)
2020-07-12 19:42:44,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@314cffd5)
2020-07-12 19:42:44,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@179096bf)
2020-07-12 19:42:44,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b12851c)
2020-07-12 19:42:44,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:44,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f884699)
2020-07-12 19:42:53,243 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:53,400 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 19:42:53,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 19:42:56,491 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:42:56,493 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:42:56,494 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:42:56,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:56,496 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f48b8c1)
2020-07-12 19:42:56,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:56,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45ba3dbe)
2020-07-12 19:42:56,497 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:56,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b6e55cd)
2020-07-12 19:42:56,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:56,498 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@32b4b8e8)
2020-07-12 19:42:56,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:56,499 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48c090cf)
2020-07-12 19:42:56,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:56,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c0303a4)
2020-07-12 19:42:56,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:42:56,500 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@554ae5d4)
2020-07-12 19:43:02,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:02,436 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:43:02,438 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:02,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,440 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ae4bb1f)
2020-07-12 19:43:02,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,441 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ce951b4)
2020-07-12 19:43:02,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,442 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76317ae3)
2020-07-12 19:43:02,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,443 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a0152bb)
2020-07-12 19:43:02,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@650226a7)
2020-07-12 19:43:02,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1310bf42)
2020-07-12 19:43:02,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e0b39a1)
2020-07-12 19:43:02,456 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:02,459 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:43:02,460 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:02,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@54b4f706)
2020-07-12 19:43:02,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b44b4bd)
2020-07-12 19:43:02,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14ee81e7)
2020-07-12 19:43:02,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1deca105)
2020-07-12 19:43:02,469 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,470 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e137979)
2020-07-12 19:43:02,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@706cc95a)
2020-07-12 19:43:02,471 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:02,472 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@106d8f09)
2020-07-12 19:43:46,326 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:46,330 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:43:46,332 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:46,436 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:46,443 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:43:46,445 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:50,972 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:50,974 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:43:50,975 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:50,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:50,976 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@659f12d8)
2020-07-12 19:43:50,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:50,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1bbae89)
2020-07-12 19:43:50,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:50,977 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60e01d48)
2020-07-12 19:43:50,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:50,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c7e653d)
2020-07-12 19:43:50,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:50,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71eab3b8)
2020-07-12 19:43:50,978 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:50,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d7984ea)
2020-07-12 19:43:50,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:50,979 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d93c650)
2020-07-12 19:43:50,996 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:51,001 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:43:51,003 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:51,005 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:51,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c38376c)
2020-07-12 19:43:51,006 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:51,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4621e2c4)
2020-07-12 19:43:51,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:51,007 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5dfff1f9)
2020-07-12 19:43:51,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:51,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@dfa9402)
2020-07-12 19:43:51,008 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:51,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30c44186)
2020-07-12 19:43:51,009 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:51,010 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79baa298)
2020-07-12 19:43:51,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:51,011 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b68f46f)
2020-07-12 19:43:54,877 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:54,880 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:43:54,882 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:54,884 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,885 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69c9aa30)
2020-07-12 19:43:54,886 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,887 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6069ead5)
2020-07-12 19:43:54,887 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,889 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31921244)
2020-07-12 19:43:54,889 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,890 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c328005)
2020-07-12 19:43:54,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,891 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@288e3399)
2020-07-12 19:43:54,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,892 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71e4b1f)
2020-07-12 19:43:54,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,893 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@263f698a)
2020-07-12 19:43:54,900 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:43:54,903 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:43:54,906 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:43:54,907 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,908 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43e81114)
2020-07-12 19:43:54,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,909 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@63b76880)
2020-07-12 19:43:54,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,910 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36796f4c)
2020-07-12 19:43:54,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,911 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@191d8453)
2020-07-12 19:43:54,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,912 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1afe46d5)
2020-07-12 19:43:54,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,913 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4255de62)
2020-07-12 19:43:54,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:43:54,914 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fabda6b)
2020-07-12 19:48:30,572 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:48:30,592 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:48:30,595 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:48:30,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:48:30,774 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:48:30,775 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:48:31,326 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:48:31,328 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:48:31,329 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:48:31,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d6e0d00)
2020-07-12 19:48:31,331 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@81cc438)
2020-07-12 19:48:31,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f030656)
2020-07-12 19:48:31,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23621f1a)
2020-07-12 19:48:31,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e19107b)
2020-07-12 19:48:31,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@304a2284)
2020-07-12 19:48:31,333 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,334 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74ca36d)
2020-07-12 19:48:31,454 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:48:31,457 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:48:31,458 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:48:31,459 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@628a7249)
2020-07-12 19:48:31,460 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2c2412a0)
2020-07-12 19:48:31,461 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b43e355)
2020-07-12 19:48:31,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f4a9252)
2020-07-12 19:48:31,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ee3adc8)
2020-07-12 19:48:31,464 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@525e05a6)
2020-07-12 19:48:31,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:31,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d31df3)
2020-07-12 19:48:39,284 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 19:48:39,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:48:39,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:48:39,287 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2eb2184)
2020-07-12 19:50:41,961 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:50:41,964 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:50:41,965 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:50:41,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:50:41,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2daa9a24)
2020-07-12 19:50:41,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:50:41,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8b428d)
2020-07-12 19:50:41,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:50:41,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@45e0ef73)
2020-07-12 19:50:41,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:50:41,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6df975cc)
2020-07-12 19:50:41,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:50:41,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@147bb9ed)
2020-07-12 19:50:41,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:50:41,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e3e1ec5)
2020-07-12 19:50:41,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:50:41,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c67fb06)
2020-07-12 19:55:06,798 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:55:06,815 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:55:06,816 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:55:06,871 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:55:06,874 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:55:06,875 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:55:12,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:55:12,307 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:55:12,308 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:55:12,310 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62d85e97)
2020-07-12 19:55:12,311 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d7a5d43)
2020-07-12 19:55:12,312 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6de81108)
2020-07-12 19:55:12,313 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1161c8f0)
2020-07-12 19:55:12,314 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@316d10ad)
2020-07-12 19:55:12,317 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e22d386)
2020-07-12 19:55:12,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@436fef1b)
2020-07-12 19:55:12,380 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:55:12,383 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:55:12,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:55:12,386 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@743285d9)
2020-07-12 19:55:12,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19571d60)
2020-07-12 19:55:12,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6341777)
2020-07-12 19:55:12,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c7f35e9)
2020-07-12 19:55:12,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c0379f2)
2020-07-12 19:55:12,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,392 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d9ec90f)
2020-07-12 19:55:12,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:12,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@bb7fc64)
2020-07-12 19:55:26,818 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 19:55:26,820 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:55:26,822 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:55:26,822 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34e5f651)
2020-07-12 19:56:04,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:56:04,503 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:56:04,504 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:56:04,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:04,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@586c018b)
2020-07-12 19:56:04,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:04,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5f5bba83)
2020-07-12 19:56:04,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:04,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@498231cb)
2020-07-12 19:56:04,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:04,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e79ef16)
2020-07-12 19:56:04,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:04,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36a1d70b)
2020-07-12 19:56:04,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:04,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@342cecfe)
2020-07-12 19:56:04,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:04,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c789fd9)
2020-07-12 19:56:28,168 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 19:56:28,171 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 19:56:57,278 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 19:56:57,279 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 19:56:57,280 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 19:56:57,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=, sellerName=, disclaimer=}}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@45471a7d)
2020-07-12 19:56:57,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(com.initializers.services.apiservices.model.item.ItemDetails@45471a7d, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 19:56:57,282 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, categoryId, subCategoryId, name, description, status, _class]
2020-07-12 19:56:57,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(com.initializers.services.apiservices.model.item.ItemDetails@45471a7d, Document{{_id=1, categoryId=14, subCategoryId=24, name=horlicks, description=Document{{itemProperties=Top Quality , sellerName=ITC, disclaimer=best for children }}, status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 19:56:57,284 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:56:57,285 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:56:57,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22632d8)
2020-07-12 19:56:57,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b6f61ca)
2020-07-12 19:56:57,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b3696a3)
2020-07-12 19:56:57,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@665ff34a)
2020-07-12 19:56:57,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@55dcadab)
2020-07-12 19:56:57,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,291 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@355de7eb)
2020-07-12 19:56:57,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,292 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a71ec6d)
2020-07-12 19:56:57,292 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=14}} for Document{{name=14}} fields.
2020-07-12 19:56:57,293 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{name=14}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 19:56:57,296 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, name=top product}})
2020-07-12 19:56:57,297 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, name=top product}}, com.initializers.services.apiservices.model.item.ItemCategory@5c811f5)
2020-07-12 19:56:57,297 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=24}} for Document{{name=24}} fields.
2020-07-12 19:56:57,299 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "24"}} fields: Document{{name=24}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 19:56:57,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=24, name=dailyneed}})
2020-07-12 19:56:57,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=24, name=dailyneed}}, com.initializers.services.apiservices.model.item.ItemSubCategory@1d606a9c)
2020-07-12 19:56:57,427 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:56:57,429 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:56:57,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:56:57,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,432 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d959a5d)
2020-07-12 19:56:57,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,433 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c886303)
2020-07-12 19:56:57,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ab152b5)
2020-07-12 19:56:57,435 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8a4c030)
2020-07-12 19:56:57,436 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1972e40b)
2020-07-12 19:56:57,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,437 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@265d0c5d)
2020-07-12 19:56:57,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:57,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d9c6d9)
2020-07-12 19:56:59,981 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:56:59,981 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 19:56:59,982 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:56:59,983 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 19:56:59,983 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:56:59,984 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:56:59,984 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cd689ce)
2020-07-12 19:57:14,619 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 19:57:14,620 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:57:14,621 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:57:14,624 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:57:14,624 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,624 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1e725086)
2020-07-12 19:57:14,625 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:57:14,626 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5ac36b96)
2020-07-12 19:57:14,627 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3936443b)
2020-07-12 19:57:14,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,628 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f65b8c8)
2020-07-12 19:57:14,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@238ad105)
2020-07-12 19:57:14,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,633 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62548139)
2020-07-12 19:57:14,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,634 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69c816d4)
2020-07-12 19:57:14,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:14,635 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bf940dd)
2020-07-12 19:57:58,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:57:58,532 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:57:58,533 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:57:58,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37ca3ca2)
2020-07-12 19:57:58,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52ebbfb8)
2020-07-12 19:57:58,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fa806a1)
2020-07-12 19:57:58,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f791291)
2020-07-12 19:57:58,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79b012f0)
2020-07-12 19:57:58,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76a96401)
2020-07-12 19:57:58,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@692be97b)
2020-07-12 19:57:58,560 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:57:58,564 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:57:58,565 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:57:58,643 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:57:58,646 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:57:58,649 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 19:57:58,650 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:57:58,650 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:57:58,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:57:58,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21d24f2)
2020-07-12 19:57:58,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3fa0f71c)
2020-07-12 19:57:58,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9c882dd)
2020-07-12 19:57:58,654 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,655 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37560d09)
2020-07-12 19:57:58,663 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c0795a5)
2020-07-12 19:57:58,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64a7812e)
2020-07-12 19:57:58,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:57:58,667 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29b4390d)
2020-07-12 19:58:02,576 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 19:58:02,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:58:02,576 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:58:02,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:02,578 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e70281)
2020-07-12 19:58:02,579 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 19:58:02,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:58:04,436 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 19:58:04,437 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:58:04,438 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 19:58:04,438 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,439 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ede3d10)
2020-07-12 19:58:04,441 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 19:58:04,442 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 19:58:04,444 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@100b54f2)
2020-07-12 19:58:04,445 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43734c9c)
2020-07-12 19:58:04,446 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@290a9ea7)
2020-07-12 19:58:04,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,447 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d8a0692)
2020-07-12 19:58:04,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@67ec6b15)
2020-07-12 19:58:04,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ea2ccd8)
2020-07-12 19:58:04,448 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 19:58:04,449 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4320820d)
2020-07-12 20:01:36,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:01:36,954 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:01:36,965 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:01:37,048 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:01:37,061 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:01:37,061 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:01:37,063 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:01:37,068 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:01:37,070 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:01:37,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,075 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2f7bc4c3)
2020-07-12 20:01:37,076 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,080 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@488f9c40)
2020-07-12 20:01:37,084 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,085 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10bcd36)
2020-07-12 20:01:37,086 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ad51785)
2020-07-12 20:01:37,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,095 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bf993c0)
2020-07-12 20:01:37,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,096 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f206963)
2020-07-12 20:01:37,097 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,100 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@301d6bcc)
2020-07-12 20:01:37,238 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:01:37,255 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:01:37,265 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:01:37,268 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@774fd886)
2020-07-12 20:01:37,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,282 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@643a2567)
2020-07-12 20:01:37,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a45d187)
2020-07-12 20:01:37,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3369d2c2)
2020-07-12 20:01:37,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3a6ba7c1)
2020-07-12 20:01:37,300 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@f4facf6)
2020-07-12 20:01:37,301 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:37,302 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b928d71)
2020-07-12 20:01:57,214 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:01:57,221 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:01:57,223 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:01:57,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ad4ec36)
2020-07-12 20:01:57,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f9e2cfd)
2020-07-12 20:01:57,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,226 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@908236f)
2020-07-12 20:01:57,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@255aeb03)
2020-07-12 20:01:57,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8c206c2)
2020-07-12 20:01:57,227 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16a53ae3)
2020-07-12 20:01:57,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e7e6003)
2020-07-12 20:01:57,277 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:01:57,280 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:01:57,280 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:01:57,281 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a3e8581)
2020-07-12 20:01:57,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b05101a)
2020-07-12 20:01:57,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56388357)
2020-07-12 20:01:57,285 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,286 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a1a432d)
2020-07-12 20:01:57,288 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1406cf62)
2020-07-12 20:01:57,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77e09838)
2020-07-12 20:01:57,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:01:57,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65d09fa8)
2020-07-12 20:02:00,794 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:02:00,794 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:02:00,795 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:02:00,796 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3ee3b26d)
2020-07-12 20:05:44,307 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:05:44,310 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:05:44,312 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:05:44,316 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:05:44,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d06e327)
2020-07-12 20:05:44,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:05:44,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69c33eae)
2020-07-12 20:05:44,319 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:05:44,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@456af729)
2020-07-12 20:05:44,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:05:44,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52f626e9)
2020-07-12 20:05:44,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:05:44,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6853e84b)
2020-07-12 20:05:44,322 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:05:44,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@18158da1)
2020-07-12 20:05:44,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:05:44,323 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@ad4f235)
2020-07-12 20:07:39,715 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=10}} for Document{{}} fields.
2020-07-12 20:07:39,730 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "10"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:39,730 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "10"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:07:39,731 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:39,732 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=10, available=Y}} for Document{{}} fields.
2020-07-12 20:07:39,732 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1299963d)
2020-07-12 20:07:39,733 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "10"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:41,641 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:07:41,642 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:41,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,644 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:07:41,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6690b303)
2020-07-12 20:07:41,646 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:07:41,647 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:41,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@249a945a)
2020-07-12 20:07:41,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@538c860c)
2020-07-12 20:07:41,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,650 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4d533efe)
2020-07-12 20:07:41,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30319b6c)
2020-07-12 20:07:41,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4079f174)
2020-07-12 20:07:41,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77f2b391)
2020-07-12 20:07:41,652 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:41,653 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2302c75f)
2020-07-12 20:07:54,716 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 20:07:54,716 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:07:54,717 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:54,718 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 20:07:54,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:54,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e0ea45e)
2020-07-12 20:07:54,719 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:56,526 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:07:56,527 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:56,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,529 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:07:56,529 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2db8dc1f)
2020-07-12 20:07:56,532 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:07:56,533 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:07:56,534 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2324e43f)
2020-07-12 20:07:56,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65c7d84d)
2020-07-12 20:07:56,535 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@264dcfcf)
2020-07-12 20:07:56,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,536 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ffa80bb)
2020-07-12 20:07:56,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b7b9667)
2020-07-12 20:07:56,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,537 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20a53cf5)
2020-07-12 20:07:56,538 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:07:56,538 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@685ebc99)
2020-07-12 20:09:31,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:31,552 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:09:31,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:31,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,559 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1219ebe5)
2020-07-12 20:09:31,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,560 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7be04305)
2020-07-12 20:09:31,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,561 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c7e336c)
2020-07-12 20:09:31,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,562 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3871b6a6)
2020-07-12 20:09:31,563 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,563 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@656a248e)
2020-07-12 20:09:31,564 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1c6bab4d)
2020-07-12 20:09:31,565 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,566 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@31a31eff)
2020-07-12 20:09:31,637 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:31,641 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:09:31,643 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:31,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9ced252)
2020-07-12 20:09:31,646 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d1dba02)
2020-07-12 20:09:31,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3da05247)
2020-07-12 20:09:31,664 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@64f54268)
2020-07-12 20:09:31,665 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1b5650e6)
2020-07-12 20:09:31,666 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,668 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b4b2424)
2020-07-12 20:09:31,673 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:31,674 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@74c67560)
2020-07-12 20:09:31,978 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:31,981 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:09:31,982 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:32,124 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:32,131 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:09:32,133 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:50,951 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:50,958 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:09:50,960 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:50,961 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:50,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@270cd092)
2020-07-12 20:09:50,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:50,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17e9eea4)
2020-07-12 20:09:50,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:50,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14765fe4)
2020-07-12 20:09:50,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:50,964 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8987066)
2020-07-12 20:09:50,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:50,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4951b9a7)
2020-07-12 20:09:50,965 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:50,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1195e2e7)
2020-07-12 20:09:50,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:50,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37ba164e)
2020-07-12 20:09:51,005 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:51,007 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:09:51,008 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:51,030 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:51,036 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:09:51,039 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:51,040 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:51,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@42a1979)
2020-07-12 20:09:51,041 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:51,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@a20b02)
2020-07-12 20:09:51,042 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:51,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e2cb05a)
2020-07-12 20:09:51,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:51,043 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@129a4dfe)
2020-07-12 20:09:51,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:51,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@462f6f05)
2020-07-12 20:09:51,044 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:51,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@564596d9)
2020-07-12 20:09:51,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:51,045 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@db0522b)
2020-07-12 20:09:51,078 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:51,089 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:09:51,091 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:55,703 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:55,707 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:09:55,709 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:55,711 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@eae76fe)
2020-07-12 20:09:55,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b779ee)
2020-07-12 20:09:55,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,712 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14da5e5f)
2020-07-12 20:09:55,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34377d93)
2020-07-12 20:09:55,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4953e46d)
2020-07-12 20:09:55,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77959ca0)
2020-07-12 20:09:55,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,715 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@317b0cab)
2020-07-12 20:09:55,766 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:09:55,768 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:09:55,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:09:55,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@566f2867)
2020-07-12 20:09:55,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4da7cd0b)
2020-07-12 20:09:55,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@794ddbdf)
2020-07-12 20:09:55,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,777 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@11cdf0b3)
2020-07-12 20:09:55,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e4edefd)
2020-07-12 20:09:55,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4df283aa)
2020-07-12 20:09:55,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:09:55,778 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a763ae8)
2020-07-12 20:10:07,667 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 20:10:07,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:10:07,668 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:10:07,670 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:07,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3aee8f92)
2020-07-12 20:10:07,676 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 20:10:07,677 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:10:09,827 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:10:09,828 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:10:09,829 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,830 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:10:09,830 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c971226)
2020-07-12 20:10:09,832 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:10:09,833 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:10:09,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14dfb78d)
2020-07-12 20:10:09,834 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3563ff27)
2020-07-12 20:10:09,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6e579120)
2020-07-12 20:10:09,835 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3f93bc96)
2020-07-12 20:10:09,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@56191736)
2020-07-12 20:10:09,836 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7ca94015)
2020-07-12 20:10:09,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:10:09,837 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2ea50031)
2020-07-12 20:11:38,786 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:11:38,791 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:11:38,792 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:11:38,886 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:11:38,888 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:11:38,890 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:11:38,956 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:11:38,963 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:11:38,964 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:11:38,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:38,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58de305a)
2020-07-12 20:11:38,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:38,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7931e8b9)
2020-07-12 20:11:38,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:38,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@17c48452)
2020-07-12 20:11:38,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:38,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@82f39f8)
2020-07-12 20:11:38,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:38,968 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@21da9447)
2020-07-12 20:11:38,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:38,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5758c4e5)
2020-07-12 20:11:38,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:38,969 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@648d2c48)
2020-07-12 20:11:39,046 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:11:39,048 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:11:39,050 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:11:39,052 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:39,053 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ca0e8ae)
2020-07-12 20:11:39,054 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:39,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@23baca54)
2020-07-12 20:11:39,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:39,055 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@146cad65)
2020-07-12 20:11:39,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:39,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3783331e)
2020-07-12 20:11:39,057 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:39,059 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7cad48d8)
2020-07-12 20:11:39,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:39,060 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@930d573)
2020-07-12 20:11:39,061 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:11:39,062 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@78c646b5)
2020-07-12 20:15:21,534 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:15:21,536 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:15:21,538 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:15:21,539 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a2dedc2)
2020-07-12 20:15:21,540 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@799a4c96)
2020-07-12 20:15:21,541 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19c2e539)
2020-07-12 20:15:21,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50c08347)
2020-07-12 20:15:21,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@65b62760)
2020-07-12 20:15:21,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ee339bc)
2020-07-12 20:15:21,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,546 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4086f674)
2020-07-12 20:15:21,635 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:15:21,640 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:15:21,641 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:15:21,643 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39cd6bec)
2020-07-12 20:15:21,644 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@337fe546)
2020-07-12 20:15:21,645 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,646 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4852e999)
2020-07-12 20:15:21,646 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@180ae066)
2020-07-12 20:15:21,647 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4a4a6a80)
2020-07-12 20:15:21,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,648 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d3e35a)
2020-07-12 20:15:21,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:21,649 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5912cc38)
2020-07-12 20:15:21,868 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:15:21,871 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:15:21,872 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:15:21,943 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:15:21,946 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:15:21,948 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:15:23,694 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:15:23,696 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:15:23,698 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:15:23,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16d147ad)
2020-07-12 20:15:23,699 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4ac785a5)
2020-07-12 20:15:23,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6025433b)
2020-07-12 20:15:23,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@10b09392)
2020-07-12 20:15:23,703 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,704 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cc04206)
2020-07-12 20:15:23,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7a5c0496)
2020-07-12 20:15:23,707 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,708 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30aaac7d)
2020-07-12 20:15:23,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:15:23,768 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:15:23,768 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:15:23,769 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d24d34d)
2020-07-12 20:15:23,770 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@69ced119)
2020-07-12 20:15:23,771 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,772 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@68ccb066)
2020-07-12 20:15:23,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@62f9bdb9)
2020-07-12 20:15:23,774 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59fcb410)
2020-07-12 20:15:23,775 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@46a5f02f)
2020-07-12 20:15:23,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:15:23,776 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4b67271d)
2020-07-12 20:21:02,785 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:21:02,790 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:21:02,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:21:02,863 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:21:02,866 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:21:02,866 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:21:08,340 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:21:08,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:21:08,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:21:08,343 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@13163949)
2020-07-12 20:21:10,608 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:21:10,609 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:21:10,614 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:21:10,614 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14888f98)
2020-07-12 20:21:10,627 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:21:10,628 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:21:10,629 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:21:10,630 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16d41eac)
2020-07-12 20:21:12,781 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:21:12,782 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:21:12,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:21:12,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38347315)
2020-07-12 20:21:12,838 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:21:12,839 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:21:12,840 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:21:12,841 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@30606f0c)
2020-07-12 20:22:14,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:22:14,181 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:22:14,183 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:22:14,186 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:14,187 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5cc57d6b)
2020-07-12 20:22:14,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:14,188 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b0c0383)
2020-07-12 20:22:14,189 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:14,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60d87303)
2020-07-12 20:22:14,190 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:14,191 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7acf2888)
2020-07-12 20:22:14,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:14,192 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@d963c9f)
2020-07-12 20:22:14,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:14,193 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@565d26b5)
2020-07-12 20:22:14,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:14,194 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@753e0716)
2020-07-12 20:22:22,453 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:22:22,454 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:22:22,455 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:22,456 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d5ec26e)
2020-07-12 20:22:24,231 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:22:24,233 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:22:24,236 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:22:24,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:24,237 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d63900d)
2020-07-12 20:22:24,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:24,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@694050f0)
2020-07-12 20:22:24,238 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:24,242 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6841250e)
2020-07-12 20:22:24,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:24,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49bbbbf8)
2020-07-12 20:22:24,243 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:24,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6879a93a)
2020-07-12 20:22:24,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:24,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d5b315)
2020-07-12 20:22:24,244 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:24,245 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@625d8f34)
2020-07-12 20:22:28,213 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "3"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:22:28,216 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=3, available=Y}} for Document{{}} fields.
2020-07-12 20:22:28,217 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "3"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:22:28,226 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=3}} for Document{{}} fields.
2020-07-12 20:22:28,227 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "3"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:22:28,228 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:28,229 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4051274e)
2020-07-12 20:22:31,711 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:22:31,712 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:22:31,713 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,714 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@fd3789c)
2020-07-12 20:22:31,725 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:22:31,727 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:22:31,728 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:22:31,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,730 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70eeb4ed)
2020-07-12 20:22:31,732 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4f3de89d)
2020-07-12 20:22:31,733 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,738 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@61beae3)
2020-07-12 20:22:31,739 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,740 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@25981142)
2020-07-12 20:22:31,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,741 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@20d490c0)
2020-07-12 20:22:31,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,742 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@8dfd47)
2020-07-12 20:22:31,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:22:31,743 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59185347)
2020-07-12 20:24:50,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:24:50,388 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:24:50,389 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:24:50,483 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:24:50,485 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:24:50,486 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:24:51,383 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:24:51,385 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:24:51,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:24:51,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e67e857)
2020-07-12 20:24:51,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2b1aca28)
2020-07-12 20:24:51,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@374b19c6)
2020-07-12 20:24:51,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cbf68d4)
2020-07-12 20:24:51,389 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d2b0444)
2020-07-12 20:24:51,390 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dca43)
2020-07-12 20:24:51,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,391 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6f7766af)
2020-07-12 20:24:51,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:24:51,505 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:24:51,506 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:24:51,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@626c540b)
2020-07-12 20:24:51,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79f0cad6)
2020-07-12 20:24:51,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3e3e5dc1)
2020-07-12 20:24:51,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7796dfaa)
2020-07-12 20:24:51,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77da015f)
2020-07-12 20:24:51,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@883d308)
2020-07-12 20:24:51,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:24:51,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@449f478c)
2020-07-12 20:25:21,288 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:25:21,296 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 20:25:21,297 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:25:21,298 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:21,299 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1603930f)
2020-07-12 20:25:21,298 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 20:25:21,303 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:25:26,357 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:25:26,360 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:25:26,361 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:25:26,362 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,363 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3c6f4b27)
2020-07-12 20:25:26,364 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:25:26,365 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:25:26,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,369 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@95b4e69)
2020-07-12 20:25:26,370 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@127a1f02)
2020-07-12 20:25:26,371 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,372 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@753f1233)
2020-07-12 20:25:26,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22a05923)
2020-07-12 20:25:26,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@71db7318)
2020-07-12 20:25:26,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@331bf02e)
2020-07-12 20:25:26,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:25:26,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3eb8d2f4)
2020-07-12 20:28:45,059 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:28:45,063 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:28:45,064 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:28:45,128 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:28:45,131 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:28:45,133 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:28:55,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:28:55,506 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:28:55,507 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:28:55,508 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,509 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6d8dea34)
2020-07-12 20:28:55,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@562d1815)
2020-07-12 20:28:55,512 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,513 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@229f461f)
2020-07-12 20:28:55,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75ecb7d3)
2020-07-12 20:28:55,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77322f10)
2020-07-12 20:28:55,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@49e17c53)
2020-07-12 20:28:55,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,517 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@119664ce)
2020-07-12 20:28:55,591 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:28:55,595 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:28:55,596 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:28:55,598 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,599 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@66b2c810)
2020-07-12 20:28:55,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a86bfdc)
2020-07-12 20:28:55,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@79afcee3)
2020-07-12 20:28:55,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4390afd5)
2020-07-12 20:28:55,601 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33921dff)
2020-07-12 20:28:55,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5c052c0e)
2020-07-12 20:28:55,602 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:55,603 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5bda29bb)
2020-07-12 20:28:59,612 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:28:59,614 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 20:28:59,615 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:28:59,615 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 20:28:59,616 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:28:59,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:28:59,616 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ef1fd41)
2020-07-12 20:29:01,541 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:29:01,542 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:01,543 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:01,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@249295f9)
2020-07-12 20:29:01,546 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:29:01,547 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:01,548 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1088d6d9)
2020-07-12 20:29:01,549 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@365a20d5)
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@29bc5f65)
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4acfa6fe)
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1ca78f60)
2020-07-12 20:29:01,550 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b9c58a9)
2020-07-12 20:29:01,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:01,551 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@309067c8)
2020-07-12 20:29:06,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "11"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:06,964 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=11}} for Document{{}} fields.
2020-07-12 20:29:06,965 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "11"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:06,965 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=11, available=Y}} for Document{{}} fields.
2020-07-12 20:29:06,966 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:06,966 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "11"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:06,967 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c667d1f)
2020-07-12 20:29:09,937 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:29:09,938 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:09,939 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:09,939 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,940 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@b1ee521)
2020-07-12 20:29:09,941 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:29:09,942 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:09,943 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4db00e3d)
2020-07-12 20:29:09,944 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3132be98)
2020-07-12 20:29:09,945 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@27c3182)
2020-07-12 20:29:09,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3b4ca3c)
2020-07-12 20:29:09,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4e38fd91)
2020-07-12 20:29:09,946 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6a5a5cb0)
2020-07-12 20:29:09,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:09,947 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@9498058)
2020-07-12 20:29:13,260 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=12}} for Document{{}} fields.
2020-07-12 20:29:13,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "12"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:13,261 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "12"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:13,262 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:13,263 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=12, available=Y}} for Document{{}} fields.
2020-07-12 20:29:13,263 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1df2cb12)
2020-07-12 20:29:13,263 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "12"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:16,371 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:29:16,372 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:16,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34180e34)
2020-07-12 20:29:16,374 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:16,377 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:29:16,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:16,379 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1d599ba1)
2020-07-12 20:29:16,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3bc83cbb)
2020-07-12 20:29:16,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6c3a6245)
2020-07-12 20:29:16,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4bdb873d)
2020-07-12 20:29:16,382 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1a0e8974)
2020-07-12 20:29:16,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,383 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@60d9536a)
2020-07-12 20:29:16,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:16,384 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5fce3d7e)
2020-07-12 20:29:20,395 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "9"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:20,396 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=9}} for Document{{}} fields.
2020-07-12 20:29:20,397 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=9, available=Y}} for Document{{}} fields.
2020-07-12 20:29:20,397 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "9"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:20,398 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "9"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:20,398 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:20,399 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@75fcf72)
2020-07-12 20:29:22,648 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=1}} for Document{{}} fields.
2020-07-12 20:29:22,649 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "1"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:22,651 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "1"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:22,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,651 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7d04ad01)
2020-07-12 20:29:22,653 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=1, available=Y}} for Document{{}} fields.
2020-07-12 20:29:22,654 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "1"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:22,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,656 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=1, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@22afe86e)
2020-07-12 20:29:22,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=3, itemId=1, actualPrice=200.0, discount=20, discountPrice=160.0, value=5, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@687746a)
2020-07-12 20:29:22,657 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=9, itemId=1, actualPrice=200.0, discount=2, discountPrice=196.0, value=500, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@105f73b9)
2020-07-12 20:29:22,658 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=10, itemId=1, actualPrice=200.0, discount=30, discountPrice=140.0, value=250, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4809527f)
2020-07-12 20:29:22,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=11, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=300, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@15b83f88)
2020-07-12 20:29:22,659 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=12, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=350, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@28a12d71)
2020-07-12 20:29:22,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:29:22,660 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=13, itemId=1, actualPrice=200.0, discount=3, discountPrice=194.0, value=380, unit=Grms, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@43884167)
2020-07-12 20:29:25,302 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:25,377 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 20:29:25,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 20:29:33,495 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "8"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:33,497 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=8, available=Y}} for Document{{}} fields.
2020-07-12 20:29:33,498 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "8"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:37,791 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:37,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 20:29:37,842 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 20:29:46,126 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "24"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:46,128 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=24, available=Y}} for Document{{}} fields.
2020-07-12 20:29:46,128 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "24"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:49,815 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:49,870 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 20:29:49,871 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 20:29:54,564 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "7"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:54,566 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=7, available=Y}} for Document{{}} fields.
2020-07-12 20:29:54,567 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "7"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:29:59,311 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$project" : { "_id" : 1, "name" : 1, "imageLinks" : 1, "status" : 1, "subCategoryId" : "$join_subcat.name", "categoryId" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:29:59,352 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_category
2020-07-12 20:29:59,356 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 20:30:06,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:30:06,511 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 20:30:06,512 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:30:06,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:30:06,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7f443dd3)
2020-07-12 20:30:10,771 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:30:10,771 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:30:10,772 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:30:10,773 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-07-12 20:30:10,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:30:10,773 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@334e18d)
2020-07-12 20:30:10,774 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:30:12,960 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 20:30:12,961 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:30:12,962 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:30:12,963 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@36a573e8)
2020-07-12 20:30:12,963 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:30:12,968 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 20:30:12,969 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:30:12,970 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:30:12,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d58a708)
2020-07-12 20:30:57,715 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 4600 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:30:57,716 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:30:57,716 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:30:59,059 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:30:59,061 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:30:59,077 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:30:59,078 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:30:59,079 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:30:59,079 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:30:59,079 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:30:59,079 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:30:59,080 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:30:59,080 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:30:59,080 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:30:59,080 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:30:59,080 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:30:59,081 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:30:59,081 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:30:59,081 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:30:59,081 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:30:59,156 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:30:59,156 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:30:59,172 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 110ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:31:00,568 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:31:00,568 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:31:00,689 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:31:00,690 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:31:00,698 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 20:31:00,699 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 20:31:00,700 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 20:31:00,701 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 20:31:00,702 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 20:31:00,702 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 20:31:00,703 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 20:31:00,703 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 20:31:00,704 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 20:31:00,704 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 20:31:00,704 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 20:31:00,704 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 20:31:00,705 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 20:31:00,705 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 20:31:00,705 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 20:31:00,706 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 20:31:00,707 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 20:31:00,708 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 20:31:00,709 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 20:31:00,710 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 20:31:00,711 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 20:31:07,428 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 20:31:07,439 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 20:31:07,455 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 20:31:07,468 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 20:31:07,480 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 20:31:07,493 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 20:31:07,501 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 20:31:07,516 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 20:31:07,564 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 20:31:07,569 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 20:31:07,582 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 20:31:07,592 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 20:31:07,601 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 20:31:07,611 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 20:31:07,622 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 20:31:07,629 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 20:31:07,643 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 20:31:07,652 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 20:31:07,669 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 20:31:07,683 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 20:31:07,688 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 20:31:07,729 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 20:31:07,758 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 20:31:07,768 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 20:31:07,829 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 20:31:07,839 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 20:31:07,852 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 20:31:07,860 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 20:31:07,990 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 20:31:07,996 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:31:07,997 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 20:31:07,997 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:31:08,070 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 20:31:08,078 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 20:31:08,550 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 20:31:08,560 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 20:31:08,563 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 20:31:08,789 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 11.188 seconds (JVM running for 12517.659)
2020-07-12 20:32:47,372 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 4600 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:32:47,372 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:32:47,372 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:32:48,258 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:32:48,259 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:32:48,268 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:32:48,268 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:32:48,269 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:32:48,270 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:32:48,270 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:32:48,270 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:32:48,270 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:32:48,270 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:32:48,306 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:32:48,307 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:32:48,319 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 59ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:32:52,744 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 13812 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:32:52,771 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:32:52,772 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:32:55,049 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:32:55,077 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:32:55,102 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:32:55,103 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:32:55,104 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:32:55,104 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:32:55,105 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:32:55,105 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:32:55,106 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:32:55,106 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:32:55,106 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:32:55,107 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:32:55,107 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:32:55,108 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:32:55,108 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:32:55,109 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:32:55,109 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:32:55,257 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:32:55,259 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:32:55,280 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 201ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:32:58,547 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:32:58,549 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:32:58,920 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:32:58,922 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:32:59,034 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 20:32:59,056 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 20:32:59,057 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 20:32:59,059 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 20:32:59,060 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 20:32:59,061 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 20:32:59,062 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 20:32:59,063 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 20:32:59,064 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 20:32:59,065 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 20:32:59,067 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 20:32:59,069 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 20:32:59,070 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 20:32:59,071 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 20:32:59,072 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 20:32:59,072 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 20:32:59,074 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 20:32:59,077 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 20:32:59,079 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 20:32:59,080 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 20:32:59,082 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 20:33:03,729 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 20:33:03,942 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 20:33:03,967 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 20:33:03,989 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 20:33:04,017 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 20:33:04,050 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 20:33:04,069 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 20:33:04,095 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 20:33:04,343 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 20:33:04,354 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 20:33:04,375 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 20:33:04,392 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 20:33:04,403 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 20:33:04,418 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 20:33:04,429 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 20:33:04,437 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 20:33:04,466 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 20:33:04,479 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 20:33:04,493 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 20:33:04,509 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 20:33:04,519 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 20:33:04,531 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 20:33:04,542 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 20:33:04,550 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 20:33:04,585 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 20:33:04,595 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 20:33:04,611 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 20:33:04,620 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 20:33:04,704 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 20:33:04,706 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:33:04,707 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 20:33:04,707 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:33:04,892 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 20:33:04,899 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 20:33:06,814 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 20:33:06,849 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 20:33:06,853 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 20:33:07,182 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 15.883 seconds (JVM running for 17.113)
2020-07-12 20:33:44,144 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:33:44,299 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 20:33:44,372 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 20:33:44,390 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:33:44,407 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:33:44,423 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@4cc2d52c)
2020-07-12 20:33:44,557 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:33:44,567 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 20:33:44,569 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:33:44,572 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:33:44,573 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73d300b7)
2020-07-12 20:33:47,985 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:33:47,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:33:47,990 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "14"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:33:48,000 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:33:47,998 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=14, available=Y}} for Document{{}} fields.
2020-07-12 20:33:48,004 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@70ee2921)
2020-07-12 20:33:48,005 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "14"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:35:36,244 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:35:36,265 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:35:36,266 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:35:36,341 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:35:36,352 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:35:36,354 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:35:36,725 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:35:36,727 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:35:36,729 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:35:36,731 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2fa8fdce)
2020-07-12 20:35:36,782 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:35:36,784 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:35:36,787 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:35:36,788 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@567445c6)
2020-07-12 20:37:59,098 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 13812 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:37:59,099 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:37:59,099 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:38:04,093 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 14470 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:38:04,103 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:38:04,104 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:38:06,589 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:38:06,618 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:38:06,652 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:38:06,653 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:38:06,654 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:38:06,655 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:38:06,655 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:38:06,656 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:38:06,657 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:38:06,658 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:38:06,658 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:38:06,659 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:38:06,660 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:38:06,660 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:38:06,661 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:38:06,662 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:38:06,662 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:38:06,855 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:38:06,857 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:38:06,883 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 263ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:38:10,581 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:38:10,582 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:38:10,995 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:38:10,997 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:38:11,094 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 20:38:11,107 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 20:38:11,108 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 20:38:11,109 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 20:38:11,112 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 20:38:11,114 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 20:38:11,116 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 20:38:11,118 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 20:38:11,119 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 20:38:11,120 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 20:38:11,121 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 20:38:11,121 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 20:38:11,123 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 20:38:11,124 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 20:38:11,125 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 20:38:11,126 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 20:38:11,126 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 20:38:11,127 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 20:38:11,129 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 20:38:11,129 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 20:38:11,131 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 20:38:15,939 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 20:38:16,068 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 20:38:16,087 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 20:38:16,109 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 20:38:16,126 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 20:38:16,142 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 20:38:16,153 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 20:38:16,170 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 20:38:16,392 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 20:38:16,400 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 20:38:16,421 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 20:38:16,437 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 20:38:16,449 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 20:38:16,461 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 20:38:16,473 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 20:38:16,480 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 20:38:16,497 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 20:38:16,510 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 20:38:16,525 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 20:38:16,541 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 20:38:16,550 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 20:38:16,563 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 20:38:16,574 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 20:38:16,582 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 20:38:16,610 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 20:38:16,619 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 20:38:16,629 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 20:38:16,637 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 20:38:16,702 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 20:38:16,705 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:38:16,706 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 20:38:16,706 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:38:16,867 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 20:38:16,874 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 20:38:18,249 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 20:38:18,280 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 20:38:18,287 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 20:38:18,531 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 16.022 seconds (JVM running for 17.422)
2020-07-12 20:39:59,726 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:39:59,955 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-2] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 20:40:00,058 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:40:00,109 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:40:00,248 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 20:40:00,272 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 20:40:00,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:40:01,228 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:40:01,232 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:40:01,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:40:01,315 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1abd07c9)
2020-07-12 20:40:01,369 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:40:01,384 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:40:01,388 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:40:01,393 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@77551ae6)
2020-07-12 20:40:15,487 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:40:15,489 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:40:15,506 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:40:15,507 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73c10dd0)
2020-07-12 20:40:15,518 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 20:40:15,520 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 20:40:15,525 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 20:40:15,526 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@33953f24)
2020-07-12 20:43:09,005 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 14470 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:43:09,006 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:43:09,006 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:43:09,825 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:43:09,827 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:43:09,838 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:43:09,839 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:43:09,840 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:43:09,840 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:43:09,840 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:43:09,841 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:43:09,841 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:43:09,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:43:09,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:43:09,842 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:43:09,843 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:43:09,843 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:43:09,844 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:43:09,844 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:43:09,845 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:43:09,909 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:43:09,909 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:43:09,910 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 82ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:43:10,682 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:43:10,684 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:43:10,835 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:43:10,836 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:43:10,842 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 20:43:10,843 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 20:43:10,844 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 20:43:10,844 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 20:43:10,845 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 20:43:10,845 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 20:43:10,846 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 20:43:10,846 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 20:43:10,847 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 20:43:10,848 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 20:43:10,850 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 20:43:10,851 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 20:43:10,852 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 20:43:10,853 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 20:43:10,854 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 20:43:10,855 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 20:43:10,856 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 20:43:10,857 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 20:43:10,858 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 20:43:10,868 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 20:43:10,869 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 20:43:11,019 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 20:43:11,043 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 20:43:11,058 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 20:43:11,073 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 20:43:11,085 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 20:43:11,097 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 20:43:11,104 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 20:43:11,118 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 20:43:11,168 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 20:43:11,175 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 20:43:11,194 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 20:43:11,205 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 20:43:11,217 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 20:43:11,227 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 20:43:11,237 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 20:43:11,247 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 20:43:11,271 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 20:43:11,288 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 20:43:11,304 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 20:43:11,314 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 20:43:11,320 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 20:43:11,334 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 20:43:11,342 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 20:43:11,352 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 20:43:11,408 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 20:43:11,435 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 20:43:11,447 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 20:43:11,454 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 20:43:11,518 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 20:43:11,522 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:43:11,522 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 20:43:11,522 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:43:11,554 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 20:43:11,559 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 20:43:11,875 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 20:43:11,887 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 20:43:11,890 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 20:43:12,065 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 3.121 seconds (JVM running for 310.955)
2020-07-12 20:46:32,953 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 14470 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:46:32,954 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:46:32,954 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:46:33,642 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:46:33,643 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:46:33,654 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:46:33,654 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:46:33,655 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:46:33,655 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:46:33,656 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:46:33,656 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:46:33,656 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:46:33,657 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:46:33,657 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:46:33,657 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:46:33,658 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:46:33,658 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:46:33,658 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:46:33,659 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:46:33,659 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:46:33,696 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:46:33,697 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:46:33,710 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 65ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:46:34,201 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:46:34,201 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:46:34,313 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:46:34,316 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:46:34,322 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 20:46:34,323 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 20:46:34,324 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 20:46:34,325 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 20:46:34,326 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 20:46:34,326 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 20:46:34,327 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 20:46:34,328 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 20:46:34,329 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 20:46:34,329 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 20:46:34,330 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 20:46:34,330 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 20:46:34,331 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 20:46:34,332 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 20:46:34,333 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 20:46:34,334 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 20:46:34,334 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 20:46:34,336 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 20:46:34,336 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 20:46:34,337 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 20:46:34,338 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 20:46:44,455 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 20:46:44,464 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 20:46:44,474 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 20:46:44,485 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 20:46:44,492 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 20:46:44,500 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 20:46:44,505 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 20:46:44,514 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 20:46:44,540 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 20:46:44,546 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 20:46:44,559 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 20:46:44,569 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 20:46:44,582 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 20:46:44,591 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 20:46:44,600 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 20:46:44,607 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 20:46:44,620 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 20:46:44,629 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 20:46:44,640 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 20:46:44,648 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 20:46:44,653 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 20:46:44,661 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 20:46:44,669 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 20:46:44,730 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 20:46:44,755 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 20:46:44,763 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 20:46:44,774 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 20:46:44,781 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 20:46:44,854 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 20:46:44,857 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:46:44,858 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 20:46:44,858 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:46:44,897 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 20:46:44,904 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 20:46:45,237 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 20:46:45,249 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 20:46:45,255 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 20:46:45,360 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 12.461 seconds (JVM running for 524.251)
2020-07-12 20:57:35,762 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 14470 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:57:35,763 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:57:35,763 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:57:36,661 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:57:36,662 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:57:36,680 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:57:36,681 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:57:36,681 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:57:36,683 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:57:36,684 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:57:36,684 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:57:36,684 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:57:36,685 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:57:36,685 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:57:36,685 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:57:36,685 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:57:36,686 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:57:36,686 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:57:36,686 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:57:36,687 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:57:36,743 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:57:36,746 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:57:36,748 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 85ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:57:37,227 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:57:37,227 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:57:37,359 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:57:37,359 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:57:37,370 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 20:57:37,371 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 20:57:37,372 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 20:57:37,372 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 20:57:37,372 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 20:57:37,373 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 20:57:37,373 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 20:57:37,375 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 20:57:37,377 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 20:57:37,378 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 20:57:37,379 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 20:57:37,380 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 20:57:37,381 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 20:57:37,382 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 20:57:37,383 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 20:57:37,383 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 20:57:37,384 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 20:57:37,385 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 20:57:37,385 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 20:57:37,386 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 20:57:37,386 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 20:57:52,506 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 20:57:52,512 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 20:57:52,518 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 20:57:52,525 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 20:57:52,531 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 20:57:52,540 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 20:57:52,544 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 20:57:52,552 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 20:57:52,579 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 20:57:52,587 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 20:57:52,602 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 20:57:52,613 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 20:57:52,623 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 20:57:52,632 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 20:57:52,641 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 20:57:52,649 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 20:57:52,679 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 20:57:52,726 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 20:57:52,740 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 20:57:52,755 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 20:57:52,763 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 20:57:52,779 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 20:57:52,788 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 20:57:52,799 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 20:57:52,839 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 20:57:52,854 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 20:57:52,870 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 20:57:52,891 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 20:57:53,041 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 20:57:53,043 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:57:53,044 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 20:57:53,044 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:57:53,080 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 20:57:53,090 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 20:57:53,462 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 20:57:53,475 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 20:57:53,478 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 20:57:53,602 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 17.897 seconds (JVM running for 1192.492)
2020-07-12 20:59:46,904 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 14470 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 20:59:46,905 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 20:59:46,905 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 20:59:47,429 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 20:59:47,430 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 20:59:47,436 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 20:59:47,437 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 20:59:47,437 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 20:59:47,437 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 20:59:47,437 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 20:59:47,438 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 20:59:47,438 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 20:59:47,438 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 20:59:47,439 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 20:59:47,439 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 20:59:47,439 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 20:59:47,440 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 20:59:47,440 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 20:59:47,440 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 20:59:47,441 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 20:59:47,481 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 20:59:47,481 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 20:59:47,485 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 54ms. Found 15 MongoDB repository interfaces.
2020-07-12 20:59:47,945 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:59:47,945 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:59:48,076 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:59:48,077 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 20:59:48,082 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 20:59:48,083 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 20:59:48,083 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 20:59:48,084 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 20:59:48,085 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 20:59:48,085 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 20:59:48,086 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 20:59:48,086 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 20:59:48,086 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 20:59:48,086 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 20:59:48,087 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 20:59:48,087 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 20:59:48,087 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 20:59:48,088 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 20:59:48,088 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 20:59:48,089 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 20:59:48,091 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 20:59:48,091 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 20:59:48,092 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 20:59:48,093 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 20:59:48,093 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 20:59:55,940 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 20:59:55,947 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 20:59:55,956 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 20:59:55,966 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 20:59:55,973 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 20:59:56,006 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 20:59:56,010 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 20:59:56,019 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 20:59:56,048 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 20:59:56,053 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 20:59:56,064 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 20:59:56,070 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 20:59:56,077 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 20:59:56,084 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 20:59:56,092 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 20:59:56,099 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 20:59:56,112 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 20:59:56,121 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 20:59:56,132 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 20:59:56,141 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 20:59:56,145 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 20:59:56,153 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 20:59:56,163 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 20:59:56,171 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 20:59:56,195 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 20:59:56,203 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 20:59:56,217 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 20:59:56,224 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 20:59:56,303 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 20:59:56,306 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:59:56,306 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 20:59:56,307 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 20:59:56,342 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 20:59:56,348 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 20:59:56,656 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 20:59:56,664 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 20:59:56,667 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 20:59:56,770 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 9.922 seconds (JVM running for 1315.66)
2020-07-12 21:00:56,827 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 21:00:56,850 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 21:00:56,860 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 21:00:56,894 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@631f559d)
2020-07-12 21:00:56,949 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=14}} for Document{{}} fields.
2020-07-12 21:00:56,959 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 21:00:56,971 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 21:00:56,972 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@19a933e7)
2020-07-12 22:05:49,887 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 14470 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 22:05:49,887 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 22:05:49,887 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 22:05:50,507 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 22:05:50,510 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 22:05:50,529 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 22:05:50,530 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 22:05:50,531 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 22:05:50,531 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 22:05:50,532 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 22:05:50,532 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 22:05:50,532 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 22:05:50,532 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 22:05:50,533 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 22:05:50,533 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 22:05:50,533 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 22:05:50,533 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 22:05:50,539 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 22:05:50,539 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 22:05:50,539 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 22:05:50,583 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 22:05:50,583 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 22:05:50,593 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 82ms. Found 15 MongoDB repository interfaces.
2020-07-12 22:05:52,300 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:05:52,301 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:05:52,407 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:05:52,408 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:05:52,414 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 22:05:52,415 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 22:05:52,416 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 22:05:52,416 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 22:05:52,416 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 22:05:52,417 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 22:05:52,417 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 22:05:52,417 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 22:05:52,418 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 22:05:52,418 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 22:05:52,418 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 22:05:52,419 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 22:05:52,419 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 22:05:52,419 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 22:05:52,419 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 22:05:52,420 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 22:05:52,420 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 22:05:52,421 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 22:05:52,421 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 22:05:52,422 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 22:05:52,422 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 22:05:56,571 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 22:05:56,578 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 22:05:56,588 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 22:05:56,602 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 22:05:56,611 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 22:05:56,652 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 22:05:56,659 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 22:05:56,672 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 22:05:56,710 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 22:05:56,716 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 22:05:56,729 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 22:05:56,737 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 22:05:56,743 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 22:05:56,749 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 22:05:56,757 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 22:05:56,764 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 22:05:56,784 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 22:05:56,799 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 22:05:56,812 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 22:05:56,823 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 22:05:56,828 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 22:05:56,843 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 22:05:56,852 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 22:05:56,869 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 22:05:56,899 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 22:05:56,904 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 22:05:56,912 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 22:05:56,919 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 22:05:56,984 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 22:05:56,986 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 22:05:56,986 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 22:05:56,986 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 22:05:57,027 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 22:05:57,034 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 22:05:57,348 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 22:05:57,356 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 22:05:57,357 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 22:05:57,422 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 7.592 seconds (JVM running for 5276.312)
2020-07-12 22:06:15,151 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ApiservicesApplication on karthik-HP-Notebook with PID 14470 (/home/karthik/git/Thavare_daily/apiservices/target/classes started by karthik in /home/karthik/git/Thavare_daily/apiservices)
2020-07-12 22:06:15,152 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-07-12 22:06:15,153 INFO org.springframework.boot.SpringApplication [restartedMain] The following profiles are active: dev
2020-07-12 22:06:15,624 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-07-12 22:06:15,625 DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Scanning for MongoDB repositories in packages com.initializers.services.apiservices.
2020-07-12 22:06:15,632 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/AddressRepo.class]
2020-07-12 22:06:15,633 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemAvailabilityRepo.class]
2020-07-12 22:06:15,633 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemCategoryRepo.class]
2020-07-12 22:06:15,633 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemDetailsRepo.class]
2020-07-12 22:06:15,634 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/ItemSubCategoryRepo.class]
2020-07-12 22:06:15,634 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferConfigurationDBRepo.class]
2020-07-12 22:06:15,634 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/OfferRepo.class]
2020-07-12 22:06:15,634 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TopDealsRepo.class]
2020-07-12 22:06:15,634 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/TransientUserDetailsRepo.class]
2020-07-12 22:06:15,635 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserCartRepo.class]
2020-07-12 22:06:15,636 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserDetailsRepo.class]
2020-07-12 22:06:15,636 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOTPRepo.class]
2020-07-12 22:06:15,636 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserOrderSetRepo.class]
2020-07-12 22:06:15,636 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserReviewRepo.class]
2020-07-12 22:06:15,636 DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider [restartedMain] Identified candidate component class: file [/home/karthik/git/Thavare_daily/apiservices/target/classes/com/initializers/services/apiservices/repo/UserWishlistRepo.class]
2020-07-12 22:06:15,668 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment implementation: itemCategoryCustomRepoImpl com.initializers.services.apiservices.repo.Impl.ItemCategoryCustomRepoImpl
2020-07-12 22:06:15,669 DEBUG org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder [restartedMain] Registering repository fragment: itemCategoryCustomRepoImplFragment
2020-07-12 22:06:15,678 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 52ms. Found 15 MongoDB repository interfaces.
2020-07-12 22:06:16,066 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:06:16,067 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:06:16,149 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:06:16,150 DEBUG org.springframework.data.convert.CustomConversions [restartedMain] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2020-07-12 22:06:16,153 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Offer for index information.
2020-07-12 22:06:16,154 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OrderStatus for index information.
2020-07-12 22:06:16,154 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemAvailability for index information.
2020-07-12 22:06:16,155 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart$CompositeKey for index information.
2020-07-12 22:06:16,155 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrder for index information.
2020-07-12 22:06:16,155 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOTP for index information.
2020-07-12 22:06:16,156 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview$CompositeKey for index information.
2020-07-12 22:06:16,156 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemSubCategory for index information.
2020-07-12 22:06:16,156 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserOrderSet for index information.
2020-07-12 22:06:16,157 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.Address for index information.
2020-07-12 22:06:16,158 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.OfferConfigurationDB for index information.
2020-07-12 22:06:16,158 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetails for index information.
2020-07-12 22:06:16,159 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemDescription for index information.
2020-07-12 22:06:16,159 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserCart for index information.
2020-07-12 22:06:16,159 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserReview for index information.
2020-07-12 22:06:16,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TransientUserDetails for index information.
2020-07-12 22:06:16,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.DatabaseSequence for index information.
2020-07-12 22:06:16,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.TopDeals for index information.
2020-07-12 22:06:16,160 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.item.ItemCategory for index information.
2020-07-12 22:06:16,161 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserWishlist for index information.
2020-07-12 22:06:16,161 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Analyzing class class com.initializers.services.apiservices.model.UserDetails for index information.
2020-07-12 22:06:33,074 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo…
2020-07-12 22:06:33,081 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemCategoryRepo.
2020-07-12 22:06:33,087 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo…
2020-07-12 22:06:33,093 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemSubCategoryRepo.
2020-07-12 22:06:33,099 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo…
2020-07-12 22:06:33,128 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemAvailabilityRepo.
2020-07-12 22:06:33,131 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo…
2020-07-12 22:06:33,138 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.ItemDetailsRepo.
2020-07-12 22:06:33,158 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TopDealsRepo…
2020-07-12 22:06:33,163 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TopDealsRepo.
2020-07-12 22:06:33,172 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo…
2020-07-12 22:06:33,180 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserDetailsRepo.
2020-07-12 22:06:33,185 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo…
2020-07-12 22:06:33,191 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.TransientUserDetailsRepo.
2020-07-12 22:06:33,196 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOTPRepo…
2020-07-12 22:06:33,203 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOTPRepo.
2020-07-12 22:06:33,214 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.AddressRepo…
2020-07-12 22:06:33,222 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.AddressRepo.
2020-07-12 22:06:33,229 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserCartRepo…
2020-07-12 22:06:33,234 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserCartRepo.
2020-07-12 22:06:33,237 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo…
2020-07-12 22:06:33,245 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserOrderSetRepo.
2020-07-12 22:06:33,252 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo…
2020-07-12 22:06:33,259 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferConfigurationDBRepo.
2020-07-12 22:06:33,305 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserReviewRepo…
2020-07-12 22:06:33,314 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserReviewRepo.
2020-07-12 22:06:33,325 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo…
2020-07-12 22:06:33,337 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.UserWishlistRepo.
2020-07-12 22:06:33,433 INFO com.initializers.services.apiservices.others.ApplicationProperties [restartedMain] app running in dev environment
2020-07-12 22:06:33,435 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 22:06:33,435 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] Spring Data REST HAL Browser is deprecated! Prefer the HAL Explorer (artifactId: spring-data-rest-hal-explorer)!
2020-07-12 22:06:33,436 WARN org.springframework.data.rest.webmvc.halbrowser.HalBrowser [restartedMain] ---
2020-07-12 22:06:33,484 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Initializing repository instance for com.initializers.services.apiservices.repo.OfferRepo…
2020-07-12 22:06:33,491 DEBUG org.springframework.data.repository.core.support.RepositoryFactorySupport [restartedMain] Finished creation of repository instance for com.initializers.services.apiservices.repo.OfferRepo.
2020-07-12 22:06:33,837 DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [restartedMain] ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-07-12 22:06:33,850 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 27 mappings in <unknown>
2020-07-12 22:06:33,852 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [restartedMain] 7 mappings in <unknown>
2020-07-12 22:06:33,929 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ApiservicesApplication in 18.821 seconds (JVM running for 5312.819)
2020-07-12 22:06:41,847 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:06:41,866 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-1] Analyzing class class com.initializers.services.apiservices.model.item.ItemDetailsList for index information.
2020-07-12 22:06:42,049 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:06:42,051 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:06:42,056 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:06:42,077 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@600b22be)
2020-07-12 22:06:42,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:06:42,111 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:06:42,113 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:06:42,119 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:06:42,120 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@209313ed)
2020-07-12 22:07:00,658 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:07:00,664 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:07:00,664 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:07:00,665 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:00,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:00,671 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:00,673 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@888c42f)
2020-07-12 22:07:00,674 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:00,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@58d5ce7a)
2020-07-12 22:07:00,765 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 22:07:00,777 DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [http-nio-8080-exec-5] Analyzing class class com.initializers.services.apiservices.others.Suggestions for index information.
2020-07-12 22:07:00,793 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:07:00,802 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:07:00,804 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:00,808 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:00,821 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52b8badd)
2020-07-12 22:07:44,204 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:07:44,205 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 22:07:44,206 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 22:07:44,220 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@5eb0135a)
2020-07-12 22:07:44,221 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:07:44,222 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:44,224 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,225 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1895ce81)
2020-07-12 22:07:44,226 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:07:44,228 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:44,232 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,233 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6fa48ae3)
2020-07-12 22:07:44,250 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] findAndModify using query: { "_id" : "item_availability_sequence"} fields: Document{{}} sort: null for class: class com.initializers.services.apiservices.model.DatabaseSequence and update: { "$inc" : { "seq" : 1}} in collection: database_sequences
2020-07-12 22:07:44,279 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:07:44,281 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 22:07:44,283 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 22:07:44,284 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@32257fd3)
2020-07-12 22:07:44,285 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:07:44,287 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:44,289 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,290 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1024dba7)
2020-07-12 22:07:44,305 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "27"}}, Fields: {}, Sort: {}
2020-07-12 22:07:44,306 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "27"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemSubCategory in collection: item_sub_category
2020-07-12 22:07:44,308 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 22:07:44,318 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=27, categoryId=14, name=shopnow, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}}, com.initializers.services.apiservices.model.item.ItemSubCategory@72272149)
2020-07-12 22:07:44,332 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemSubCategory@72272149, Document{{_id=27, categoryId=14, name=shopnow, offer=10, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 22:07:44,333 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, categoryId, name, offer, _class]
2020-07-12 22:07:44,368 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemSubCategory@72272149, Document{{_id=27, categoryId=14, name=shopnow, offer=10, _class=com.initializers.services.apiservices.model.item.ItemSubCategory}})
2020-07-12 22:07:44,369 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:07:44,371 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemDetails in collection: item_details
2020-07-12 22:07:44,373 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}})
2020-07-12 22:07:44,374 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=2, categoryId=14, subCategoryId=27, name=Green Gram, description=Document{{itemProperties=, sellerName=, disclaimer=}}, imageLinks=[http://res.cloudinary.com/dsywyhhdl/image/upload/v1587309844/jqykzaibqz7sw46i6woa.jpg, http://res.cloudinary.com/dsywyhhdl/image/upload/v1587310364/bbw9wnxnywnuljrhddil.jpg], status=Active, _class=com.initializers.services.apiservices.model.item.ItemDetails}}, com.initializers.services.apiservices.model.item.ItemDetails@4aba2ff8)
2020-07-12 22:07:44,375 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:07:44,378 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:44,380 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,381 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34acf5eb)
2020-07-12 22:07:44,383 DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "id" : { "$numberLong" : "14"}}, Fields: {}, Sort: {}
2020-07-12 22:07:44,385 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "14"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemCategory in collection: item_category
2020-07-12 22:07:44,387 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 22:07:44,395 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}}, com.initializers.services.apiservices.model.item.ItemCategory@320b5f42)
2020-07-12 22:07:44,401 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemCategory@320b5f42, Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 22:07:44,401 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, name, description, offer, imageLink, _class]
2020-07-12 22:07:44,404 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemCategory@320b5f42, Document{{_id=14, name=top product, description=upto 60% off, offer=20, imageLink=http://res.cloudinary.com/dsywyhhdl/image/upload/v1584896755/jgrs3gcizcofn0elivjf.jpg, _class=com.initializers.services.apiservices.model.item.ItemCategory}})
2020-07-12 22:07:44,419 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(com.initializers.services.apiservices.model.item.ItemAvailability@114af538, Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,419 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Inserting Document containing fields: [_id, itemId, actualPrice, discount, discountPrice, value, unit, available, _class] in collection: item_availability
2020-07-12 22:07:44,425 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(com.initializers.services.apiservices.model.item.ItemAvailability@114af538, Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,609 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:07:44,613 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:44,615 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,617 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a2fc4db)
2020-07-12 22:07:44,694 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:07:44,698 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:44,700 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:44,701 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@59a7dca)
2020-07-12 22:07:54,171 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:07:54,179 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:54,182 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:07:54,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:54,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b54cb38)
2020-07-12 22:07:54,191 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:07:54,194 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:54,203 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:54,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@519c271e)
2020-07-12 22:07:54,204 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:54,205 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@705d254e)
2020-07-12 22:07:58,155 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "15"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:07:58,164 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:07:58,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:07:58,169 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:07:58,170 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@2d61298c)
2020-07-12 22:07:58,171 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=15, available=Y}} for Document{{}} fields.
2020-07-12 22:07:58,172 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "15"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:43:01,258 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:43:01,268 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:43:01,269 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:43:01,319 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:43:01,322 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:43:01,324 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:43:01,855 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:43:01,856 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:43:01,858 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:43:01,859 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1f2d41fa)
2020-07-12 22:43:02,020 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:43:02,021 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:43:02,023 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:43:02,024 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7112c467)
2020-07-12 22:44:33,577 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:44:33,586 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:44:33,591 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:33,622 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:44:33,625 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:44:33,626 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:34,087 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:44:34,088 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:34,090 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:44:34,091 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@393ce9d)
2020-07-12 22:44:34,106 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:44:34,107 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:34,108 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:44:34,109 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1dd74b04)
2020-07-12 22:44:57,797 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:44:57,817 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:44:57,831 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:57,996 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:44:58,001 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:44:58,003 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:58,252 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:44:58,254 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:58,255 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:44:58,256 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@653c73a)
2020-07-12 22:44:58,317 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{id=15}} for Document{{}} fields.
2020-07-12 22:44:58,318 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "_id" : { "$numberLong" : "15"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:44:58,320 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:44:58,321 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@72ea1f43)
2020-07-12 22:45:16,458 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:45:16,460 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:16,462 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:16,463 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@273093a2)
2020-07-12 22:45:16,492 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:45:16,498 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:45:16,499 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:16,502 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:16,503 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@52900c80)
2020-07-12 22:45:16,504 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:16,505 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@37615897)
2020-07-12 22:45:42,511 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:45:42,518 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:45:42,519 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:42,519 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:45:42,522 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:45:42,527 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:42,531 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14f40d97)
2020-07-12 22:45:42,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:42,532 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6aa1124e)
2020-07-12 22:45:42,532 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:42,555 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:45:42,559 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:45:42,563 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:45:42,564 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:45:42,565 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:42,565 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:42,579 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:42,591 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5659a390)
2020-07-12 22:45:42,592 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:42,593 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@752d5db0)
2020-07-12 22:45:58,696 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:45:58,697 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:58,704 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:45:58,705 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:58,706 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@e94bd1f)
2020-07-12 22:45:58,713 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:45:58,715 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:58,717 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:58,718 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@c2d74c0)
2020-07-12 22:45:58,719 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:58,724 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@73db0247)
2020-07-12 22:45:58,795 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 22:45:58,796 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:45:58,799 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:45:58,800 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:45:58,803 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:58,804 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@39163c9d)
2020-07-12 22:45:58,805 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:45:58,806 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5da40512)
2020-07-12 22:49:56,559 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:49:56,561 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:49:56,563 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:49:56,572 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-4] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:49:56,581 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:49:56,581 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:49:56,582 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@743aeb57)
2020-07-12 22:49:56,585 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:49:56,598 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@34f05352)
2020-07-12 22:49:56,599 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:49:56,600 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@50546f4e)
2020-07-12 22:49:56,745 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:49:56,749 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 22:49:56,755 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:49:56,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:49:56,759 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:49:56,760 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7c39400c)
2020-07-12 22:49:56,761 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:49:56,762 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@6cc9f478)
2020-07-12 22:55:14,623 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:55:14,629 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:55:14,630 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:55:14,747 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:55:14,756 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 22:55:14,757 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:56:16,159 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{id=2}} for Document{{}} fields.
2020-07-12 22:56:16,160 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "_id" : { "$numberLong" : "2"}} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:56:16,165 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:56:16,174 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:56:16,175 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:56:16,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:56:16,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=2, itemId=1, actualPrice=200.0, discount=10, discountPrice=180.0, value=2, unit=KG, available=N, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7030492a)
2020-07-12 22:56:16,181 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:56:16,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@783da719)
2020-07-12 22:56:16,182 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:56:16,183 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5e7e303e)
2020-07-12 22:56:16,430 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-4] Executing aggregation: [{ "$project" : { "key" : "$_id", "value" : "$name"}}] in collection item_sub_category
2020-07-12 22:56:16,443 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:56:16,447 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:56:16,463 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:56:16,465 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:56:16,466 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@76e0c4ea)
2020-07-12 22:56:16,467 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:56:16,468 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@211a62c1)
2020-07-12 22:56:39,098 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:56:39,113 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:56:39,115 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:56:39,117 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:56:39,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@40c6acdb)
2020-07-12 22:56:39,118 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:56:39,119 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b05363d)
2020-07-12 22:58:18,533 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:58:18,539 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:58:18,540 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:58:18,542 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:18,543 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@3d9b0dbc)
2020-07-12 22:58:18,544 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:18,545 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5a6213a1)
2020-07-12 22:58:24,149 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:58:24,156 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:58:24,157 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:58:24,160 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:24,161 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7b1ae2cd)
2020-07-12 22:58:24,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:24,162 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@276fbf41)
2020-07-12 22:58:24,172 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:58:24,175 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-10] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:58:24,176 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-10] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:58:24,177 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:24,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@105c9afb)
2020-07-12 22:58:24,178 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:24,179 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@5b29cfbf)
2020-07-12 22:58:31,502 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:58:31,508 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-8] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:58:31,509 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-8] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:58:31,515 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:31,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@14f03b54)
2020-07-12 22:58:31,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:31,518 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@7bdccefa)
2020-07-12 22:58:44,666 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 22:58:44,672 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-1] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 22:58:44,673 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-1] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 22:58:44,675 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:44,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@cc5d9ea)
2020-07-12 22:58:44,676 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 22:58:44,677 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@1470f289)
2020-07-12 23:00:18,496 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 23:00:18,500 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-2] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 23:00:18,501 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-2] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 23:00:18,510 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 23:00:18,513 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-3] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 23:00:18,515 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-3] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 23:01:03,381 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 23:01:03,384 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-5] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 23:01:03,386 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-5] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 23:01:03,437 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "22"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 23:01:03,440 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-6] Created query Document{{itemId=22, available=Y}} for Document{{}} fields.
2020-07-12 23:01:03,441 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-6] find using query: { "itemId" : { "$numberLong" : "22"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 23:01:11,713 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 23:01:11,717 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-7] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 23:01:11,718 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-7] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 23:01:11,720 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 23:01:11,721 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@48e7824)
2020-07-12 23:01:11,722 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 23:01:11,722 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@16f85488)
2020-07-12 23:01:46,503 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] Executing aggregation: [{ "$lookup" : { "from" : "item_sub_category", "localField" : "subCategoryId", "foreignField" : "_id", "as" : "join_subcat"}}, { "$lookup" : { "from" : "item_category", "localField" : "categoryId", "foreignField" : "_id", "as" : "join_cat"}}, { "$match" : { "_id" : { "$numberLong" : "2"}}}, { "$project" : { "_id" : 1, "name" : 1, "subCategoryId" : 1, "imageLinks" : 1, "description" : 1, "itemAvailabilities" : 1, "status" : 1, "categoryId" : 1, "subCategoryName" : "$join_subcat.name", "categoryName" : "$join_cat.name"}}] in collection item_details
2020-07-12 23:01:46,507 DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery [http-nio-8080-exec-9] Created query Document{{itemId=2, available=Y}} for Document{{}} fields.
2020-07-12 23:01:46,508 DEBUG org.springframework.data.mongodb.core.MongoTemplate [http-nio-8080-exec-9] find using query: { "itemId" : { "$numberLong" : "2"}, "available" : "Y"} fields: Document{{}} for class: class com.initializers.services.apiservices.model.item.ItemAvailability in collection: item_availability
2020-07-12 23:01:46,510 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 23:01:46,511 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=14, itemId=2, actualPrice=351.0, discount=2, discountPrice=344.0, value=750, unit=g, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@38aeaa35)
2020-07-12 23:01:46,514 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}})
2020-07-12 23:01:46,516 DEBUG org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert(Document{{_id=15, itemId=2, actualPrice=120.0, discount=10, discountPrice=108.0, value=1, unit=KG, available=Y, _class=com.initializers.services.apiservices.model.item.ItemAvailability}}, com.initializers.services.apiservices.model.item.ItemAvailability@738a50e1)
